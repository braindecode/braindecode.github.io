Search.setIndex({"docnames": ["api", "auto_examples/advanced_training/index", "auto_examples/advanced_training/plot_bcic_iv_4_ecog_cropped", "auto_examples/advanced_training/plot_data_augmentation", "auto_examples/advanced_training/plot_data_augmentation_search", "auto_examples/advanced_training/plot_relative_positioning", "auto_examples/advanced_training/sg_execution_times", "auto_examples/applied_examples/index", "auto_examples/applied_examples/plot_bcic_iv_4_ecog_trial", "auto_examples/applied_examples/plot_sleep_staging_chambon2018", "auto_examples/applied_examples/plot_sleep_staging_eldele2021", "auto_examples/applied_examples/plot_sleep_staging_usleep", "auto_examples/applied_examples/plot_tuh_eeg_corpus", "auto_examples/applied_examples/sg_execution_times", "auto_examples/datasets_io/benchmark_lazy_eager_loading", "auto_examples/datasets_io/index", "auto_examples/datasets_io/plot_benchmark_preprocessing", "auto_examples/datasets_io/plot_custom_dataset_example", "auto_examples/datasets_io/plot_load_save_datasets", "auto_examples/datasets_io/plot_mne_dataset_example", "auto_examples/datasets_io/plot_moabb_dataset_example", "auto_examples/datasets_io/plot_split_dataset", "auto_examples/datasets_io/plot_tuh_discrete_multitarget", "auto_examples/datasets_io/sg_execution_times", "auto_examples/index", "auto_examples/model_building/index", "auto_examples/model_building/plot_bcic_iv_2a_moabb_cropped", "auto_examples/model_building/plot_bcic_iv_2a_moabb_trial", "auto_examples/model_building/plot_how_train_test_and_tune", "auto_examples/model_building/plot_hyperparameter_tuning_with_scikit-learn", "auto_examples/model_building/plot_regression", "auto_examples/model_building/plot_train_in_pure_pytorch_and_pytorch_lightning", "auto_examples/model_building/sg_execution_times", "cite", "generated/braindecode.augmentation.AugmentedDataLoader", "generated/braindecode.augmentation.BandstopFilter", "generated/braindecode.augmentation.ChannelsDropout", "generated/braindecode.augmentation.ChannelsShuffle", "generated/braindecode.augmentation.ChannelsSymmetry", "generated/braindecode.augmentation.Compose", "generated/braindecode.augmentation.FTSurrogate", "generated/braindecode.augmentation.FrequencyShift", "generated/braindecode.augmentation.GaussianNoise", "generated/braindecode.augmentation.IdentityTransform", "generated/braindecode.augmentation.Mixup", "generated/braindecode.augmentation.SensorsRotation", "generated/braindecode.augmentation.SensorsXRotation", "generated/braindecode.augmentation.SensorsYRotation", "generated/braindecode.augmentation.SensorsZRotation", "generated/braindecode.augmentation.SignFlip", "generated/braindecode.augmentation.SmoothTimeMask", "generated/braindecode.augmentation.TimeReverse", "generated/braindecode.augmentation.Transform", "generated/braindecode.augmentation.functional.bandstop_filter", "generated/braindecode.augmentation.functional.channels_dropout", "generated/braindecode.augmentation.functional.channels_permute", "generated/braindecode.augmentation.functional.channels_shuffle", "generated/braindecode.augmentation.functional.frequency_shift", "generated/braindecode.augmentation.functional.ft_surrogate", "generated/braindecode.augmentation.functional.gaussian_noise", "generated/braindecode.augmentation.functional.identity", "generated/braindecode.augmentation.functional.mixup", "generated/braindecode.augmentation.functional.sensors_rotation", "generated/braindecode.augmentation.functional.sign_flip", "generated/braindecode.augmentation.functional.smooth_time_mask", "generated/braindecode.augmentation.functional.time_reverse", "generated/braindecode.classifier.EEGClassifier", "generated/braindecode.datasets.BCICompetitionIVDataset4", "generated/braindecode.datasets.BNCI2014001", "generated/braindecode.datasets.BaseConcatDataset", "generated/braindecode.datasets.BaseDataset", "generated/braindecode.datasets.HGD", "generated/braindecode.datasets.MOABBDataset", "generated/braindecode.datasets.SleepPhysionet", "generated/braindecode.datasets.TUH", "generated/braindecode.datasets.TUHAbnormal", "generated/braindecode.datasets.WindowsDataset", "generated/braindecode.datasets.create_from_X_y", "generated/braindecode.datasets.create_from_mne_epochs", "generated/braindecode.datasets.create_from_mne_raw", "generated/braindecode.datautil.load_concat_dataset", "generated/braindecode.datautil.save_concat_dataset", "generated/braindecode.models.ATCNet", "generated/braindecode.models.Deep4Net", "generated/braindecode.models.DeepSleepNet", "generated/braindecode.models.EEGConformer", "generated/braindecode.models.EEGITNet", "generated/braindecode.models.EEGInception", "generated/braindecode.models.EEGInceptionERP", "generated/braindecode.models.EEGInceptionMI", "generated/braindecode.models.EEGModuleMixin", "generated/braindecode.models.EEGNetv1", "generated/braindecode.models.EEGNetv4", "generated/braindecode.models.EEGResNet", "generated/braindecode.models.HybridNet", "generated/braindecode.models.ShallowFBCSPNet", "generated/braindecode.models.SleepStagerBlanco2020", "generated/braindecode.models.SleepStagerChambon2018", "generated/braindecode.models.SleepStagerEldele2021", "generated/braindecode.models.TCN", "generated/braindecode.models.TIDNet", "generated/braindecode.models.TimeDistributed", "generated/braindecode.models.USleep", "generated/braindecode.models.get_output_shape", "generated/braindecode.preprocessing.Crop", "generated/braindecode.preprocessing.DropChannels", "generated/braindecode.preprocessing.Filter", "generated/braindecode.preprocessing.Pick", "generated/braindecode.preprocessing.Preprocessor", "generated/braindecode.preprocessing.Resample", "generated/braindecode.preprocessing.SetEEGReference", "generated/braindecode.preprocessing.create_fixed_length_windows", "generated/braindecode.preprocessing.create_windows_from_events", "generated/braindecode.preprocessing.create_windows_from_target_channels", "generated/braindecode.preprocessing.exponential_moving_demean", "generated/braindecode.preprocessing.exponential_moving_standardize", "generated/braindecode.preprocessing.filterbank", "generated/braindecode.preprocessing.preprocess", "generated/braindecode.preprocessing.scale", "generated/braindecode.regressor.EEGRegressor", "generated/braindecode.samplers.BalancedSequenceSampler", "generated/braindecode.samplers.RecordingSampler", "generated/braindecode.samplers.RelativePositioningSampler", "generated/braindecode.samplers.SequenceSampler", "generated/braindecode.training.CroppedLoss", "generated/braindecode.training.CroppedTimeSeriesEpochScoring", "generated/braindecode.training.CroppedTrialEpochScoring", "generated/braindecode.training.PostEpochTrainScoring", "generated/braindecode.training.TimeSeriesLoss", "generated/braindecode.training.mixup_criterion", "generated/braindecode.training.predict_trials", "generated/braindecode.training.trial_preds_from_window_preds", "generated/braindecode.util.set_random_seeds", "generated/braindecode.visualization.compute_amplitude_gradients", "generated/braindecode.visualization.plot_confusion_matrix", "help", "index", "install/install", "install/install_pip", "install/install_source", "whats_new"], "filenames": ["api.rst", "auto_examples/advanced_training/index.rst", "auto_examples/advanced_training/plot_bcic_iv_4_ecog_cropped.rst", "auto_examples/advanced_training/plot_data_augmentation.rst", "auto_examples/advanced_training/plot_data_augmentation_search.rst", "auto_examples/advanced_training/plot_relative_positioning.rst", "auto_examples/advanced_training/sg_execution_times.rst", "auto_examples/applied_examples/index.rst", "auto_examples/applied_examples/plot_bcic_iv_4_ecog_trial.rst", "auto_examples/applied_examples/plot_sleep_staging_chambon2018.rst", "auto_examples/applied_examples/plot_sleep_staging_eldele2021.rst", "auto_examples/applied_examples/plot_sleep_staging_usleep.rst", "auto_examples/applied_examples/plot_tuh_eeg_corpus.rst", "auto_examples/applied_examples/sg_execution_times.rst", "auto_examples/datasets_io/benchmark_lazy_eager_loading.rst", "auto_examples/datasets_io/index.rst", "auto_examples/datasets_io/plot_benchmark_preprocessing.rst", "auto_examples/datasets_io/plot_custom_dataset_example.rst", "auto_examples/datasets_io/plot_load_save_datasets.rst", "auto_examples/datasets_io/plot_mne_dataset_example.rst", "auto_examples/datasets_io/plot_moabb_dataset_example.rst", "auto_examples/datasets_io/plot_split_dataset.rst", "auto_examples/datasets_io/plot_tuh_discrete_multitarget.rst", "auto_examples/datasets_io/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/model_building/index.rst", "auto_examples/model_building/plot_bcic_iv_2a_moabb_cropped.rst", "auto_examples/model_building/plot_bcic_iv_2a_moabb_trial.rst", "auto_examples/model_building/plot_how_train_test_and_tune.rst", "auto_examples/model_building/plot_hyperparameter_tuning_with_scikit-learn.rst", "auto_examples/model_building/plot_regression.rst", "auto_examples/model_building/plot_train_in_pure_pytorch_and_pytorch_lightning.rst", "auto_examples/model_building/sg_execution_times.rst", "cite.rst", "generated/braindecode.augmentation.AugmentedDataLoader.rst", "generated/braindecode.augmentation.BandstopFilter.rst", "generated/braindecode.augmentation.ChannelsDropout.rst", "generated/braindecode.augmentation.ChannelsShuffle.rst", "generated/braindecode.augmentation.ChannelsSymmetry.rst", "generated/braindecode.augmentation.Compose.rst", "generated/braindecode.augmentation.FTSurrogate.rst", "generated/braindecode.augmentation.FrequencyShift.rst", "generated/braindecode.augmentation.GaussianNoise.rst", "generated/braindecode.augmentation.IdentityTransform.rst", "generated/braindecode.augmentation.Mixup.rst", "generated/braindecode.augmentation.SensorsRotation.rst", "generated/braindecode.augmentation.SensorsXRotation.rst", "generated/braindecode.augmentation.SensorsYRotation.rst", "generated/braindecode.augmentation.SensorsZRotation.rst", "generated/braindecode.augmentation.SignFlip.rst", "generated/braindecode.augmentation.SmoothTimeMask.rst", "generated/braindecode.augmentation.TimeReverse.rst", "generated/braindecode.augmentation.Transform.rst", "generated/braindecode.augmentation.functional.bandstop_filter.rst", "generated/braindecode.augmentation.functional.channels_dropout.rst", "generated/braindecode.augmentation.functional.channels_permute.rst", "generated/braindecode.augmentation.functional.channels_shuffle.rst", "generated/braindecode.augmentation.functional.frequency_shift.rst", "generated/braindecode.augmentation.functional.ft_surrogate.rst", "generated/braindecode.augmentation.functional.gaussian_noise.rst", "generated/braindecode.augmentation.functional.identity.rst", "generated/braindecode.augmentation.functional.mixup.rst", "generated/braindecode.augmentation.functional.sensors_rotation.rst", "generated/braindecode.augmentation.functional.sign_flip.rst", "generated/braindecode.augmentation.functional.smooth_time_mask.rst", "generated/braindecode.augmentation.functional.time_reverse.rst", "generated/braindecode.classifier.EEGClassifier.rst", "generated/braindecode.datasets.BCICompetitionIVDataset4.rst", "generated/braindecode.datasets.BNCI2014001.rst", "generated/braindecode.datasets.BaseConcatDataset.rst", "generated/braindecode.datasets.BaseDataset.rst", "generated/braindecode.datasets.HGD.rst", "generated/braindecode.datasets.MOABBDataset.rst", "generated/braindecode.datasets.SleepPhysionet.rst", "generated/braindecode.datasets.TUH.rst", "generated/braindecode.datasets.TUHAbnormal.rst", "generated/braindecode.datasets.WindowsDataset.rst", "generated/braindecode.datasets.create_from_X_y.rst", "generated/braindecode.datasets.create_from_mne_epochs.rst", "generated/braindecode.datasets.create_from_mne_raw.rst", "generated/braindecode.datautil.load_concat_dataset.rst", "generated/braindecode.datautil.save_concat_dataset.rst", "generated/braindecode.models.ATCNet.rst", "generated/braindecode.models.Deep4Net.rst", "generated/braindecode.models.DeepSleepNet.rst", "generated/braindecode.models.EEGConformer.rst", "generated/braindecode.models.EEGITNet.rst", "generated/braindecode.models.EEGInception.rst", "generated/braindecode.models.EEGInceptionERP.rst", "generated/braindecode.models.EEGInceptionMI.rst", "generated/braindecode.models.EEGModuleMixin.rst", "generated/braindecode.models.EEGNetv1.rst", "generated/braindecode.models.EEGNetv4.rst", "generated/braindecode.models.EEGResNet.rst", "generated/braindecode.models.HybridNet.rst", "generated/braindecode.models.ShallowFBCSPNet.rst", "generated/braindecode.models.SleepStagerBlanco2020.rst", "generated/braindecode.models.SleepStagerChambon2018.rst", "generated/braindecode.models.SleepStagerEldele2021.rst", "generated/braindecode.models.TCN.rst", "generated/braindecode.models.TIDNet.rst", "generated/braindecode.models.TimeDistributed.rst", "generated/braindecode.models.USleep.rst", "generated/braindecode.models.get_output_shape.rst", "generated/braindecode.preprocessing.Crop.rst", "generated/braindecode.preprocessing.DropChannels.rst", "generated/braindecode.preprocessing.Filter.rst", "generated/braindecode.preprocessing.Pick.rst", "generated/braindecode.preprocessing.Preprocessor.rst", "generated/braindecode.preprocessing.Resample.rst", "generated/braindecode.preprocessing.SetEEGReference.rst", "generated/braindecode.preprocessing.create_fixed_length_windows.rst", "generated/braindecode.preprocessing.create_windows_from_events.rst", "generated/braindecode.preprocessing.create_windows_from_target_channels.rst", "generated/braindecode.preprocessing.exponential_moving_demean.rst", "generated/braindecode.preprocessing.exponential_moving_standardize.rst", "generated/braindecode.preprocessing.filterbank.rst", "generated/braindecode.preprocessing.preprocess.rst", "generated/braindecode.preprocessing.scale.rst", "generated/braindecode.regressor.EEGRegressor.rst", "generated/braindecode.samplers.BalancedSequenceSampler.rst", "generated/braindecode.samplers.RecordingSampler.rst", "generated/braindecode.samplers.RelativePositioningSampler.rst", "generated/braindecode.samplers.SequenceSampler.rst", "generated/braindecode.training.CroppedLoss.rst", "generated/braindecode.training.CroppedTimeSeriesEpochScoring.rst", "generated/braindecode.training.CroppedTrialEpochScoring.rst", "generated/braindecode.training.PostEpochTrainScoring.rst", "generated/braindecode.training.TimeSeriesLoss.rst", "generated/braindecode.training.mixup_criterion.rst", "generated/braindecode.training.predict_trials.rst", "generated/braindecode.training.trial_preds_from_window_preds.rst", "generated/braindecode.util.set_random_seeds.rst", "generated/braindecode.visualization.compute_amplitude_gradients.rst", "generated/braindecode.visualization.plot_confusion_matrix.rst", "help.rst", "index.rst", "install/install.rst", "install/install_pip.rst", "install/install_source.rst", "whats_new.rst"], "titles": ["API Reference", "Advanced neural network training strategies", "Fingers flexion cropped decoding on BCIC IV 4 ECoG Dataset", "Data Augmentation on BCIC IV 2a Dataset", "Searching the best data augmentation on BCIC IV 2a Dataset", "Self-supervised learning on EEG with relative positioning", "Computation times", "Applied examples on real-world datasets", "Fingers flexion decoding on BCIC IV 4 ECoG Dataset", "Sleep staging on the Sleep Physionet dataset using Chambon2018 network", "Sleep staging on the Sleep Physionet dataset using Eldele2021", "Sleep staging on the Sleep Physionet dataset using U-Sleep network", "Process a big data EEG resource (TUH EEG Corpus)", "Computation times", "Benchmarking eager and lazy loading", "Loading and organizing data", "Benchmarking preprocessing with parallelization and serialization", "Custom Dataset Example", "Load and save dataset example", "MNE Dataset Example", "MOABB Dataset Example", "Split Dataset Example", "Multiple discrete targets with the TUH EEG Corpus", "Computation times", "Examples", "Basic model building and training", "Cropped Decoding on BCIC IV 2a Dataset", "Basic Brain Decoding on EEG Data", "How to train, test and tune your model?", "Hyperparameter tuning with scikit-learn", "Convolutional neural network regression model on fake data.", "Training a Braindecode model in PyTorch", "Computation times", "How to cite Braindecode", "braindecode.augmentation.AugmentedDataLoader", "braindecode.augmentation.BandstopFilter", "braindecode.augmentation.ChannelsDropout", "braindecode.augmentation.ChannelsShuffle", "braindecode.augmentation.ChannelsSymmetry", "braindecode.augmentation.Compose", "braindecode.augmentation.FTSurrogate", "braindecode.augmentation.FrequencyShift", "braindecode.augmentation.GaussianNoise", "braindecode.augmentation.IdentityTransform", "braindecode.augmentation.Mixup", "braindecode.augmentation.SensorsRotation", "braindecode.augmentation.SensorsXRotation", "braindecode.augmentation.SensorsYRotation", "braindecode.augmentation.SensorsZRotation", "braindecode.augmentation.SignFlip", "braindecode.augmentation.SmoothTimeMask", "braindecode.augmentation.TimeReverse", "braindecode.augmentation.Transform", "braindecode.augmentation.functional.bandstop_filter", "braindecode.augmentation.functional.channels_dropout", "braindecode.augmentation.functional.channels_permute", "braindecode.augmentation.functional.channels_shuffle", "braindecode.augmentation.functional.frequency_shift", "braindecode.augmentation.functional.ft_surrogate", "braindecode.augmentation.functional.gaussian_noise", "braindecode.augmentation.functional.identity", "braindecode.augmentation.functional.mixup", "braindecode.augmentation.functional.sensors_rotation", "braindecode.augmentation.functional.sign_flip", "braindecode.augmentation.functional.smooth_time_mask", "braindecode.augmentation.functional.time_reverse", "braindecode.classifier.EEGClassifier", "braindecode.datasets.BCICompetitionIVDataset4", "braindecode.datasets.BNCI2014001", "braindecode.datasets.BaseConcatDataset", "braindecode.datasets.BaseDataset", "braindecode.datasets.HGD", "braindecode.datasets.MOABBDataset", "braindecode.datasets.SleepPhysionet", "braindecode.datasets.TUH", "braindecode.datasets.TUHAbnormal", "braindecode.datasets.WindowsDataset", "braindecode.datasets.create_from_X_y", "braindecode.datasets.create_from_mne_epochs", "braindecode.datasets.create_from_mne_raw", "braindecode.datautil.load_concat_dataset", "braindecode.datautil.save_concat_dataset", "braindecode.models.ATCNet", "braindecode.models.Deep4Net", "braindecode.models.DeepSleepNet", "braindecode.models.EEGConformer", "braindecode.models.EEGITNet", "braindecode.models.EEGInception", "braindecode.models.EEGInceptionERP", "braindecode.models.EEGInceptionMI", "braindecode.models.EEGModuleMixin", "braindecode.models.EEGNetv1", "braindecode.models.EEGNetv4", "braindecode.models.EEGResNet", "braindecode.models.HybridNet", "braindecode.models.ShallowFBCSPNet", "braindecode.models.SleepStagerBlanco2020", "braindecode.models.SleepStagerChambon2018", "braindecode.models.SleepStagerEldele2021", "braindecode.models.TCN", "braindecode.models.TIDNet", "braindecode.models.TimeDistributed", "braindecode.models.USleep", "braindecode.models.get_output_shape", "braindecode.preprocessing.Crop", "braindecode.preprocessing.DropChannels", "braindecode.preprocessing.Filter", "braindecode.preprocessing.Pick", "braindecode.preprocessing.Preprocessor", "braindecode.preprocessing.Resample", "braindecode.preprocessing.SetEEGReference", "braindecode.preprocessing.create_fixed_length_windows", "braindecode.preprocessing.create_windows_from_events", "braindecode.preprocessing.create_windows_from_target_channels", "braindecode.preprocessing.exponential_moving_demean", "braindecode.preprocessing.exponential_moving_standardize", "braindecode.preprocessing.filterbank", "braindecode.preprocessing.preprocess", "braindecode.preprocessing.scale", "braindecode.regressor.EEGRegressor", "braindecode.samplers.BalancedSequenceSampler", "braindecode.samplers.RecordingSampler", "braindecode.samplers.RelativePositioningSampler", "braindecode.samplers.SequenceSampler", "braindecode.training.CroppedLoss", "braindecode.training.CroppedTimeSeriesEpochScoring", "braindecode.training.CroppedTrialEpochScoring", "braindecode.training.PostEpochTrainScoring", "braindecode.training.TimeSeriesLoss", "braindecode.training.mixup_criterion", "braindecode.training.predict_trials", "braindecode.training.trial_preds_from_window_preds", "braindecode.util.set_random_seeds", "braindecode.visualization.compute_amplitude_gradients", "braindecode.visualization.plot_confusion_matrix", "Frequently Asked Questions (FAQ)", "Braindecode", "Installation", "Installing from PyPI", "Installing from sources", "What\u2019s new"], "terms": {"thi": [0, 2, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 22, 30, 46, 47, 48, 66, 67, 68, 69, 71, 73, 74, 75, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 106, 110, 111, 112, 114, 115, 118, 119, 121, 127, 132, 135, 139, 140], "i": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 26, 27, 29, 30, 33, 35, 39, 40, 41, 44, 45, 50, 52, 53, 57, 58, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 108, 109, 110, 111, 112, 117, 118, 119, 122, 127, 131, 132, 136, 137, 138, 140], "class": [0, 3, 4, 5, 9, 10, 11, 12, 14, 21, 26, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 134, 140], "camelcas": 0, "name": [0, 2, 5, 8, 9, 10, 11, 12, 16, 17, 18, 21, 22, 31, 38, 66, 68, 69, 70, 71, 72, 77, 80, 105, 106, 107, 108, 110, 119, 125, 126, 127, 140], "function": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 20, 22, 26, 27, 29, 30, 31, 33, 40, 52, 66, 69, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 104, 108, 110, 112, 118, 119, 125, 126, 127, 132, 140], "underscore_cas": 0, "braindecod": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 137, 138, 140], "base": [0, 2, 3, 4, 5, 8, 9, 10, 12, 16, 18, 20, 21, 26, 27, 28, 29, 30, 31, 34, 42, 44, 59, 61, 66, 68, 69, 82, 84, 85, 86, 87, 88, 89, 91, 92, 98, 104, 106, 107, 111, 112, 119, 121, 129, 140], "datautil": [0, 5, 18, 76, 140], "exampl": [1, 2, 8, 9, 10, 11, 14, 15, 16, 22, 23, 25, 30, 35, 37, 38, 42, 43, 44, 45, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 110, 135, 140], "explain": [1, 4, 24, 26, 86], "more": [1, 2, 3, 4, 5, 8, 9, 10, 11, 16, 22, 24, 26, 27, 28, 29, 66, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 109, 110, 119, 132, 139, 140], "topic": [1, 24, 33], "finger": [1, 6, 7, 13, 24, 67, 69, 71, 90, 95, 103, 108, 111, 113, 115, 117, 125, 126, 128, 132, 140], "flexion": [1, 6, 7, 13, 24, 67, 69, 90, 95, 103, 108, 111, 113, 115, 117, 125, 126, 128, 132, 140], "crop": [1, 6, 8, 10, 11, 12, 16, 20, 24, 25, 28, 29, 30, 31, 32, 66, 67, 69, 72, 73, 76, 90, 95, 103, 108, 111, 112, 115, 117, 119, 124, 125, 126, 128, 130, 132, 134, 140], "decod": [1, 3, 4, 6, 7, 13, 20, 22, 24, 25, 28, 29, 30, 31, 32, 33, 66, 67, 69, 72, 77, 83, 85, 90, 94, 95, 102, 103, 108, 111, 112, 113, 115, 117, 119, 124, 125, 126, 128, 130, 132, 134, 136, 140], "bcic": [1, 6, 7, 13, 20, 24, 25, 28, 31, 32, 34, 36, 39, 40, 41, 49, 50, 52, 67, 69, 72, 90, 95, 103, 108, 111, 112, 113, 115, 117, 124, 125, 126, 128, 132, 134, 140], "iv": [1, 6, 7, 13, 20, 21, 24, 25, 27, 28, 29, 31, 32, 34, 36, 39, 40, 41, 49, 50, 52, 67, 69, 72, 82, 89, 90, 95, 103, 108, 111, 112, 113, 115, 117, 124, 125, 126, 128, 132, 134, 140], "4": [1, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 67, 68, 69, 71, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 97, 100, 102, 103, 108, 111, 113, 115, 116, 117, 120, 121, 125, 126, 128, 132], "ecog": [1, 6, 7, 13, 24, 67, 69, 90, 95, 103, 108, 110, 111, 113, 115, 117, 125, 126, 128, 132, 136, 140], "dataset": [1, 6, 13, 14, 15, 16, 23, 25, 32, 34, 36, 39, 40, 41, 49, 50, 52, 66, 80, 82, 89, 90, 95, 97, 98, 101, 102, 103, 108, 111, 112, 113, 115, 117, 118, 119, 121, 123, 124, 125, 126, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140], "data": [1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 56, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 83, 85, 90, 95, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 124, 129, 132, 134, 135, 136, 140], "augment": [1, 6, 24, 69, 72, 85, 90, 95, 108, 112, 115, 117, 132, 136, 140], "2a": [1, 6, 20, 21, 24, 25, 27, 28, 29, 31, 32, 34, 36, 39, 40, 41, 49, 50, 52, 69, 72, 82, 89, 90, 95, 108, 112, 115, 117, 124, 132, 134, 140], "search": [1, 6, 24, 28, 29, 34, 36, 40, 50, 52, 66, 69, 72, 90, 95, 108, 112, 115, 117, 119, 132, 135, 140], "best": [1, 6, 24, 31, 34, 36, 40, 50, 52, 69, 72, 90, 95, 108, 112, 115, 117, 132], "self": [1, 4, 6, 11, 24, 31, 66, 69, 73, 82, 85, 90, 97, 108, 112, 117, 119, 121, 122, 123, 132, 135, 140], "supervis": [1, 4, 6, 24, 28, 31, 69, 73, 90, 97, 108, 112, 117, 121, 122, 132, 140], "learn": [1, 2, 3, 4, 6, 8, 9, 10, 11, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 42, 44, 50, 53, 54, 55, 56, 59, 61, 64, 66, 69, 72, 73, 83, 87, 88, 90, 94, 95, 97, 98, 108, 112, 115, 117, 119, 121, 122, 132, 134, 136, 138, 140], "eeg": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 106, 107, 108, 110, 111, 112, 115, 117, 118, 121, 122, 129, 132, 134, 136, 140], "rel": [1, 6, 24, 28, 29, 69, 73, 90, 97, 108, 112, 117, 121, 122, 132], "posit": [1, 6, 24, 26, 35, 45, 46, 47, 48, 50, 53, 62, 64, 69, 73, 90, 97, 108, 112, 117, 121, 122, 131, 132], "go": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 104], "end": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 33, 66, 89, 104, 109, 111, 112, 119, 125, 126, 127, 140], "download": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 67, 74, 75, 138], "full": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 132], "code": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 82, 85, 86, 87, 88, 98, 99, 100, 135, 137, 139, 140], "tutori": [2, 3, 4, 5, 8, 9, 10, 11, 22, 24, 26, 27, 28, 29, 31, 139, 140], "show": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 27, 28, 29, 30, 31, 71, 90, 140], "you": [2, 3, 4, 5, 8, 9, 11, 12, 16, 17, 18, 19, 21, 22, 24, 26, 27, 28, 31, 33, 66, 119, 127, 135, 137, 138, 139], "how": [2, 3, 4, 5, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 32, 66, 69, 72, 90, 95, 104, 108, 110, 112, 115, 117, 119, 132, 140], "deep": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 33, 42, 59, 83, 87, 88, 94, 95, 97, 98, 100, 134, 136, 138], "bci": [2, 4, 8, 21, 26, 27, 28, 29, 40, 58, 67, 68, 82, 89, 100], "competit": [2, 4, 8, 11, 14, 21, 26, 27, 28, 29, 67, 68, 87, 88], "us": [2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 33, 35, 37, 38, 42, 44, 45, 46, 47, 48, 51, 54, 56, 58, 59, 62, 66, 68, 71, 76, 82, 85, 86, 87, 88, 89, 91, 93, 94, 96, 99, 100, 104, 106, 107, 109, 110, 119, 127, 130, 135, 138, 139, 140], "mode": [2, 24, 31, 66, 83, 106, 109, 119, 127, 139, 140], "For": [2, 4, 5, 8, 14, 26, 27, 28, 31, 66, 102, 106, 110, 119, 121, 127, 129, 132, 136, 137, 138, 139], "we": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 31, 33, 71, 85, 119, 132, 135, 138, 139], "predict": [2, 4, 5, 8, 9, 10, 11, 26, 27, 30, 66, 70, 90, 101, 119, 124, 125, 126, 127, 128, 129, 130, 131, 140], "5": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 66, 68, 82, 83, 84, 85, 87, 88, 89, 95, 96, 97, 98, 102, 119], "regress": [2, 5, 8, 24, 25, 29, 32, 69, 70, 83, 90, 95, 103, 111, 119, 124, 132, 140], "target": [2, 4, 5, 8, 9, 10, 15, 17, 18, 20, 23, 24, 26, 27, 28, 30, 44, 52, 61, 66, 67, 69, 70, 74, 76, 77, 79, 80, 111, 112, 119, 120, 121, 124, 125, 128, 129, 130, 134, 140], "correspond": [2, 5, 8, 12, 21, 26, 27, 28, 29, 30, 35, 38, 66, 67, 68, 69, 76, 77, 79, 110, 112, 117, 119, 120, 128], "each": [2, 4, 8, 9, 10, 11, 12, 14, 16, 17, 19, 21, 22, 28, 29, 30, 34, 35, 36, 40, 45, 49, 51, 53, 54, 58, 62, 63, 65, 66, 67, 68, 69, 71, 73, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 106, 109, 111, 112, 119, 121, 123, 125, 126, 127, 131], "The": [2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 18, 20, 21, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 57, 66, 68, 70, 71, 76, 82, 83, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 102, 104, 105, 106, 107, 109, 110, 116, 119, 129, 130, 134, 137, 139], "were": [2, 8, 9, 11, 14, 19, 29, 68, 69, 71, 85, 96, 106, 140], "record": [2, 4, 8, 9, 10, 11, 14, 16, 21, 22, 30, 67, 68, 71, 73, 74, 75, 79, 83, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 110, 111, 112, 120, 121, 122, 140], "time": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 51, 65, 66, 67, 69, 73, 76, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 114, 115, 119, 120, 124, 125, 128, 131, 140], "seri": [2, 4, 5, 8, 9, 10, 28, 29, 30, 66, 70, 76, 79, 96, 97, 119, 121, 125, 140], "25": [2, 5, 8, 9, 11, 12, 14, 28, 30, 31, 68, 82, 83, 84, 85, 87, 88, 91, 92, 95, 97, 106], "hz": [2, 3, 4, 5, 8, 9, 11, 16, 26, 28, 29, 30, 35, 41, 53, 57, 68, 82, 85, 89, 102, 106], "so": [2, 5, 8, 9, 10, 11, 14, 16, 18, 26, 27, 28, 29, 31, 35, 38, 66, 102, 111, 116, 119, 140], "an": [2, 5, 8, 10, 12, 14, 18, 22, 26, 28, 29, 31, 39, 45, 46, 47, 48, 52, 66, 68, 70, 71, 76, 79, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 102, 105, 106, 108, 109, 110, 112, 119, 121, 127, 135, 136, 140], "author": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 30, 33, 85, 86, 87, 88, 89, 91, 92], "maciej": [2, 8, 140], "sliwowski": [2, 8], "maciek": [2, 8], "gmail": [2, 5, 8, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 30], "com": [2, 3, 5, 8, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 30, 74, 75, 139], "moham": [2, 8, 140], "fattouh": [2, 8, 140], "mo": [2, 8], "licens": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 30], "bsd": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 30], "3": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 42, 44, 45, 59, 61, 62, 66, 67, 68, 71, 73, 82, 83, 87, 88, 89, 90, 93, 96, 100, 119, 120, 121, 130, 137, 140], "claus": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22], "first": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 26, 27, 29, 38, 50, 64, 66, 69, 73, 74, 75, 82, 83, 85, 95, 98, 106, 109, 110, 112, 119, 135, 139], "In": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 20, 21, 26, 27, 28, 29, 31, 35, 42, 44, 45, 46, 47, 48, 50, 53, 59, 61, 62, 64, 66, 68, 106, 107, 110, 119, 132], "avail": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 19, 22, 26, 27, 28, 29, 30, 31, 67, 73, 85, 87, 88, 98, 111, 112, 120, 121], "part": [2, 8, 16, 17, 19, 27, 28, 31, 36, 37, 50, 54, 56, 64, 85, 87, 88], "librari": [2, 3, 8, 24, 27, 28, 29, 33, 67, 139], "http": [2, 4, 5, 8, 12, 26, 27, 28, 29, 33, 44, 61, 66, 67, 73, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 102, 119, 129, 132, 134, 139], "searchwork": [2, 8, 67], "stanford": [2, 8, 67], "edu": [2, 4, 8, 67], "view": [2, 4, 8, 22, 67], "zk881ps0522": [2, 8, 67], "contain": [2, 5, 8, 12, 14, 16, 18, 21, 22, 30, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 53, 61, 62, 64, 66, 67, 69, 72, 73, 76, 110, 111, 112, 119, 120, 121, 122, 128, 129, 135, 140], "signal": [2, 3, 4, 5, 8, 9, 10, 11, 12, 18, 20, 27, 28, 29, 30, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 50, 53, 54, 56, 57, 58, 62, 64, 68, 70, 73, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 106, 109, 110, 111, 112, 116, 118, 119, 122, 140], "differ": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 18, 21, 26, 27, 28, 29, 68, 87, 88, 89, 102, 122, 137], "than": [2, 5, 8, 9, 10, 11, 12, 14, 16, 26, 31, 35, 53, 66, 79, 106, 112, 119, 140], "standard": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 31, 34, 42, 45, 46, 47, 48, 59, 62, 110, 115], "setup": [2, 4, 8, 26, 137], "multipl": [2, 3, 4, 8, 9, 10, 14, 15, 16, 21, 23, 24, 26, 28, 29, 66, 69, 74, 89, 101, 102, 106, 110, 111, 116, 118, 119, 130, 140], "trial": [2, 3, 4, 8, 19, 21, 26, 27, 28, 29, 30, 31, 66, 68, 71, 77, 79, 112, 119, 125, 126, 130, 131, 140], "usual": [2, 3, 4, 8, 16, 28, 31, 66, 119], "one": [2, 4, 8, 9, 10, 11, 14, 16, 20, 26, 28, 29, 31, 39, 44, 50, 64, 66, 68, 69, 82, 85, 89, 90, 102, 110, 111, 112, 119, 120, 121, 122, 135], "per": [2, 4, 5, 8, 9, 10, 11, 26, 44, 50, 64, 68, 71, 73, 89, 100, 110, 140], "here": [2, 3, 4, 5, 8, 10, 11, 12, 21, 22, 24, 26, 27, 28, 29, 31, 41, 57, 79, 89, 111, 112], "chang": [2, 5, 8, 14, 18, 30, 43, 66, 110, 119, 127, 139], "ar": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 33, 35, 44, 61, 66, 69, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 110, 111, 112, 116, 119, 122, 124, 128, 135, 137, 138, 139, 140], "sampl": [2, 3, 4, 5, 8, 9, 10, 14, 16, 17, 26, 27, 28, 29, 30, 31, 35, 36, 37, 40, 41, 44, 45, 46, 47, 48, 50, 53, 56, 57, 58, 64, 66, 68, 70, 71, 73, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 106, 111, 112, 120, 121, 122, 123, 129, 135, 140], "frequenc": [2, 3, 4, 8, 11, 12, 16, 17, 26, 27, 28, 29, 30, 31, 35, 41, 53, 57, 71, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 106, 109, 116, 120, 140], "equal": [2, 8, 31, 77, 78, 79, 90, 103, 111], "If": [2, 8, 14, 18, 19, 22, 28, 29, 31, 33, 35, 44, 66, 67, 68, 69, 71, 72, 73, 74, 75, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 122, 123, 127, 128, 129, 130, 135, 139], "pleas": [2, 3, 4, 5, 8, 11, 12, 22, 26, 27, 28, 29, 31, 67, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 116, 139, 140], "cite": [2, 8, 67], "1": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 32, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 66, 67, 68, 69, 71, 73, 74, 75, 80, 82, 83, 87, 88, 89, 90, 93, 95, 96, 98, 100, 102, 103, 106, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 129, 130, 131, 134], "miller": [2, 8, 26, 27, 28, 29, 67], "kai": [2, 8, 67], "j": [2, 4, 5, 8, 26, 27, 28, 29, 30, 35, 38, 40, 42, 50, 53, 55, 58, 59, 64, 67, 83, 86, 91, 92, 94, 95, 97, 99, 100, 134], "A": [2, 3, 4, 5, 8, 9, 10, 16, 26, 27, 28, 29, 30, 34, 36, 37, 40, 52, 54, 56, 58, 66, 67, 69, 72, 74, 75, 84, 87, 88, 89, 91, 92, 96, 97, 100, 106, 110, 111, 112, 117, 119, 122, 130, 134, 140], "human": [2, 8, 30, 33, 38, 55, 67, 83, 94, 95, 106, 134], "electrocorticograph": [2, 8, 67], "analys": [2, 8, 28, 29, 67], "natur": [2, 8, 14, 67], "behaviour": [2, 8, 67], "11": [2, 3, 4, 5, 8, 10, 12, 17, 18, 19, 20, 21, 26, 27, 28, 30, 31, 67, 84], "2019": [2, 8, 30, 67], "1225": [2, 8, 67], "1235": [2, 8, 67], "doi": [2, 8, 10, 26, 27, 28, 29, 33, 67, 82, 83, 86, 87, 88, 94, 95, 96, 98, 100, 134], "org": [2, 4, 5, 8, 26, 27, 28, 29, 33, 44, 61, 66, 67, 73, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 102, 119, 129, 132, 134], "10": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 33, 38, 45, 46, 47, 48, 62, 66, 67, 68, 82, 83, 85, 86, 87, 88, 94, 95, 96, 98, 100, 106, 110, 119, 120, 134], "1038": [2, 8, 67], "s41562": [2, 8, 67], "019": [2, 8, 67, 96], "0678": [2, 8, 67], "import": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 40, 58, 135, 139], "copi": [2, 11, 16, 40, 58, 67, 104, 135], "numpi": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 17, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 59, 62, 66, 106, 109, 119, 132, 134], "np": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 28, 30, 31, 66, 114, 115, 118, 119, 120, 121, 122, 123, 130], "sklearn": [2, 4, 5, 8, 9, 10, 11, 16, 26, 27, 28, 29, 30, 66, 119, 127, 134, 140], "from": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 36, 37, 40, 44, 45, 46, 47, 48, 54, 56, 58, 62, 66, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 110, 111, 112, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 137, 140], "mne": [2, 3, 4, 8, 9, 10, 11, 12, 14, 15, 17, 18, 20, 22, 23, 24, 27, 29, 45, 62, 67, 69, 70, 73, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 135, 140], "set_log_level": [2, 8, 12, 14, 22], "bcicompetitionivdataset4": [2, 8, 140], "subject_id": [2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 67, 68, 71, 72, 73, 140], "can": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 26, 27, 28, 29, 31, 33, 41, 45, 62, 66, 69, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 106, 107, 109, 110, 119, 130, 137, 138, 140], "easili": [2, 8, 20, 27, 28, 29, 31, 121], "addit": [2, 8, 12, 17, 20, 21, 27, 28, 29, 31, 42, 59, 66, 68, 69, 70, 76, 79, 112, 119, 134], "info": [2, 3, 4, 8, 12, 14, 16, 17, 19, 20, 21, 26, 27, 28, 29, 31, 69, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 106, 107, 110, 121, 123, 135, 140], "store": [2, 4, 8, 9, 10, 11, 12, 14, 18, 22, 27, 28, 29, 31, 67, 69, 80, 140], "descript": [2, 5, 8, 12, 17, 18, 19, 20, 22, 26, 27, 28, 29, 31, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 83, 85, 87, 89, 91, 92, 93, 94, 95, 96, 102, 111, 112], "attribut": [2, 8, 27, 28, 29, 31, 66, 70, 76, 108, 119, 140], "case": [2, 8, 16, 21, 26, 27, 28, 29, 31, 66, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 110, 119, 132, 138, 140], "session": [2, 4, 8, 12, 18, 20, 21, 26, 27, 28, 29, 30, 31, 68, 71, 121], "column": [2, 8, 16, 18, 19, 21, 22, 26, 27, 28, 29, 31, 69, 76, 80, 90, 120, 121, 134], "select": [2, 4, 8, 9, 16, 20, 26, 27, 28, 29, 31, 35, 71, 110, 120], "valid": [2, 21, 26, 30, 31, 66, 98, 110, 111, 112, 119, 127, 128, 140], "final": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 26, 27, 28, 29, 31, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 115], "evalu": [2, 5, 8, 9, 10, 11, 14, 21, 29, 99], "train_set": [2, 3, 4, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31], "test_set": [2, 8, 28, 30, 31], "now": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 22, 26, 27, 29, 110, 139, 140], "appli": [2, 3, 4, 5, 8, 9, 10, 12, 16, 18, 19, 20, 26, 27, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 66, 70, 76, 96, 97, 101, 106, 108, 110, 116, 117, 119, 129, 140], "like": [2, 8, 16, 27, 28, 29, 31, 35, 40, 45, 53, 58, 62, 66, 77, 78, 79, 98, 106, 107, 119, 121, 139, 140], "bandpass": [2, 3, 4, 8, 20, 26, 27, 28, 29, 31, 68, 106, 116], "filter": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 20, 26, 27, 28, 29, 31, 35, 53, 68, 82, 83, 85, 87, 88, 89, 92, 95, 97, 99, 100, 102, 108, 109, 116, 140], "our": [2, 5, 8, 9, 10, 11, 12, 16, 20, 26, 27, 29, 31, 71, 137], "either": [2, 8, 27, 28, 29, 66, 68, 69, 71, 90, 106, 110, 119, 130], "provid": [2, 8, 9, 10, 11, 27, 29, 31, 33, 66, 68, 69, 70, 74, 75, 101, 106, 107, 108, 117, 119, 135], "raw": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 69, 70, 73, 74, 75, 79, 84, 104, 105, 106, 107, 108, 110, 111, 112, 116, 118, 136, 140], "epoch": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 17, 18, 19, 21, 26, 27, 28, 29, 30, 31, 66, 69, 76, 78, 79, 104, 105, 106, 107, 108, 110, 111, 112, 119, 122, 125, 126, 127, 140], "your": [2, 3, 4, 8, 14, 16, 21, 24, 25, 26, 27, 29, 32, 33, 66, 69, 72, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 108, 112, 115, 117, 119, 132, 135, 137], "own": [2, 8, 26, 27, 28, 29, 31, 71, 135], "object": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 18, 19, 21, 26, 27, 28, 29, 30, 31, 39, 70, 73, 74, 75, 76, 79, 104, 108, 111, 112, 117, 134, 140], "underli": [2, 5, 8, 27, 29, 108], "arrai": [2, 4, 8, 11, 17, 22, 27, 28, 29, 35, 45, 52, 53, 62, 66, 77, 78, 79, 106, 107, 108, 109, 119, 123, 130, 134], "step": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 18, 22, 27, 28, 29, 31, 79, 111, 112, 135], "taken": [2, 5, 8, 14], "process": [2, 4, 5, 7, 8, 13, 14, 15, 16, 22, 24, 28, 29, 69, 74, 108, 111, 117, 118, 140], "pipelin": [2, 5, 8, 28, 31], "onli": [2, 4, 5, 8, 9, 10, 11, 12, 14, 18, 21, 26, 28, 29, 31, 39, 52, 66, 71, 73, 79, 86, 87, 88, 89, 91, 92, 104, 106, 107, 109, 110, 112, 119, 128, 135, 139, 140], "cutoff": [2, 8, 16, 106], "proper": [2, 8], "other": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 18, 28, 29, 31, 52, 66, 71, 73, 82, 83, 84, 90, 93, 94, 95, 96, 97, 98, 99, 102, 119], "mai": [2, 3, 4, 5, 8, 9, 11, 16, 18, 26, 27, 28, 33, 66, 119, 127, 132, 135], "need": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 26, 27, 28, 31, 66, 82, 85, 89, 119, 132, 137, 140], "These": [2, 5, 8, 26, 27, 29], "prepocess": [2, 8, 27, 29], "directli": [2, 3, 5, 8, 12, 22, 26, 27, 29, 30, 66, 76, 108, 110, 119, 139], "fly": [2, 8, 27, 29, 70, 76, 140], "transform": [2, 5, 8, 9, 10, 11, 20, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 76, 77, 78, 79, 85, 90, 119, 140], "pytorch": [2, 8, 14, 22, 24, 25, 26, 27, 29, 32, 66, 69, 72, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 108, 112, 115, 117, 119, 130, 132, 138, 140], "torchvis": [2, 8, 27, 29], "preprocessor": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 18, 20, 26, 27, 28, 29, 31, 117, 140], "exponential_moving_standard": [2, 3, 4, 8, 26, 27, 28, 29, 31], "low_cut_hz": [2, 3, 4, 8, 26, 27, 28, 29, 31], "low": [2, 3, 4, 5, 8, 9, 10, 11, 16, 26, 27, 28, 29, 31, 35, 53, 87, 88, 106], "high_cut_hz": [2, 3, 4, 5, 8, 9, 10, 26, 27, 28, 29, 31], "200": [2, 8, 10, 14, 83], "high": [2, 3, 4, 8, 11, 26, 27, 28, 29, 31, 35, 53, 71, 87, 88, 102, 106, 120], "higher": [2, 5, 8, 31, 98], "paramet": [2, 3, 4, 5, 8, 10, 14, 16, 17, 18, 19, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 134, 140], "exponenti": [2, 3, 4, 8, 26, 27, 28, 29, 31, 102, 114, 115], "move": [2, 3, 4, 8, 14, 16, 26, 27, 28, 29, 31, 67, 90, 114, 115, 140], "factor_new": [2, 3, 4, 8, 26, 27, 28, 29, 31, 114, 115], "1e": [2, 3, 4, 8, 9, 10, 11, 26, 27, 28, 29, 31], "init_block_s": [2, 3, 4, 8, 26, 27, 28, 29, 31, 114, 115], "1000": [2, 3, 4, 8, 12, 21, 22, 26, 27, 28, 29, 31, 71, 87, 88, 121], "30": [2, 5, 8, 9, 10, 11, 12, 16, 26, 29, 30, 73, 95, 96, 97, 98, 102], "second": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 38, 68, 71, 74, 75, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 104], "limit": [2, 5, 8, 11, 12, 16, 104], "memori": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 66, 112, 119], "run": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 66, 68, 71, 79, 82, 85, 89, 96, 106, 108, 109, 111, 112, 119, 121, 132, 135, 139], "6": [2, 3, 4, 5, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 68, 71, 85, 106], "To": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 17, 22, 26, 27, 28, 29, 30, 31, 106, 138, 139], "obtain": [2, 3, 4, 5, 8, 9, 11, 26, 27, 45, 62, 66, 70, 71, 76, 119, 121], "whole": [2, 8, 9, 10], "should": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 20, 26, 27, 29, 35, 38, 45, 50, 53, 62, 64, 66, 67, 69, 70, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 104, 106, 107, 109, 110, 118, 119, 127, 135, 139], "valid_set": [2, 3, 8, 9, 10, 11, 26, 27, 30], "deepcopi": 2, "tmin": [2, 8, 12, 16, 19, 104], "24": [2, 5, 9, 10, 11, 12, 31, 96, 100, 107], "tmax": [2, 8, 12, 104], "n_job": [2, 3, 4, 5, 12, 14, 16, 26, 27, 28, 29, 31, 74, 75, 80, 106, 109, 111, 112, 113, 117, 140], "0": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 40, 42, 43, 44, 52, 54, 56, 58, 61, 66, 68, 69, 73, 74, 75, 79, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 119, 121, 130, 134], "baseconcatdataset": [2, 5, 9, 10, 12, 14, 16, 21, 30, 66, 77, 78, 79, 80, 111, 112, 117, 119, 121, 130, 140], "0x7f27bab46590": 2, "variabl": [2, 4, 8, 28, 29, 67, 132], "channel": [2, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 19, 30, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 56, 57, 58, 59, 61, 62, 64, 73, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 106, 107, 110, 111, 112, 116, 140], "type": [2, 3, 4, 8, 26, 27, 28, 31, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 61, 66, 69, 71, 77, 78, 79, 80, 89, 90, 101, 103, 106, 107, 109, 110, 111, 112, 114, 115, 117, 119, 121, 123, 129, 131, 134], "misc": [2, 4, 8, 76], "thu": [2, 4, 8, 104], "those": [2, 4, 5, 8, 12, 66, 106, 107, 119], "have": [2, 4, 5, 8, 11, 12, 14, 16, 17, 19, 21, 26, 27, 28, 29, 31, 45, 50, 62, 64, 66, 77, 78, 79, 89, 108, 110, 111, 119, 127, 135, 138, 139, 140], "further": [2, 4, 5, 8, 9, 10, 11, 26, 28, 31, 66, 119], "howev": [2, 3, 4, 5, 8, 11, 12, 14, 16, 21, 26, 27, 28, 30, 112], "mani": [2, 4, 5, 8, 16, 26, 28, 31, 69], "ignor": [2, 4, 8, 50, 66, 82, 85, 89, 105, 108, 111, 112, 119, 122], "perform": [2, 4, 8, 9, 10, 11, 26, 27, 28, 29, 31, 68, 69, 71, 82, 85, 89, 98, 114, 115, 140], "oper": [2, 3, 4, 8, 16, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 104, 109], "see": [2, 3, 4, 5, 8, 9, 10, 11, 16, 20, 24, 26, 27, 28, 29, 31, 44, 61, 66, 67, 68, 71, 73, 75, 76, 86, 90, 91, 92, 94, 99, 100, 104, 105, 106, 107, 109, 110, 111, 112, 119, 120, 122, 123, 129, 132, 135, 138, 139], "tool": [2, 4, 8, 73, 136, 139], "stabl": [2, 4, 5, 8, 16, 66, 73, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 119, 132, 134], "glossari": [2, 4, 8], "html": [2, 4, 5, 8, 12, 66, 73, 74, 75, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 119, 132, 134], "term": [2, 4, 8, 84, 90], "todo": 2, "ensur": [2, 102, 132, 138], "remov": [2, 3, 4, 5, 8, 9, 11, 26, 27, 28, 29, 30, 31, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 110, 131, 140], "pick_typ": [2, 3, 4, 8, 20, 26, 27, 28, 29, 31, 105], "true": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 26, 27, 28, 29, 30, 31, 44, 45, 46, 47, 48, 66, 69, 70, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 108, 110, 111, 112, 113, 116, 119, 122, 123, 125, 126, 127, 130, 132, 140], "lambda": [2, 3, 4, 5, 8, 9, 10, 26, 27, 28, 29, 31, 66, 93, 119], "x": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 77, 78, 79, 82, 84, 85, 89, 94, 96, 97, 98, 99, 100, 101, 102, 109, 114, 115, 118, 119, 124, 127, 128, 130], "1e6": [2, 3, 4, 5, 8, 9, 10, 12, 26, 27, 28, 29, 31], "pick": [2, 8, 10, 12, 20, 106, 111, 112, 113, 140], "convert": [2, 3, 4, 5, 8, 9, 10, 17, 19, 26, 27, 28, 29, 30, 31, 106], "v": [2, 3, 4, 5, 8, 10, 16, 26, 27, 28, 29, 31, 87, 88, 91, 92, 99], "uv": [2, 3, 4, 5, 8, 10, 26, 27, 28, 29, 31], "l_freq": [2, 3, 4, 5, 8, 9, 10, 16, 26, 27, 28, 29, 31, 106], "h_freq": [2, 3, 4, 5, 8, 9, 10, 16, 26, 27, 28, 29, 31, 106], "extract": [2, 8, 12, 14, 16, 17, 19, 22, 26, 31, 76, 87, 88, 89, 96, 98, 111, 112, 120, 122], "check": [2, 3, 4, 8, 9, 10, 11, 26, 27, 28, 29, 31, 33, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 102, 135, 138, 140], "thei": [2, 3, 4, 5, 8, 12, 14, 16, 26, 27, 28, 29, 30, 31, 110, 140], "same": [2, 3, 4, 5, 8, 9, 10, 11, 14, 18, 21, 26, 27, 28, 29, 31, 41, 50, 57, 64, 66, 71, 73, 98, 119, 122], "all": [2, 3, 4, 8, 12, 14, 16, 24, 26, 27, 28, 29, 31, 41, 42, 50, 57, 59, 64, 66, 67, 68, 71, 72, 73, 82, 85, 87, 88, 89, 90, 104, 106, 107, 109, 110, 111, 112, 119, 127, 140], "sfreq": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 35, 41, 53, 57, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 106, 119, 140], "assert": [2, 3, 4, 8, 12, 14, 26, 27, 28, 29, 31], "d": [2, 3, 4, 5, 8, 12, 14, 22, 26, 27, 28, 29, 30, 31, 36, 37, 40, 54, 56, 58, 82, 83, 92, 94, 95, 96, 100, 122, 134, 140], "target_sfreq": [2, 8], "temp": [2, 8], "home": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31], "runner": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31], "work": [2, 3, 4, 5, 8, 10, 12, 16, 18, 20, 22, 24, 26, 27, 28, 29, 30, 31, 66, 90, 102, 104, 119, 127, 136, 138, 140], "py": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32], "55": [2, 3, 4, 5, 8, 10, 13, 26, 27, 28, 29, 31], "userwarn": [2, 3, 4, 5, 8, 10, 11, 16, 18, 26, 27, 28, 29, 30, 31], "choic": [2, 3, 4, 5, 8, 10, 26, 27, 28, 29, 31, 85, 140], "cannot": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 31, 66, 104, 119], "save": [2, 3, 4, 5, 8, 10, 14, 15, 16, 23, 24, 26, 27, 28, 29, 31, 66, 69, 72, 80, 108, 112, 117, 119, 140], "warn": [2, 3, 4, 5, 8, 9, 10, 14, 16, 18, 26, 27, 28, 29, 30, 31, 68, 98, 105, 111, 112, 132, 140], "contrast": [2, 4, 5, 26, 35, 42, 50, 53, 59, 64], "trialwis": [2, 4, 8, 20, 26, 27, 29, 66, 119, 130, 140], "befor": [2, 11, 16, 26, 27, 28, 29, 31, 66, 69, 70, 73, 76, 82, 83, 84, 85, 95, 96, 97, 98, 114, 115, 119, 127, 132, 138, 140], "becaus": [2, 16, 26, 28, 29, 135], "know": [2, 3, 4, 26], "recept": [2, 26, 66, 119, 130], "field": [2, 26, 66, 110, 119, 130], "network": [2, 4, 5, 7, 8, 10, 13, 14, 25, 26, 27, 28, 31, 32, 33, 42, 59, 66, 69, 70, 73, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 111, 112, 117, 118, 119, 121, 123, 124, 130, 132, 134, 140], "larg": [2, 5, 14, 16, 26, 69, 112], "stride": [2, 9, 10, 11, 26, 77, 78, 79, 83, 85, 90, 95, 100, 111, 112], "choos": [2, 3, 4, 8, 18, 26, 27, 28, 29, 31], "input": [2, 3, 4, 8, 10, 11, 14, 21, 26, 27, 28, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 119, 140], "size": [2, 3, 4, 5, 14, 16, 26, 27, 28, 29, 30, 31, 35, 50, 53, 64, 66, 77, 78, 79, 82, 85, 87, 88, 89, 90, 96, 97, 99, 100, 102, 103, 106, 109, 111, 112, 119, 122, 124, 128, 130, 134], "fed": [2, 26, 46, 47, 48], "dure": [2, 4, 5, 8, 9, 10, 11, 12, 14, 26, 27, 28, 29, 31, 66, 67, 106, 110, 119, 140], "ha": [2, 3, 4, 5, 8, 10, 12, 20, 21, 22, 26, 27, 28, 29, 30, 31, 46, 47, 48, 66, 69, 70, 73, 76, 79, 86, 87, 88, 89, 91, 92, 102, 106, 111, 112, 119, 129, 135, 140], "larger": [2, 5, 26, 87, 88], "otherwis": [2, 14, 26, 28, 30, 79, 111, 112], "chosen": [2, 16, 18, 26, 31, 50, 66, 106, 119, 130], "effici": [2, 3, 16, 26], "explan": [2, 26, 116], "begin": [2, 26, 28, 29, 68, 96, 106, 111], "which": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 20, 21, 24, 26, 28, 29, 31, 33, 34, 37, 40, 45, 56, 58, 62, 66, 69, 70, 71, 76, 90, 98, 101, 106, 109, 110, 119, 121, 122, 123, 135], "rate": [2, 5, 14, 26, 27, 28, 29, 30, 31, 66, 68, 71, 85, 87, 88, 96, 97, 98, 102, 119, 140], "input_window_sampl": [2, 3, 4, 8, 14, 26, 27, 28, 29, 30, 31, 83, 85, 86, 87, 88, 91, 92, 93, 94, 95, 100, 103], "come": [2, 8, 14, 27, 29, 31, 123, 132], "some": [2, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 26, 27, 29, 33, 66, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 110, 119, 132], "predefin": [2, 8, 27, 29], "convolut": [2, 5, 8, 9, 11, 24, 25, 26, 27, 28, 29, 32, 33, 40, 42, 58, 59, 69, 70, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 102, 103, 111, 124, 132, 134, 140], "neural": [2, 4, 5, 8, 9, 10, 11, 14, 25, 26, 27, 28, 32, 33, 42, 59, 69, 70, 83, 84, 85, 87, 88, 89, 90, 94, 95, 96, 97, 98, 100, 103, 111, 124, 132, 134, 140], "architectur": [2, 5, 8, 9, 10, 11, 26, 27, 29, 66, 84, 85, 96, 97, 98, 102, 119, 136], "domain": [2, 4, 8, 16, 27, 29, 41, 57, 102, 106, 109], "shallow": [2, 8, 14, 26, 27, 30, 95], "convnet": [2, 8, 26, 27, 83, 94, 95], "visual": [2, 8, 9, 10, 11, 12, 26, 27, 29, 30, 33, 71, 83, 85, 94, 95, 136, 140], "pure": [2, 5, 8, 27, 29, 140], "therefor": [2, 8, 12, 16, 26, 27, 28, 29, 31, 127], "just": [2, 4, 8, 22, 27, 28, 29, 66, 83, 95, 119], "normal": [2, 5, 8, 9, 10, 27, 29, 96, 97, 118, 121, 134, 140], "nn": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 66, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 101, 102, 119, 130], "modul": [2, 4, 5, 8, 9, 10, 11, 14, 27, 29, 31, 66, 82, 85, 87, 88, 89, 98, 101, 119, 130, 132, 134, 138, 140], "torch": [2, 3, 4, 5, 8, 9, 10, 11, 14, 22, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 119, 124, 128, 129, 130, 132, 140], "shallowfbcspnet": [2, 3, 4, 8, 14, 26, 27, 28, 29, 30, 31], "util": [2, 3, 4, 5, 8, 9, 10, 11, 14, 18, 22, 26, 27, 29, 30, 31, 140], "set_random_se": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31, 140], "cuda": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 66, 106, 109, 119, 132, 138], "is_avail": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31], "gpu": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 31, 66, 119, 138, 140], "devic": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 34, 66, 119, 140], "els": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 26, 27, 28, 29, 30, 31, 66, 119], "cpu": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 31, 66, 119], "backend": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 132, 140], "cudnn": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 132, 140], "benchmark": [2, 3, 4, 5, 8, 9, 10, 11, 15, 23, 24, 26, 27, 28, 29, 30, 31, 69, 73, 75, 83, 95, 108, 111, 117, 132, 140], "set": [2, 4, 8, 9, 10, 11, 12, 14, 16, 17, 19, 22, 26, 28, 29, 30, 31, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 61, 66, 68, 69, 71, 83, 87, 88, 89, 95, 96, 97, 100, 102, 104, 107, 110, 111, 112, 119, 132, 138, 140], "random": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 29, 30, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 59, 71, 120, 121, 122, 123, 127, 132, 140], "seed": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 59, 132], "abl": [2, 3, 4, 5, 8, 9, 10, 11, 12, 26, 27, 29, 66, 119, 135], "roughli": [2, 3, 4, 5, 8, 9, 11, 26, 27, 71], "reproduc": [2, 3, 4, 5, 8, 9, 10, 11, 24, 26, 27, 29, 132, 140], "note": [2, 3, 4, 5, 8, 9, 11, 17, 20, 26, 27, 41, 57, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 110, 118, 119, 127, 132], "indetermin": [2, 3, 4, 5, 8, 9, 11, 26, 27], "still": [2, 3, 4, 5, 8, 9, 11, 26, 27, 28, 71], "make": [2, 3, 4, 5, 8, 9, 11, 12, 26, 27, 28, 29, 31, 98, 106, 135, 140], "substanti": [2, 3, 4, 5, 8, 9, 11, 14, 26, 27], "between": [2, 3, 4, 5, 8, 9, 11, 26, 27, 28, 35, 36, 37, 40, 41, 44, 45, 46, 47, 48, 52, 53, 54, 56, 58, 61, 68, 77, 78, 79, 83, 85, 95, 96, 104, 111, 112, 123, 128], "consist": [2, 3, 4, 5, 8, 9, 11, 26, 27, 46, 47, 48, 68, 71], "cost": [2, 3, 4, 5, 8, 9, 11, 26, 27], "increas": [2, 3, 4, 5, 8, 9, 10, 11, 16, 26, 27, 28, 89, 98], "cudnn_benchmark": [2, 3, 4, 5, 8, 9, 11, 26, 27, 132], "fals": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 40, 44, 45, 46, 47, 48, 58, 62, 66, 67, 69, 70, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 90, 95, 96, 97, 98, 99, 102, 104, 108, 110, 111, 112, 113, 116, 117, 119, 122, 123, 125, 126, 132, 134, 140], "20200220": [2, 3, 4, 8, 26, 27, 28, 29, 30, 31], "n_class": [2, 3, 4, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 66, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 119, 124, 128, 130], "number": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 22, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 59, 62, 64, 66, 69, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 106, 109, 111, 112, 116, 117, 119, 120, 121, 122, 123, 130, 131], "chan": [2, 3, 4, 8, 26, 27, 28, 29, 31, 68, 71], "n_chan": [2, 8, 11, 26, 27, 29, 30, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 119], "shape": [2, 3, 4, 5, 8, 9, 10, 11, 17, 20, 22, 26, 27, 28, 29, 31, 45, 62, 66, 84, 85, 90, 94, 96, 97, 98, 99, 100, 101, 102, 103, 123, 124, 128], "final_conv_length": [2, 3, 4, 8, 14, 26, 27, 28, 29, 30, 31, 83, 91, 92, 95], "2": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 29, 30, 35, 36, 37, 40, 41, 42, 44, 50, 53, 58, 59, 61, 64, 66, 68, 71, 73, 82, 83, 87, 88, 90, 91, 92, 93, 96, 98, 100, 102, 106, 110, 115, 119, 120, 121, 129, 130], "add_log_softmax": [2, 8, 30, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102], "send": [2, 3, 4, 8, 9, 10, 11, 16, 26, 27, 28, 29, 31], "get_output_shap": [2, 26, 30, 90, 140], "to_dense_prediction_model": [2, 26, 30, 90, 140], "local": [2, 5, 9, 10, 11, 14, 26, 30, 31, 67, 110, 135, 139], "lib": [2, 5, 9, 10, 11, 26, 30, 31], "python3": [2, 5, 9, 10, 11, 26, 30, 31], "site": [2, 5, 9, 10, 11, 26, 30, 31], "packag": [2, 5, 9, 10, 11, 26, 30, 31, 33, 137, 138], "deprec": [2, 5, 8, 9, 12, 26, 27, 30, 87, 140], "86": [2, 9, 30], "futurewarn": [2, 9, 29, 30, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102], "version": [2, 5, 9, 10, 18, 22, 29, 30, 66, 85, 90, 104, 105, 106, 107, 109, 110, 119, 135, 137, 138, 139], "eegmodulemixin": [2, 30, 140], "method": [2, 4, 5, 8, 12, 16, 21, 28, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 66, 67, 69, 70, 76, 82, 83, 84, 85, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 108, 110, 119, 120, 121, 122, 124, 125, 126, 127, 128, 140], "msg": [2, 9, 30], "categori": [2, 4, 9, 30], "calcul": [2, 3, 4, 26, 27, 28, 29, 31, 66, 100, 119], "output": [2, 3, 4, 5, 12, 14, 21, 26, 27, 28, 29, 30, 31, 66, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 109, 110, 111, 112, 119], "dummi": [2, 26], "n_preds_per_input": [2, 26, 30], "create_fixed_length_window": [2, 5, 12, 14, 16, 22, 30, 140], "It": [2, 3, 4, 8, 9, 10, 11, 18, 26, 27, 28, 29, 31, 40, 58, 66, 69, 76, 79, 98, 111, 112, 119, 136], "defin": [2, 5, 9, 10, 11, 12, 14, 20, 21, 26, 27, 29, 38, 52, 55, 66, 76, 82, 85, 89, 100, 112, 119, 122], "start_offset_sampl": [2, 14, 22, 30, 111], "stop_offset_sampl": [2, 14, 22, 30, 111, 140], "none": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 22, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 125, 126, 127, 132, 134, 140], "window_size_sampl": [2, 5, 8, 9, 10, 11, 12, 14, 17, 19, 22, 26, 30, 77, 78, 79, 111, 112, 113], "window_stride_sampl": [2, 5, 9, 10, 11, 12, 14, 17, 19, 22, 26, 30, 77, 78, 79, 111, 112], "drop_last_window": [2, 12, 14, 17, 19, 22, 26, 30, 77, 78, 79, 111, 112], "targets_from": [2, 76, 111, 119], "last_target_onli": [2, 8, 76, 111, 113], "preload": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 73, 74, 75, 79, 80, 110, 111, 112, 113, 117, 140], "thumb": [2, 8, 26], "": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 21, 22, 27, 29, 30, 31, 38, 40, 42, 45, 46, 47, 48, 55, 58, 59, 62, 66, 67, 68, 70, 71, 72, 73, 74, 75, 82, 88, 89, 91, 92, 97, 99, 102, 105, 106, 108, 110, 119, 120, 124, 127, 128], "consid": [2, 4, 28, 31, 46, 47, 48, 66, 119, 127], "well": [2, 5, 8, 12, 26, 27, 28, 31, 79, 111, 112, 136, 140], "encourag": [2, 8, 24, 26, 27], "find": [2, 4, 8, 29], "wai": [2, 5, 8, 16, 21, 24, 28, 98, 137, 139], "target_transform": [2, 8, 9, 10, 69, 140], "suppli": [2, 3, 5, 8, 9, 10, 11, 26, 27, 28], "eegclassifi": [2, 5, 9, 10, 11, 26, 27, 28, 29, 140], "croppedloss": [2, 26, 30], "criterion": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 66, 119], "criterion__loss_funct": [2, 26, 30], "loss": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 66, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 119, 124, 128, 129], "mean": [2, 3, 4, 8, 12, 14, 16, 26, 28, 29, 30, 31, 71, 83, 92, 95, 110, 114, 115, 119, 135], "default": [2, 8, 12, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 59, 66, 67, 73, 74, 75, 76, 79, 82, 85, 87, 88, 89, 90, 104, 105, 106, 107, 109, 110, 112, 119, 127, 132, 140], "found": [2, 8, 10, 12, 16, 18, 19, 20, 21, 26, 27, 28, 29, 31, 67, 110, 111, 112], "motor": [2, 4, 8, 26, 27, 68, 71, 82, 86, 89, 140], "strongli": [2, 8, 26, 27, 87, 88, 89], "hyperparamet": [2, 5, 8, 9, 10, 11, 14, 24, 25, 26, 27, 31, 32, 44, 66, 69, 72, 90, 95, 108, 112, 115, 117, 119, 132, 140], "optim": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 66, 71, 119], "cross": [2, 8, 16, 26, 27, 68], "skorch": [2, 3, 4, 5, 8, 9, 10, 11, 17, 26, 27, 28, 29, 30, 66, 77, 78, 79, 119, 140], "callback": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31, 66, 119, 127], "lrschedul": [2, 3, 4, 8, 26, 27, 28, 29, 30, 31], "helper": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30], "predefined_split": [2, 3, 5, 8, 9, 10, 11, 26, 27, 28, 30], "eegregressor": [2, 8, 30, 140], "croppedtimeseriesepochscor": 2, "timeseriesloss": 2, "valu": [2, 4, 5, 8, 9, 10, 11, 12, 26, 27, 29, 30, 31, 41, 44, 61, 66, 69, 70, 76, 79, 89, 100, 106, 107, 109, 110, 111, 112, 119, 128, 129, 130, 140], "good": [2, 8, 26, 27], "mi": [2, 8], "lr": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31, 66, 119], "0625": [2, 3, 4, 8, 26, 27, 28, 31], "01": [2, 3, 4, 8, 12, 13, 23, 26, 27, 28, 31, 32, 66, 87, 88, 119], "weight_decai": [2, 3, 4, 8, 26, 27, 28, 31], "batch_siz": [2, 3, 4, 5, 8, 9, 10, 11, 14, 22, 26, 27, 28, 29, 30, 31, 35, 44, 45, 53, 61, 62, 66, 84, 85, 90, 94, 96, 97, 98, 99, 100, 101, 103, 119, 124, 128, 130, 133], "27": [2, 4, 9, 28, 71], "64": [2, 3, 4, 5, 8, 10, 11, 14, 17, 19, 26, 27, 28, 31, 82, 92, 97], "n_epoch": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31], "8": [2, 3, 4, 5, 8, 9, 10, 11, 13, 14, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 32, 82, 85, 87, 88, 91, 92, 97, 116, 137], "regressor": [2, 8, 30, 140], "aggregate_predict": [2, 66, 119], "mse_loss": [2, 30], "adamw": [2, 3, 4, 8, 26, 27, 28, 29, 30, 31], "train_split": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 66, 119], "optimizer__lr": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 66, 119], "optimizer__weight_decai": [2, 3, 4, 8, 26, 27, 28, 30], "iterator_train__shuffl": [2, 5, 9, 10, 11, 26, 30, 66, 119], "lr_schedul": [2, 3, 4, 8, 26, 27, 28, 29, 30, 31], "cosineannealinglr": [2, 3, 4, 8, 26, 27, 28, 29, 30, 31], "t_max": [2, 3, 4, 8, 26, 27, 28, 29, 30, 31], "r2_train": 2, "metric": [2, 5, 9, 10, 11, 26, 27, 31, 134], "r2_score": 2, "lower_is_bett": [2, 5, 8, 9, 10, 11, 125, 126, 127], "on_train": [2, 5, 8, 9, 10, 11, 125, 126], "r2_valid": 2, "verbos": [2, 3, 4, 8, 28, 29, 66, 67, 104, 106, 107, 109, 110, 111, 112, 113, 119, 140], "specifi": [2, 3, 5, 8, 9, 10, 11, 12, 18, 21, 22, 26, 27, 28, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 106, 110, 117, 119], "y": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 77, 78, 79, 84, 85, 89, 109, 119, 127], "alreadi": [2, 3, 5, 8, 9, 10, 11, 14, 19, 26, 27, 28, 69, 70, 76, 117, 119, 135, 137], "fit": [2, 3, 5, 8, 9, 10, 11, 14, 24, 26, 27, 28, 29, 30, 31, 66, 112, 119], "train_loss": [2, 3, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31, 66, 119], "valid_loss": [2, 3, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30], "dur": [2, 3, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30], "16": [2, 5, 29, 82, 92, 97, 106], "9036": 2, "3098": 2, "5378": 2, "20": [2, 5, 9, 10, 11, 12, 28, 30, 31, 38, 45, 46, 47, 48, 62, 96, 110], "7346": 2, "0006": [2, 3, 8, 26, 27, 28], "7856": 2, "13": [2, 5, 9, 10, 11, 13, 17, 19, 71, 73, 106, 116], "7536": 2, "7": [2, 3, 4, 5, 6, 9, 10, 11, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 71, 82, 89, 90, 96], "1257": 2, "9596": 2, "18": [2, 4, 5, 11, 12, 28, 31, 32, 89], "0738": 2, "6842": 2, "12": [2, 4, 5, 11, 17, 18, 19, 28, 29, 68, 102, 134], "7769": 2, "7413": 2, "6787": 2, "17": [2, 5, 6, 11, 23, 100], "1885": 2, "0005": [2, 3, 22, 27, 30], "6917": 2, "7973": 2, "3917": 2, "5638": 2, "4416": 2, "0004": 2, "6871": 2, "2718": 2, "1846": 2, "4237": 2, "0097": 2, "0002": [2, 3, 27], "6903": 2, "5742": 2, "9208": 2, "3549": 2, "15": [2, 5, 9, 10, 11, 12, 14, 26, 27, 28, 29, 45, 46, 47, 48, 85, 95, 100, 106, 109], "4435": 2, "0001": [2, 29, 93, 115], "6588": 2, "9": [2, 3, 4, 5, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 68, 71, 87, 89, 102, 110], "8235": 2, "6185": 2, "3132": 2, "14": [2, 5, 6, 8, 17, 19, 26, 27, 71, 106, 132], "7799": 2, "0000": [2, 3, 8, 26, 27, 28, 29, 30], "6655": 2, "0649": 2, "3051": 2, "3316": 2, "0883": 2, "def": [2, 3, 5, 8, 9, 10, 11, 12, 14, 16, 28, 30, 31], "pad_and_select_predict": 2, "pred": [2, 8, 31, 124, 128, 129, 131], "pad": [2, 9, 10, 11, 26, 97, 106, 109, 140], "constant": 2, "constant_valu": 2, "mask": [2, 5, 50, 64, 128], "isnan": 2, "squeez": [2, 3, 4, 26, 27, 28, 29, 31], "return": [2, 5, 8, 9, 10, 11, 12, 14, 17, 19, 21, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 74, 75, 76, 77, 78, 79, 80, 84, 85, 90, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 127, 129, 130, 131, 134, 140], "t": [2, 4, 5, 11, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 40, 58, 66, 67, 68, 83, 94, 95, 102, 104, 114, 115, 119, 132, 134], "preds_train": [2, 8], "y_train": [2, 8, 9, 10, 11, 28], "predict_tri": [2, 66, 119, 140], "return_target": [2, 66, 119, 130], "preds_valid": [2, 8], "y_valid": [2, 8], "preds_test": [2, 8], "y_test": [2, 8, 28], "adn": [2, 8], "decreas": [2, 8, 11], "nede": [2, 8], "doe": [2, 8, 14, 16, 18, 26, 28, 31, 43, 66, 82, 90, 112, 119, 135], "divers": [2, 4, 8], "caus": [2, 8], "overfit": [2, 8, 9, 10, 11, 28], "better": [2, 5, 8, 10, 14, 16, 26, 27, 28, 31, 85, 127], "improv": [2, 3, 5, 8, 9, 10, 11, 106, 135, 140], "matplotlib": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 26, 27, 28, 29, 30, 134], "pyplot": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 26, 27, 28, 29, 30], "plt": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 26, 27, 28, 29, 30], "panda": [2, 4, 5, 8, 9, 10, 11, 14, 16, 20, 21, 26, 27, 28, 29, 30, 66, 69, 70, 76, 79, 119], "pd": [2, 4, 5, 8, 9, 10, 11, 14, 16, 26, 27, 28, 29, 30, 69, 70, 76, 120, 121, 122, 123], "line": [2, 8, 14, 26, 27, 30, 68, 135], "line2d": [2, 8, 26, 27], "style": [2, 5, 8, 12, 26, 27, 30, 46, 47, 48, 100], "seaborn": [2, 5, 8, 12, 14, 26, 27, 28, 29, 30], "fig": [2, 4, 5, 8, 9, 10, 11, 16, 26, 27, 28, 29, 30, 134], "ax": [2, 3, 4, 5, 8, 9, 10, 11, 16, 26, 27, 28, 29, 30, 90], "subplot": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 26, 27, 28, 29, 30], "figsiz": [2, 5, 8, 9, 10, 11, 12, 16, 26, 27, 28, 30, 134], "set_titl": [2, 8, 16, 30], "arang": [2, 8], "label": [2, 3, 5, 8, 9, 10, 11, 12, 16, 22, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 101, 119, 122, 124, 128, 130, 134], "set_ylabel": [2, 5, 8, 9, 10, 11, 16, 26, 27, 30], "legend": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 26, 27, 28, 30], "set_xlabel": [2, 4, 5, 8, 9, 10, 11, 16, 26, 27, 30], "tight_layout": [2, 4, 5, 8, 9, 10, 11, 26, 27, 29], "advanced_train": [2, 5], "plot_bcic_iv_4_ecog_crop": [2, 6], "364": [2, 3, 4, 27, 28, 31], "matplotlibdeprecationwarn": [2, 5, 8, 12, 26, 27, 30], "ship": [2, 5, 8, 12, 26, 27, 30], "sinc": [2, 5, 8, 9, 10, 11, 12, 22, 26, 27, 29, 30, 66, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 119, 135], "longer": [2, 5, 8, 12, 26, 27, 28, 30, 31, 66, 119], "remain": [2, 5, 8, 12, 16, 26, 27, 28, 30, 31], "v0_8": [2, 5, 8, 12, 26, 27, 30], "altern": [2, 5, 8, 12, 26, 27, 30, 31, 66, 119], "api": [2, 5, 8, 12, 26, 27, 30, 139], "instead": [2, 3, 4, 5, 8, 9, 12, 22, 26, 27, 28, 29, 30, 31, 66, 82, 85, 87, 89, 90, 110, 119, 140], "correl": [2, 8, 26, 28], "coeffici": [2, 8, 44, 61, 129], "corr_coeff": [2, 8], "dim": [2, 8], "rang": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 26, 27, 28, 30, 31, 40, 58, 67, 116, 134], "append": [2, 8, 12, 14, 16, 26, 27, 30, 66, 106, 119], "corrcoef": [2, 8], "print": [2, 4, 5, 8, 9, 10, 11, 14, 17, 20, 21, 22, 26, 27, 28, 29, 31, 66, 119, 135], "dimens": [2, 5, 8, 50, 64, 82, 85, 98, 102, 109, 140], "round": [2, 8], "histori": [2, 5, 8, 9, 10, 11, 26, 27, 30, 66, 119], "throughout": [2, 8, 9, 10, 11, 27, 28, 31], "accuraci": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 31, 127], "curv": [2, 8, 27], "results_column": [2, 8, 26, 27], "df": [2, 5, 8, 9, 10, 11, 12, 16, 26, 27], "datafram": [2, 4, 5, 8, 9, 10, 11, 14, 16, 20, 21, 22, 26, 27, 28, 29, 66, 69, 119, 120, 121, 122, 123], "index": [2, 5, 8, 9, 10, 11, 17, 26, 27, 29, 30, 70, 104, 114, 115, 120, 121, 131, 137], "ax1": [2, 5, 8, 9, 10, 11, 26, 27], "loc": [2, 8, 12, 26, 27, 28], "marker": [2, 5, 8, 16, 26, 27], "o": [2, 4, 5, 8, 16, 26, 27, 35, 36, 37, 38, 42, 50, 53, 54, 55, 56, 59, 64, 122], "color": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 26, 27, 28, 134], "tab": [2, 5, 8, 16, 26, 27], "blue": [2, 5, 8, 16, 26, 27], "fontsiz": [2, 8, 12, 26, 27], "tick_param": [2, 5, 8, 12, 26, 27], "axi": [2, 3, 5, 8, 26, 27, 30, 45, 46, 47, 48, 49, 51, 62, 63, 65, 90, 109, 131], "labelcolor": [2, 5, 8, 26, 27], "labels": [2, 8, 12, 26, 27], "ax2": [2, 5, 8, 9, 10, 11, 26, 27], "twinx": [2, 5, 8, 26, 27], "instanti": [2, 3, 4, 8, 14, 26, 27, 31, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 59, 66, 72, 119, 140], "share": [2, 8, 14, 26, 27], "red": [2, 8, 26, 27], "r2": [2, 8], "score": [2, 4, 5, 9, 10, 11, 28, 29, 66, 84, 96, 119, 125, 126, 127, 140], "where": [2, 4, 8, 9, 10, 22, 26, 27, 28, 35, 44, 45, 50, 53, 61, 62, 64, 66, 67, 69, 77, 119, 130, 132, 140], "been": [2, 3, 4, 8, 10, 14, 16, 26, 27, 31, 86, 87, 88, 89, 90, 91, 92, 129, 135, 139, 140], "handl": [2, 3, 4, 8, 26, 27, 29, 110], "black": [2, 8, 12, 26, 27, 68, 71, 134], "linewidth": [2, 8, 26, 27], "linestyl": [2, 8, 12, 26, 27], "h": [2, 4, 5, 8, 26, 27, 35, 38, 42, 50, 53, 55, 59, 64, 82, 84, 86, 122], "get_label": [2, 8, 26, 27], "center": [2, 8, 9, 10, 28, 35, 53], "right": [2, 4, 8, 12, 26, 27, 28, 31, 38, 68, 71, 139], "total": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 68], "script": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 132], "minut": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 73], "287": [2, 6, 11, 13, 140], "estim": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31], "usag": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 135, 140], "1150": [2, 6], "mb": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32], "python": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 33, 104, 132, 136, 137, 139, 140], "sourc": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137], "jupyt": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31], "notebook": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31], "ipynb": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31], "galleri": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31], "gener": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 59, 66, 90, 96, 99, 106, 119, 127, 134, 140], "sphinx": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31], "follow": [3, 4, 5, 9, 10, 11, 14, 28, 31, 87, 88, 106, 109, 112, 119, 137, 138, 139, 140], "wise": [3, 4, 5, 9, 10, 11], "also": [3, 4, 5, 9, 10, 11, 12, 14, 18, 21, 27, 33, 66, 76, 85, 87, 88, 98, 106, 107, 109, 119, 130, 135, 138, 139], "illustr": [3, 28], "effect": 3, "simon": [3, 20, 140], "brandt": [3, 20, 140], "simonbrandt": [3, 20], "protonmail": [3, 20], "c\u00e9dric": [3, 4], "rommel": [3, 4, 140], "cedric": [3, 4, 140], "inria": [3, 4, 11], "fr": [3, 4, 11], "moabbdataset": [3, 4, 18, 20, 21, 26, 27, 28, 29, 31, 140], "dataset_nam": [3, 4, 18, 20, 21, 26, 27, 28, 29, 31, 72], "bnci2014001": [3, 4, 18, 20, 21, 26, 27, 28, 29, 31], "multipli": [3, 4, 5, 9, 10, 12, 26, 27, 28, 29, 31, 82, 87, 88], "cut": [3, 4, 19, 27, 28, 29, 35, 53, 77, 106], "38": [3, 4, 26, 27, 28, 29, 30, 31], "factor": [3, 4, 5, 9, 10, 12, 26, 27, 28, 29, 31, 98, 100, 102, 109, 118], "meg": [3, 4, 20, 26, 27, 28, 29, 31, 33, 106, 107, 136], "stim": [3, 4, 20, 26, 27, 28, 29, 31], "keep": [3, 4, 10, 11, 16, 26, 27, 28, 29, 31, 71, 73], "sensor": [3, 4, 26, 27, 28, 29, 31, 38, 45, 46, 47, 48, 62, 71], "moabb": [3, 4, 15, 18, 21, 23, 24, 26, 27, 28, 29, 31, 68, 69, 71, 72, 108, 117, 138, 139, 140], "0x7f27b20f4f40": 3, "create_windows_from_ev": [3, 4, 5, 9, 10, 11, 18, 21, 26, 27, 28, 29, 31, 140], "trial_start_offset_second": [3, 4, 26, 27, 28, 29, 31], "start": [3, 4, 12, 14, 16, 22, 26, 27, 28, 29, 31, 50, 64, 66, 79, 104, 109, 111, 112, 119, 137], "offset": [3, 4, 16, 18, 26, 27, 28, 29, 31, 69, 79, 111, 112], "trial_start_offset_sampl": [3, 4, 5, 9, 10, 11, 18, 19, 21, 26, 27, 28, 29, 31, 79, 112], "int": [3, 4, 5, 9, 10, 14, 16, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 59, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 109, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 130, 132, 134], "windows_dataset": [3, 4, 5, 8, 9, 10, 11, 17, 18, 19, 26, 27, 28, 29, 30, 31, 77, 78, 79, 111, 112], "trial_stop_offset_sampl": [3, 4, 5, 9, 10, 11, 18, 19, 21, 26, 27, 28, 29, 30, 31, 79, 112, 140], "session_t": [3, 4, 18, 20, 21, 26, 27, 28, 29, 31, 121], "session_": [3, 4, 20, 21, 26, 27, 28, 29, 31], "callabl": [3, 39, 52, 66, 69, 70, 76, 83, 95, 108, 119, 127], "custom": [3, 4, 15, 23, 24, 34, 69, 77], "loader": [3, 4, 5, 14, 31], "call": [3, 16, 26, 28, 31, 66, 69, 76, 79, 82, 85, 89, 104, 108, 111, 112, 119, 125, 126, 127], "demonstr": [3, 4, 7, 22, 24, 31], "below": [3, 5, 33, 35, 135, 138, 140], "illutr": 3, "purpos": [3, 14, 16, 31], "chose": 3, "frequencyshift": 3, "randomli": [3, 5, 26, 35, 36, 37, 42, 50, 54, 56, 59, 123], "translat": 3, "within": [3, 4, 71, 82, 85, 89, 100, 122, 140], "given": [3, 4, 5, 21, 31, 36, 37, 38, 40, 49, 51, 52, 66, 67, 80, 106, 107, 110, 118, 119, 130, 140], "probabl": [3, 4, 29, 31, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 66, 82, 83, 86, 95, 99, 100, 119], "actual": [3, 5, 12, 14, 22], "modifi": [3, 5, 10, 12, 40, 58, 66, 90, 104, 105, 107, 108, 116, 119, 132], "max_delta_freq": [3, 41], "shift": [3, 28, 41, 57], "next": [3, 4, 5, 9, 10, 11, 12, 14, 16, 18, 22], "let": [3, 4, 22], "u": [3, 5, 7, 13, 24, 29, 69, 73, 90, 102, 108, 112, 117, 120, 121, 123, 132, 134, 139, 140], "result": [3, 12, 14, 16, 28, 31, 66, 79, 109, 111, 112, 119, 127, 132, 135], "origin": [3, 11, 16, 17, 18, 19, 21, 28, 44, 45, 46, 47, 48, 50, 61, 62, 64, 69, 79, 85, 86, 87, 88, 89, 91, 92, 112, 116], "get_data": [3, 17], "allow": [3, 5, 14, 28, 29, 31, 39, 66, 79, 83, 87, 88, 95, 111, 112, 119, 140], "fix": [3, 38, 55, 135, 140], "x_tr": 3, "_": [3, 5, 14, 16, 17, 26, 27, 30, 31, 140], "as_tensor": 3, "float": [3, 5, 30, 31, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 66, 73, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 104, 106, 109, 112, 114, 115, 118, 119, 129, 134], "psd": 3, "plot": [3, 5, 12, 14, 16, 28, 30, 140], "plot_psd": 3, "freq": 3, "time_frequ": 3, "psd_array_multitap": 3, "fmin": 3, "fmax": 3, "100": [3, 4, 5, 8, 9, 10, 11, 12, 14, 20, 26, 27, 28, 29, 30, 31, 35, 50, 68, 83, 102, 109], "log10": 3, "psds_mean": 3, "k": [3, 5, 9, 10, 11, 26, 27, 29, 30, 31, 35, 42, 45, 46, 47, 48, 50, 53, 59, 62, 64, 83, 89, 94, 95, 134], "r": [3, 5, 9, 10, 11, 26, 27, 28, 29, 30, 35, 42, 50, 53, 59, 64, 83, 87, 88, 91, 92, 94, 95, 134], "titl": [3, 12, 28, 29, 33], "multitap": 3, "gradiomet": 3, "xlabel": [3, 12, 28, 29], "ylabel": [3, 12, 29], "power": [3, 5, 29, 106, 109], "spectral": 3, "densiti": 3, "db": [3, 16, 110], "them": [3, 4, 5, 12, 14, 16, 17, 19, 26, 28, 31, 66, 69, 82, 83, 84, 85, 89, 90, 93, 94, 95, 96, 97, 98, 99, 102, 119, 139], "try": [3, 4, 12, 18, 22, 24, 29, 135, 139], "its": [3, 9, 10, 16, 20, 21, 28, 29, 30, 66, 69, 108, 119], "comput": [3, 4, 5, 9, 10, 11, 18, 22, 33, 46, 47, 48, 66, 68, 79, 82, 85, 87, 88, 89, 91, 92, 96, 110, 112, 114, 115, 119, 124, 125, 126, 128, 132, 135, 139, 140], "list": [3, 5, 11, 14, 16, 21, 22, 26, 27, 28, 30, 31, 33, 34, 38, 39, 46, 47, 48, 55, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 105, 106, 107, 110, 111, 112, 116, 117, 119, 129, 131, 134, 140], "n_channel": [3, 4, 5, 9, 10, 14, 17, 19, 22, 28, 30, 31, 44, 45, 61, 62, 77, 82, 84, 85, 94, 96, 97, 98, 99, 100, 101, 114, 115, 118], "auto": [3, 4, 8, 14, 17, 19, 27, 28, 29, 31, 66, 83, 91, 92, 95, 106, 109, 110, 119, 140], "21": [3, 4, 5, 6, 8, 9, 26, 27, 28, 29, 30, 31, 110], "depreci": [3, 4, 8, 26, 27, 28, 29, 30, 31], "n_time": [3, 4, 5, 8, 9, 10, 11, 12, 14, 17, 19, 26, 27, 28, 29, 30, 31, 44, 61, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 114, 115, 118, 119, 124, 128], "178": [3, 4, 26, 27, 28, 29, 31, 140], "logsoftmax": [3, 4, 26, 27, 28, 29, 31, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 140], "layer": [3, 4, 5, 9, 10, 26, 27, 28, 29, 30, 31, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 140], "adjust": [3, 4, 26, 27, 28, 29, 31, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102], "accordingli": [3, 4, 9, 26, 27, 28, 29, 31, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 104], "e": [3, 4, 5, 9, 10, 11, 14, 16, 26, 27, 28, 29, 31, 35, 38, 42, 50, 52, 53, 55, 59, 64, 66, 70, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 112, 116, 119, 123, 127, 134, 139, 140], "g": [3, 4, 5, 9, 10, 11, 14, 16, 26, 27, 28, 29, 31, 35, 38, 40, 42, 50, 52, 53, 55, 58, 59, 66, 70, 73, 74, 75, 76, 79, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 112, 116, 119, 123, 127, 134, 140], "crossentropyloss": [3, 4, 9, 10, 11, 26, 27, 28, 29, 31, 66, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 119], "order": [3, 4, 12, 21, 38, 46, 47, 48, 55, 66, 71, 74, 75, 106, 110, 116, 119, 123, 140], "pass": [3, 4, 9, 10, 16, 22, 26, 27, 28, 29, 31, 34, 39, 52, 66, 72, 82, 84, 85, 89, 94, 96, 97, 98, 99, 100, 104, 106, 107, 109, 110, 119, 124, 127, 128, 140], "sequenti": [3, 4, 5, 9, 10, 16, 28, 29, 31, 71, 90], "batch": [3, 4, 5, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 83, 84, 90, 94, 95, 96, 97, 98, 99, 100, 103, 119, 126, 130, 140], "augmenteddataload": [3, 4, 140], "signflip": 3, "freq_shift": 3, "sign_flip": 3, "iter": [3, 4, 5, 20, 22, 44, 66, 90, 105, 119, 130], "argument": [3, 4, 16, 28, 34, 36, 37, 38, 40, 49, 51, 52, 66, 72, 104, 106, 107, 108, 109, 110, 116, 119, 127, 140], "clf": [3, 4, 5, 9, 10, 11, 26, 27, 28, 29], "iterator_train": [3, 4, 66, 119], "tell": [3, 4, 135], "dataload": [3, 4, 5, 14, 31, 34, 66, 119, 130], "iterator_train__transform": [3, 4], "nllloss": [3, 4, 14, 27, 28, 29, 31, 66], "train_accuraci": [3, 26, 27, 28, 29, 31], "valid_accuraci": [3, 26, 27, 28, 29], "2535": [3, 27], "6458": 3, "1251": [3, 8, 22], "8046": 3, "2639": 3, "3297": 3, "2500": [3, 22, 26, 27, 28, 121], "7606": 3, "5427": 3, "1539": 3, "1230": 3, "5110": 3, "2708": [3, 9], "1567": 3, "2554": 3, "4832": 3, "classifi": [3, 4, 5, 9, 10, 28, 30, 140], "initi": [3, 5, 9, 10, 28, 29, 31, 66, 85, 87, 88, 102, 119], "module_": [3, 9, 10, 66, 119], "var_nam": [3, 4, 26, 27, 28, 31, 90], "depth": [3, 4, 11, 26, 27, 28, 29, 31, 82, 87, 88, 90, 102], "idx": [3, 4, 9, 10, 11, 26, 27, 28, 29, 31], "param": [3, 4, 5, 26, 27, 28, 29, 31, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50], "kernel": [3, 4, 11, 26, 27, 28, 29, 31, 45, 46, 47, 48, 62, 82, 88, 89, 96, 97, 99, 102], "22": [3, 4, 5, 11, 17, 19, 26, 27, 28, 31, 68], "1125": [3, 4, 27, 28, 31], "ensure4d": [3, 4, 26, 27, 28, 31], "ensuredim": [3, 4, 26, 27, 28, 31], "rearrang": [3, 4, 26, 27, 28, 31, 140], "dimshuffl": [3, 4, 26, 27, 28, 31], "combinedconv": [3, 4, 26, 27, 28, 31, 83, 95], "conv_time_spat": [3, 4, 26, 27, 28, 31], "40": [3, 4, 5, 9, 14, 17, 18, 26, 27, 28, 30, 31, 85, 95], "1101": [3, 4, 27, 28, 31], "36": [3, 4, 9, 26, 27, 28, 31], "240": [3, 4, 17, 26, 27, 28, 31], "batchnorm2d": [3, 4, 26, 27, 28, 31, 83, 87, 88, 95], "bnorm": [3, 4, 26, 27, 28, 31], "80": [3, 4, 10, 19, 26, 27, 28, 31, 71, 98], "express": [3, 4, 26, 27, 28, 31], "conv_nonlin_exp": [3, 4, 26, 27, 28, 31], "avgpool2d": [3, 4, 26, 27, 28, 31], "pool": [3, 4, 26, 27, 28, 31, 82, 83, 85, 87, 88, 90, 95, 97, 100, 102], "69": [3, 4, 27, 28, 31], "75": [3, 4, 9, 14, 16, 26, 27, 28, 31, 85, 95, 100], "pool_nonlin_exp": [3, 4, 26, 27, 28, 31], "dropout": [3, 4, 5, 9, 10, 26, 27, 28, 29, 31, 82, 83, 85, 86, 87, 88, 95, 96, 97, 98, 99, 100], "drop": [3, 4, 14, 16, 17, 18, 19, 21, 26, 27, 28, 31, 36, 54, 79, 105, 112, 116], "conv2d": [3, 4, 9, 26, 27, 28, 31], "conv_classifi": [3, 4, 26, 27, 28, 31], "044": [3, 4, 27, 28, 31], "47": [3, 4, 5, 9, 10, 11, 27, 28, 31], "trainabl": [3, 4, 26, 27, 28, 31], "non": [3, 4, 11, 16, 22, 26, 27, 28, 29, 31, 66, 71, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 106, 119], "mult": [3, 4, 26, 27, 28, 31], "add": [3, 4, 5, 26, 27, 28, 31, 41, 42, 57, 59, 66, 69, 70, 76, 106, 119, 127, 140], "m": [3, 4, 5, 9, 10, 11, 12, 16, 18, 22, 26, 27, 28, 29, 30, 31, 35, 38, 42, 45, 46, 47, 48, 50, 53, 55, 59, 62, 64, 82, 83, 91, 92, 94, 95, 97, 102, 106, 120, 134, 139], "forward": [3, 4, 5, 26, 27, 28, 31, 39, 52, 66, 82, 84, 85, 89, 94, 96, 97, 98, 99, 100, 101, 102, 106, 108, 110, 119, 124, 128, 130], "backward": [3, 4, 14, 26, 27, 28, 31, 90, 106, 140], "35": [3, 4, 5, 11, 27, 28, 30, 31], "04": [3, 4, 11, 27, 28, 31], "50": [3, 4, 9, 10, 14, 16, 19, 27, 28, 31, 68, 83], "would": [3, 26, 28, 31, 66, 83, 95, 119], "equival": 3, "although": [3, 66, 82, 85, 89, 119], "composit": [3, 39], "composed_transform": 3, "possibl": [3, 4, 11, 12, 16, 18, 66, 68, 111, 119, 132, 135, 140], "most": [3, 9, 10, 11, 14, 122, 135, 138], "windowsdataset": [3, 18, 69, 77, 78, 79, 80, 111, 112, 117, 119, 140], "through": [3, 4, 11, 12, 14, 16, 20, 22, 26, 45, 62, 70, 76, 84, 96, 97, 98, 140], "commonli": 3, "done": [3, 11, 16, 18, 26, 82, 111, 112], "advis": [3, 29, 40, 58, 119], "abov": [3, 14, 16, 22, 26, 28, 135, 137], "compat": [3, 14, 17, 19, 29, 66, 77, 119, 140], "125": [3, 6, 87, 88, 97], "641": [3, 6], "plot_data_augment": [3, 6], "inde": 4, "known": [4, 66], "often": [4, 9, 10, 11, 27, 29], "depend": [4, 5, 9, 10, 11, 12, 14, 16, 28, 29, 31, 33, 66, 71, 98, 119, 130, 137, 139, 140], "task": [4, 9, 10, 11, 29, 40, 58, 68, 70, 122], "phenomenon": 4, "studi": [4, 5, 7, 24], "methodologi": 4, "propos": [4, 36, 37, 40, 50, 54, 56, 58, 64, 89, 140], "openli": [4, 5, 9, 10, 11], "could": [4, 5, 14, 28, 31, 90, 139], "brain": [4, 24, 25, 26, 28, 29, 30, 32, 33, 69, 72, 83, 87, 88, 90, 91, 92, 94, 95, 108, 112, 115, 117, 132, 134, 136], "recent": [4, 135], "shown": [4, 5, 9, 11, 16, 28, 31, 68, 71], "artifici": 4, "cast": [4, 39], "paradigm": [4, 5, 66, 68, 119, 130], "present": [4, 12, 28, 31, 68, 71, 105], "both": [4, 5, 16, 22, 29, 68, 71, 96, 97, 102], "pretext": 4, "approach": [4, 5, 9, 10, 11, 16, 24, 29, 98, 120], "demand": 4, "intens": 4, "comparison": [4, 14, 26, 27], "strength": 4, "context": [4, 5, 28, 33, 98, 122], "bruno": [4, 140], "aristimunha": [4, 140], "ufabc": 4, "br": 4, "bnci": [4, 68], "websit": 4, "There": [4, 24, 83, 95, 137, 139], "subject": [4, 5, 9, 10, 11, 12, 14, 18, 19, 20, 21, 22, 28, 35, 42, 50, 53, 59, 64, 67, 68, 70, 71, 72, 73, 121], "electrod": [4, 20, 68, 71, 110], "while": [4, 5, 14, 28, 31, 71, 82, 85, 89, 96, 131], "do": [4, 12, 14, 26, 28, 31, 66, 77, 78, 79, 102, 111, 112, 119, 123, 132, 139], "imageri": [4, 68, 82, 86, 89, 140], "144": [4, 68], "librairi": 4, "focu": 4, "relat": [4, 5, 26, 33, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 119, 140], "activ": [4, 16, 18, 19, 66, 71, 82, 83, 87, 88, 89], "0x7f27b40e4b50": 4, "out": [4, 8, 9, 10, 35, 50, 53, 64, 66, 68, 119, 120, 128, 135], "provind": 4, "slicedataset": [4, 28, 29], "eval_set": [4, 29], "three": [4, 16, 28, 31, 66, 67, 85, 87, 88, 119, 135], "categor": [4, 120], "aggreg": [4, 85], "sever": [4, 12, 18, 24, 111, 112, 136], "being": [4, 10, 14, 66, 71, 119], "spatial": [4, 40, 58, 83, 95, 102, 140], "paper": [4, 11, 33, 45, 46, 47, 48, 62, 82, 85, 86, 87, 88, 89, 91, 92, 98, 140], "ftsurrog": 4, "smoothtimemask": 4, "channelsdropout": 4, "respect": [4, 5, 29], "two": [4, 5, 9, 10, 11, 12, 14, 16, 18, 26, 28, 31, 44, 50, 61, 68, 71, 73, 89, 96, 106, 109, 110, 122, 123, 129], "insid": [4, 9, 28, 29, 87, 88, 139], "rememb": [4, 28, 31], "\u03c6max": 4, "2\u03c0": 4, "p_drop": [4, 36, 54], "linspac": [4, 12], "transforms_freq": 4, "phase_noise_magnitud": [4, 40, 58], "phase_freq": 4, "random_st": [4, 5, 8, 29, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 59, 120, 121, 122, 123], "transforms_tim": 4, "mask_len_sampl": [4, 50, 64], "transforms_spati": 4, "prob": 4, "gridsearchcv": [4, 28, 29, 127, 140], "control": [4, 5, 10, 28, 66, 96, 104, 106, 107, 109, 110, 111, 112, 117, 119, 140], "over": [4, 10, 16, 28, 30, 31, 40, 45, 46, 47, 48, 58, 62, 66, 119, 140], "framework": 4, "necessari": [4, 66, 110, 119], "slicedata": 4, "mandatori": 4, "eval": [4, 29, 31, 140], "train_x": [4, 29], "train_i": [4, 29], "kfold": [4, 28, 29], "model_select": [4, 5, 8, 28, 29], "cv": [4, 28, 29], "n_split": [4, 28, 29], "shuffl": [4, 8, 14, 28, 29, 31, 37, 44, 56, 66, 119], "fit_param": [4, 29, 119], "param_grid": [4, 28, 29], "return_train_scor": [4, 28, 29], "refit": [4, 28, 29], "error_scor": [4, 28, 29], "rais": [4, 14, 28, 29, 30, 66, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 112, 117, 140], "fold": [4, 29, 31], "candid": [4, 28, 29], "x27": 4, "lt": 4, "gt": 4, "uniniti": [4, 66, 119], "ou": 4, "environ": [4, 67, 132], "rerun": 4, "cell": 4, "represent": [4, 35, 42, 44, 50, 53, 59, 61, 64, 140], "trust": 4, "On": [4, 26, 29, 30, 70, 76], "github": [4, 29, 135, 137, 140], "unabl": 4, "render": 4, "page": [4, 28, 31, 33, 135, 140], "nbviewer": 4, "gridsearchcvgridsearchcv": 4, "analysi": [4, 5, 9, 10, 11, 33, 136], "wa": [4, 5, 9, 10, 11, 26, 27, 28, 31, 66, 68, 71, 83, 85, 95, 98, 119, 120, 140], "search_result": [4, 28, 29], "cv_results_": [4, 28, 29], "best_run": [4, 28, 29], "rank_test_scor": [4, 28, 29], "best_aug": 4, "validation_scor": 4, "around": [4, 10, 31, 45, 46, 47, 48, 62, 112, 120], "mean_test_scor": [4, 29], "training_scor": 4, "mean_train_scor": [4, 29], "report_messag": 4, "gave": [4, 29], "format": [4, 14, 17, 19, 77, 78, 79], "eval_x": [4, 29], "eval_i": [4, 29], "f": [4, 5, 10, 11, 12, 14, 16, 17, 18, 22, 26, 27, 28, 29, 30, 31, 42, 59, 83, 87, 88, 94, 95, 100, 134], "2f": [4, 28, 29, 31], "accuracyof": 4, "08": [4, 9, 28, 32], "26": [4, 5, 9, 10, 11, 20, 97], "39": [4, 22, 26, 32], "bar": 4, "param_iterator_train__transform": 4, "yerr": 4, "std_train_scor": 4, "rot": 4, "45": [4, 9, 16, 28, 29, 31, 32], "c0": 4, "c1": 4, "c2": 4, "strategi": [4, 25, 28, 29], "set_ylim": [4, 26, 27], "32": [4, 5, 9, 10, 11, 26, 82, 91, 100], "c": [4, 5, 9, 10, 11, 20, 26, 27, 28, 29, 40, 58, 84, 89, 91, 92, 102, 120, 135], "paillard": 4, "moreau": [4, 140], "gramfort": [4, 5, 9, 10, 33, 97, 122, 140], "2022": [4, 29, 82, 85, 86, 87, 88], "systemat": 4, "arxiv": [4, 5, 30, 35, 36, 37, 38, 40, 42, 44, 50, 53, 54, 55, 56, 58, 59, 61, 64, 91, 92, 99, 122, 129], "ab": [4, 5, 44, 61, 129], "2206": 4, "14483": 4, "banvil": [4, 5, 9, 14, 16, 20, 122, 140], "chehab": [4, 5, 11, 122, 140], "hyv\u00e4rinen": [4, 5, 122], "engemann": [4, 5, 33, 122, 140], "2021": [4, 10, 11, 87, 88, 89, 98, 102, 120], "uncov": [4, 5, 122], "structur": [4, 5, 16, 17, 19, 121, 122, 140], "clinic": [4, 5, 7, 24, 122], "journal": [4, 27, 28, 29, 33, 89], "engin": [4, 5, 9, 10, 27, 28, 29, 45, 46, 47, 48, 62, 84, 85, 87, 88, 89, 97, 98], "046020": 4, "53": [4, 5, 6, 16, 22], "888": [4, 6], "437": [4, 6], "plot_data_augmentation_search": [4, 6], "access": [5, 9, 10, 11, 12, 14, 86, 121, 137], "physionet": [5, 7, 13, 16, 24, 69, 73, 90, 97, 98, 101, 102, 108, 112, 117, 118, 121, 123, 132, 134, 140], "ssl": 5, "leverag": [5, 98], "unlabel": 5, "design": [5, 16, 98, 106], "prior": [5, 90], "understand": [5, 24, 28], "under": [5, 14, 67, 117, 139, 140], "autocorrel": 5, "strutur": [5, 31], "requir": [5, 11, 12, 14, 16, 17, 22, 52, 66, 71, 76, 119, 140], "anoth": [5, 21, 28, 31, 122], "interest": [5, 12, 16, 18, 22], "onc": [5, 16, 28, 106, 111, 122, 139], "reus": [5, 9, 11], "featur": [5, 9, 10, 28, 84, 85, 87, 88, 89, 90, 96, 97, 98, 102, 135, 139, 140], "extractor": [5, 9, 10, 84, 96, 97, 98, 102], "weight": [5, 9, 10, 11, 28, 29, 31, 82, 134], "downstream": 5, "help": [5, 9, 10, 21, 110], "reduc": [5, 10, 14, 16, 73, 112], "quantiti": 5, "compar": [5, 14, 16, 22, 26, 28, 31], "strictli": 5, "rp": 5, "simpl": [5, 12, 16, 31], "whether": [5, 14, 36, 37, 38, 40, 45, 46, 47, 48, 49, 51, 52, 58, 62, 66, 69, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 111, 116, 117, 119, 122, 127, 132, 135], "close": [5, 16, 18, 122, 135], "far": [5, 122], "apart": 5, "yield": [5, 14, 20, 68, 100, 135], "physiolog": [5, 9, 10, 11], "relev": [5, 28, 33, 66, 119], "boost": 5, "classif": [5, 9, 10, 11, 26, 29, 35, 40, 42, 50, 53, 58, 59, 64, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "regim": 5, "hubert": [5, 9, 14, 16, 20, 140], "jbanvil": [5, 9, 14, 16, 20], "87": 5, "few": [5, 9, 10, 11, 14, 16, 140], "sleep_physionet": [5, 9, 10, 11], "sleepphysionet": [5, 9, 10, 11, 16, 140], "recording_id": [5, 9, 10, 11, 12, 14, 16, 22, 73, 74, 75], "crop_wake_min": [5, 9, 10, 11, 16, 73], "microvolt": [5, 9, 10], "lowpass": [5, 9, 10, 16], "don": [5, 11, 17, 19, 66, 119], "resampl": [5, 12, 14, 18, 20, 73, 106, 140], "0x7f27b3f455a0": 5, "As": [5, 16, 26, 28, 66, 119], "conveni": [5, 110], "later": [5, 12, 22, 70, 71, 74, 75, 83], "window_size_": [5, 9, 10, 11], "map": [5, 9, 10, 11, 12, 22, 30, 33, 66, 79, 82, 83, 94, 95, 101, 111, 112, 119, 134], "merg": [5, 9, 10, 11, 140], "aasm": [5, 9, 10, 11], "w": [5, 9, 10, 11, 12, 26, 27, 28, 29], "z": [5, 9, 10, 30, 45, 48, 62, 99], "scale": [5, 9, 10, 11, 12, 16, 85, 87, 88, 89, 140], "standard_scal": [5, 9, 10], "channel_wis": [5, 9, 10, 11, 16], "0x7f2790572bf0": 5, "new": [5, 9, 10, 11, 20, 38, 55, 66, 85, 104, 105, 106, 107, 109, 110, 119, 135, 139], "receiv": 5, "pair": [5, 122], "indic": [5, 9, 10, 21, 30, 44, 61, 69, 106, 107, 110, 121, 122, 123, 140], "when": [5, 9, 10, 11, 14, 16, 22, 26, 28, 29, 31, 33, 39, 40, 45, 46, 47, 48, 52, 58, 62, 66, 67, 72, 77, 78, 79, 82, 85, 102, 105, 106, 107, 110, 111, 112, 117, 119, 132, 135, 140], "train_test_split": [5, 8, 28], "uniqu": [5, 9, 10, 11, 21, 66, 70, 119], "subj_train": 5, "subj_test": 5, "test_siz": [5, 8, 28], "subj_valid": 5, "relativepositioningdataset": 5, "__getitem__": [5, 66, 119], "expect": [5, 14, 31, 66, 119], "__init__": [5, 31], "list_of_d": [5, 69], "super": [5, 31, 125, 126], "return_pair": 5, "ind1": 5, "ind2": 5, "properti": [5, 69, 140], "_return_pair": 5, "setter": 5, "split_id": [5, 9, 10, 11, 12, 69, 140], "dict": [5, 9, 10, 11, 21, 26, 27, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 69, 70, 72, 76, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 106, 111, 112, 116, 119, 140], "item": [5, 14, 16, 18, 19, 20, 26, 27, 31], "main": [5, 87, 88, 89], "tau_po": [5, 122], "tau_neg": [5, 122], "neg": [5, 26, 30, 66, 122], "separ": [5, 28, 31, 68, 106, 112, 122], "less": [5, 26, 28, 31], "min": [5, 12, 28, 73, 106], "n_exampl": [5, 122], "regular": [5, 114, 115], "instanc": [5, 31, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 59, 66, 82, 85, 89, 104, 105, 106, 107, 110, 119, 121, 140], "000": [5, 14, 16, 17, 18, 19, 22, 23, 30], "lower": [5, 9, 12, 28, 31, 35, 53, 106, 127], "250": [5, 20, 26, 68, 82, 85, 89], "relativepositioningsampl": 5, "60": [5, 10, 12, 19, 31], "n_examples_train": 5, "len": [5, 8, 9, 10, 11, 12, 14, 17, 20, 22, 28, 31, 68, 71, 116], "n_examples_valid": 5, "n_examples_test": 5, "train_sampl": [5, 9, 10, 11], "get_metadata": [5, 9, 10, 11, 26, 27, 28, 30, 69, 121], "same_rec_neg": [5, 122], "valid_sampl": [5, 9, 10, 11], "presampl": [5, 122], "test_sampl": 5, "introduc": [5, 9, 10, 11, 14, 15, 24, 25, 26, 30], "four": [5, 9, 45, 68, 71], "embedd": 5, "dimension": [5, 66, 85, 119, 130], "last": [5, 22, 26, 30, 31, 50, 64, 71, 73, 77, 78, 79, 82, 85, 106, 109, 111, 112], "embed": [5, 9, 10, 82, 85], "after": [5, 12, 16, 21, 27, 28, 31, 68, 73, 83, 95, 96, 97, 124, 127, 140], "tempor": [5, 9, 10, 14, 82, 83, 85, 86, 88, 95, 96, 97, 98, 99, 100, 102, 140], "wrap": [5, 31, 69], "siames": 5, "contrastivenet": 5, "sleepstagerchambon2018": [5, 9], "input_size_sampl": [5, 9, 10, 11], "emb_siz": 5, "emb": 5, "n_output": [5, 9, 10, 11, 30, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 119], "n_conv_ch": [5, 97], "apply_batch_norm": [5, 96, 97], "linear": [5, 9, 10, 29, 44, 61, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 106], "top": [5, 9, 10, 11, 33], "x1": [5, 122], "x2": [5, 122], "z1": 5, "z2": 5, "flatten": [5, 9, 10, 11], "similar": [5, 26, 104], "account": [5, 69, 111], "smaller": [5, 26, 31, 79, 87, 88, 112], "checkpoint": [5, 31], "earlystop": [5, 28, 31], "epochscor": [5, 8, 9, 10, 11, 66, 119], "5e": 5, "128": [5, 10, 11, 13, 66, 71, 87, 88, 97, 102, 119], "512": 5, "enough": [5, 71], "num_work": [5, 14, 130], "cp": 5, "dirnam": 5, "f_criterion": 5, "f_optim": 5, "f_histori": 5, "early_stop": 5, "patienc": 5, "train_acc": 5, "valid_acc": 5, "bcewithlogitsloss": [5, 66, 119], "adam": [5, 9, 10, 11, 14, 30], "max_epoch": [5, 28, 31, 66, 119], "iterator_train__sampl": [5, 9, 10, 11], "iterator_valid__sampl": [5, 9, 10, 11], "iterator_train__num_work": 5, "iterator_valid__num_work": 5, "load_param": 5, "lowest": 5, "pt": [5, 82], "delet": [5, 22, 69, 117], "file": [5, 6, 12, 13, 14, 16, 17, 18, 19, 23, 32, 69, 73, 74, 80, 104, 123, 135, 140], "5547": 5, "7113": 5, "6000": 5, "6843": 5, "2593": 5, "6328": 5, "6624": 5, "5600": 5, "6505": 5, "1840": 5, "4922": 5, "8274": 5, "5560": 5, "6834": 5, "1529": 5, "5078": 5, "7217": 5, "5360": 5, "7066": 5, "1511": 5, "5859": 5, "6870": 5, "6240": 5, "6799": 5, "1577": 5, "6016": 5, "6796": 5, "6640": 5, "6374": 5, "1675": 5, "6560": 5, "6086": 5, "1497": 5, "5312": 5, "6652": [5, 22], "6600": 5, "5995": 5, "1597": 5, "6250": 5, "6280": 5, "6480": 5, "5983": 5, "1559": 5, "6371": 5, "6520": 5, "5872": 5, "1588": 5, "6539": 5, "6720": 5, "5716": 5, "1478": 5, "6641": 5, "6481": 5, "6840": 5, "5585": 5, "1547": 5, "6172": 5, "6784": 5, "7080": 5, "5460": 5, "1395": 5, "6074": 5, "7200": [5, 10], "5350": 5, "1468": 5, "7109": 5, "6056": 5, "7320": 5, "5279": 5, "1549": 5, "7031": 5, "5857": 5, "7360": 5, "5259": 5, "1504": 5, "6123": 5, "7440": 5, "5328": 5, "1359": 5, "6562": 5, "5821": 5, "5331": 5, "1525": 5, "19": [5, 10, 11, 27, 32, 104, 110], "7344": 5, "5464": 5, "7400": 5, "5277": 5, "1291": 5, "6484": 5, "6304": 5, "5234": 5, "1607": [5, 22], "6953": 5, "5459": 5, "5264": 5, "1589": 5, "7422": 5, "5492": 5, "7280": 5, "5297": 5, "1519": 5, "23": [5, 9, 10, 11, 105], "5958": 5, "7160": 5, "5296": 5, "1434": 5, "7188": 5, "6367": 5, "7240": 5, "5252": 5, "1437": 5, "6875": 5, "5745": 5, "5237": 5, "1676": 5, "balanc": [5, 9, 10, 11, 120, 140], "to_list": [5, 9, 10, 11], "ys1": 5, "ys2": 5, "talk": 5, "y1": 5, "y2": 5, "zip": [5, 12, 16, 24], "l": [5, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 82, 83, 94, 95, 102, 120, 134], "orang": [5, 12, 16], "lines1": 5, "labels1": 5, "get_legend_handles_label": 5, "lines2": 5, "labels2": 5, "plot_relative_posit": [5, 6], "375": 5, "displai": [5, 9, 10, 11, 26, 27, 28, 31, 71, 132], "confus": [5, 9, 10, 11, 134, 140], "matrix": [5, 9, 10, 11, 37, 38, 45, 55, 56, 62, 85, 134, 140], "report": [5, 9, 10, 11, 14, 28, 31, 74, 75, 82, 135], "confusion_matrix": [5, 9, 10, 11, 26, 27, 134], "classification_report": [5, 9, 10, 11], "switch": [5, 31], "y_pred": [5, 9, 10, 11, 26, 27, 66, 102, 126], "y_true": [5, 9, 10, 11, 26, 27, 66], "66": 5, "94": 5, "precis": [5, 9, 10, 11, 134], "recal": [5, 9, 10, 11], "f1": [5, 9, 10, 11, 82, 92, 127], "support": [5, 9, 10, 11, 18, 26, 31, 66, 106, 109, 110, 116, 119, 140], "65": 5, "59": 5, "121": [5, 12], "63": [5, 9], "73": 5, "68": [5, 9], "129": 5, "macro": [5, 9, 10, 11], "avg": [5, 9, 10, 11], "logist": 5, "balanced_accuracy_scor": [5, 11], "linear_model": 5, "logisticregress": 5, "standardscal": 5, "make_pipelin": 5, "singl": [5, 9, 10, 26, 29, 39, 40, 41, 57, 58, 66, 84, 98, 110, 119, 130, 140], "no_grad": [5, 31], "feat": 5, "batch_x": [5, 22], "concaten": [5, 9, 10, 69, 82, 101, 106, 111, 112], "log_reg": 5, "penalti": 5, "l2": [5, 82], "class_weight": [5, 9, 10, 11], "solver": 5, "lbfg": 5, "multi_class": 5, "multinomi": 5, "clf_pipe": 5, "train_y_pr": 5, "valid_y_pr": 5, "test_y_pr": 5, "train_bal_acc": [5, 9, 10, 11], "valid_bal_acc": [5, 9, 10, 11], "test_bal_acc": 5, "bal": 5, "acc": [5, 28, 31], "4f": 5, "_logist": 5, "460": [5, 140], "convergencewarn": 5, "fail": [5, 12], "converg": [5, 28, 30], "statu": 5, "stop": [5, 31, 35, 53, 79, 106, 111, 112, 131, 140], "NO": 5, "reach": [5, 9, 10, 31], "max_it": 5, "scikit": [5, 24, 25, 32, 66, 69, 72, 90, 95, 108, 112, 115, 117, 119, 132, 134, 140], "document": [5, 10, 12, 33, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 104, 106, 107, 109, 110, 135, 139, 140], "option": [5, 10, 18, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 59, 66, 69, 72, 79, 82, 88, 89, 90, 106, 109, 112, 119, 130, 134, 139, 140], "n_iter_i": 5, "_check_optimize_result": 5, "9068": 5, "5774": 5, "5624": 5, "103": 5, "33": [5, 9, 16], "346": 5, "166": [5, 9, 140], "70": 5, "114": 5, "79": 5, "142": [5, 140], "37": [5, 22], "49": [5, 28, 32], "42": [5, 6, 8, 9, 13, 26, 29], "109": 5, "74": 5, "62": [5, 14], "67": [5, 31, 102], "562": 5, "85": [5, 26, 27], "31": [5, 9, 10, 11, 26, 31, 85], "46": 5, "105": 5, "170": [5, 140], "1088": [5, 100], "56": 5, "61": [5, 9, 26], "much": [5, 26, 66, 109, 119], "chanc": [5, 9, 10], "level": [5, 9, 10, 22, 67, 104, 106, 107, 109, 110, 140], "problem": [5, 40, 58, 135, 138], "quick": [5, 121], "2d": [5, 134], "space": [5, 16], "pca": 5, "decomposit": 5, "cm": [5, 68, 134], "n_compon": 5, "tsne": 5, "compon": [5, 9, 10, 11, 71, 87, 88], "fit_transform": 5, "get_cmap": 5, "viridi": 5, "enumer": [5, 12, 28, 31], "n1": [5, 9, 10, 11], "n2": [5, 9, 10, 11], "n3": [5, 9, 10, 11], "scatter": [5, 16, 30], "alpha": [5, 9, 10, 11, 12, 44, 82, 87, 88], "477": 5, "minor": 5, "releas": [5, 87, 135, 139], "colormap": [5, 134], "obj": 5, "0x7f27908eb6d0": 5, "nonlinear": [5, 28, 66, 82, 93, 119], "project": [5, 12, 14, 16, 18, 19, 74, 75, 110], "umap": 5, "might": [5, 14, 16, 28, 29, 31, 112, 121], "insight": 5, "explor": [5, 28], "ag": [5, 12, 18, 22, 68, 71, 74, 75], "sex": 5, "specif": [5, 9, 10, 11, 16, 18, 29, 66, 80, 96, 104, 119, 121, 137], "subset": [5, 8, 20, 28, 30, 69, 106, 107, 140], "achiev": [5, 9, 10, 11], "reason": [5, 10, 28, 31, 66, 119, 127], "avenu": 5, "entir": [5, 14, 20, 28, 31, 140], "describ": [5, 11, 26, 27, 28, 31, 83, 84, 87, 88, 89, 90, 95, 96, 97, 98, 102], "discov": 5, "2020": [5, 35, 36, 37, 42, 50, 53, 54, 56, 59, 64, 87, 88, 96, 100, 122], "preprint": [5, 30, 35, 36, 37, 38, 40, 42, 50, 53, 54, 55, 56, 58, 59, 64, 91, 92, 99, 122], "2007": [5, 35, 42, 50, 53, 59, 64, 122], "16104": [5, 122], "kemp": [5, 9, 10, 11], "b": [5, 9, 10, 11, 38, 55, 85, 91, 92, 102], "zwinderman": [5, 9, 10, 11], "tuk": [5, 9, 10, 11], "kamphuisen": [5, 9, 10, 11], "obery": 5, "2000": [5, 9, 10, 11, 22, 29, 121], "neuron": [5, 9, 10, 11], "feedback": [5, 9, 10, 11, 68], "loop": [5, 9, 10, 11, 14, 66, 119], "slow": [5, 9, 10, 11, 16, 132, 140], "wave": [5, 9, 10, 11], "microcontinu": [5, 9, 10, 11], "ieee": [5, 9, 10, 11, 45, 46, 47, 48, 62, 82, 84, 85, 86, 87, 88, 97, 98], "transact": [5, 10, 82, 84, 85, 87, 88, 97, 98], "biomed": 5, "1185": [5, 9, 10, 11, 22], "1194": [5, 9, 10, 11], "goldberg": [5, 9, 10, 11], "amar": [5, 9, 10, 11], "glass": [5, 9, 10, 11], "hausdorff": [5, 9, 10, 11], "ivanov": [5, 9, 10, 11], "p": [5, 9, 10, 26, 27, 28, 29, 30, 35, 42, 50, 53, 59, 64, 91, 92, 97], "mark": [5, 9, 10, 11], "stanlei": [5, 9, 10, 11], "physiobank": [5, 9, 10, 11], "physiotoolkit": [5, 9, 10, 11], "research": [5, 9, 10, 11, 29, 33, 136], "resourc": [5, 7, 9, 10, 11, 13, 16, 24, 69, 74, 108, 111, 117, 118, 140], "complex": [5, 9, 10, 11, 28, 31, 71, 96], "circul": [5, 9, 10, 11], "101": [5, 9, 10, 11, 12], "e215": [5, 9, 10, 11], "e220": [5, 9, 10, 11], "chambon": [5, 9, 10, 97], "galtier": [5, 9, 10, 97], "arnal": [5, 9, 10, 97], "wainrib": [5, 9, 10, 97], "2018": [5, 9, 10, 27, 28, 29, 38, 40, 42, 44, 55, 58, 59, 61, 92, 97, 99], "multivari": [5, 9, 10, 97], "multimod": [5, 9, 10, 97], "tran": [5, 9, 10], "system": [5, 9, 10, 45, 62, 84, 85, 87, 88, 97, 98, 138], "rehabilit": [5, 9, 10, 84, 85, 87, 88, 97, 98], "758": [5, 9, 10, 97], "769": [5, 9, 10, 97], "381": [5, 6], "337": 5, "02": [6, 10, 23, 26, 31], "680": 6, "execut": [6, 12, 13, 14, 16, 17, 19, 23, 32, 71, 117], "auto_examples_advanced_train": 6, "00": [6, 9, 10, 13, 16, 18, 23, 28, 31, 32], "336": 6, "analaysi": [7, 24], "sleep": [7, 13, 16, 24, 29, 40, 58, 69, 73, 84, 90, 96, 97, 98, 101, 102, 108, 112, 117, 118, 120, 121, 123, 132, 134, 140], "cognit": [7, 24], "experi": [7, 14, 24, 28, 31, 67, 71], "stage": [7, 13, 24, 28, 29, 31, 69, 73, 84, 90, 96, 97, 98, 101, 102, 108, 112, 117, 118, 120, 121, 123, 132, 134, 140], "chambon2018": [7, 13, 24, 69, 73, 90, 97, 101, 108, 112, 117, 118, 121, 123, 132, 134], "eldele2021": [7, 13, 24, 69, 73, 90, 98, 101, 108, 112, 117, 121, 123, 132, 134], "big": [7, 13, 24, 69, 74, 108, 111, 117, 118, 140], "tuh": [7, 13, 14, 15, 23, 24, 69, 75, 108, 111, 117, 118, 140], "corpu": [7, 13, 14, 15, 23, 24, 69, 74, 75, 108, 111, 117, 118, 140], "bcicomp": 8, "0x7f27b43fca30": 8, "decid": [8, 27, 36, 37, 38, 40, 49, 51, 52], "about": [8, 9, 10, 12, 29, 70, 76, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 132, 135], "length": [8, 9, 11, 12, 14, 16, 26, 29, 44, 61, 69, 79, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 106, 111, 112, 140], "preced": 8, "create_windows_from_target_channel": [8, 140], "cnosid": 8, "finer": [8, 140], "fexion": 8, "idx_train": 8, "idx_valid": 8, "n_out_chan": 8, "long": [8, 14, 28, 29, 71, 84], "respons": [8, 9, 10, 11, 27, 29], "manag": [8, 9, 10, 11, 27, 29, 30], "inherit": [8, 9, 10, 11, 27, 29, 66, 119], "neuralnetregressor": 8, "logic": [8, 9, 10, 11, 27, 29, 31], "pearson": 8, "pearson_r_scor": 8, "net": [8, 66, 98, 102, 119, 125, 126, 127], "mseloss": [8, 119], "valid_pearson_r": 8, "train_pearson_r": 8, "train_r2": 8, "valid_r2": 8, "5083": 8, "5567": 8, "7019": 8, "1480": 8, "6079": 8, "7996": 8, "7986": 8, "3712": 8, "3152": 8, "2267": 8, "1482": 8, "3906": 8, "4933": 8, "stack": 8, "applied_exampl": [8, 12], "plot_bcic_iv_4_ecog_tri": [8, 13], "323": 8, "09": [8, 9, 26], "789": [8, 13], "315": [8, 13], "test": [9, 10, 11, 16, 21, 24, 25, 26, 27, 29, 32, 66, 69, 71, 72, 90, 95, 108, 112, 115, 117, 119, 132, 140], "adapt": [9, 11, 16, 86, 87, 88, 98, 99, 100], "distribut": [9, 10, 28, 44, 137], "individu": [9, 10, 11, 12, 26, 66, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 119, 140], "integr": [9, 10, 31], "omit": [9, 35], "downsampl": [9, 10, 109], "apply_on_arrai": [9, 12, 108], "0x7f279272ba90": 9, "0x7f27b2028d90": 9, "take": [9, 10, 11, 16, 17, 28, 30, 52, 80, 82, 85, 89, 98], "everi": [9, 10, 11, 14, 18, 28, 31, 71, 82, 85, 89], "consecut": [9, 10, 11, 50, 64, 101, 112, 120, 123], "simplifi": [9, 10, 121, 140], "rather": [9, 10], "freez": [9, 10, 140], "sequencesampl": [9, 10, 11, 140], "n_window": [9, 10, 11, 22, 82, 118, 120, 123], "n_windows_strid": [9, 10, 11, 123], "maxim": [9, 10, 29, 35], "overlap": [9, 10, 11, 77, 78, 79, 106, 111, 112], "372": 9, "383": 9, "implement": [9, 10, 14, 16, 28, 44, 52, 61, 66, 82, 83, 86, 87, 88, 89, 91, 92, 95, 119, 129, 130, 136, 140], "get_center_label": [9, 10], "isinst": [9, 10], "ceil": [9, 10, 100], "astyp": [9, 10], "appear": [9, 10, 11, 68], "lot": [9, 10, 11, 66, 119], "night": [9, 10, 11], "spent": [9, 10, 11], "imbalanc": [9, 10, 11], "avoid": [9, 10, 11, 12, 14, 16, 22, 26, 28, 73, 140], "frequent": [9, 10, 11], "compute_class_weight": [9, 10, 11], "vector": [9, 10, 106, 109], "timedistribut": [9, 10, 140], "feat_extractor": [9, 10], "return_feat": [9, 10, 84, 96, 97, 98], "start_dim": [9, 10], "len_last_lay": [9, 10], "neuralnetclassifi": [9, 10, 11, 27, 29], "mass": 9, "ss3": 9, "speak": [9, 11, 14], "recommend": [9, 11, 16, 28, 29, 33, 85, 138, 139], "balanced_accuraci": [9, 10], "criterion__weight": [9, 10, 11], "tensor": [9, 10, 11, 22, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 84, 85, 89, 94, 96, 97, 98, 99, 100, 101, 119, 124, 128, 129], "2107": 9, "6178": 9, "2066": 9, "6041": 9, "8945": 9, "2280": 9, "5977": 9, "6133": 9, "8725": 9, "2202": 9, "5796": 9, "2128": 9, "6148": 9, "8909": 9, "3580": 9, "4962": 9, "3285": 9, "5805": 9, "8779": 9, "4434": 9, "3255": [9, 28], "2195": 9, "7629": 9, "8823": 9, "5262": 9, "0843": 9, "3614": 9, "6399": 9, "8504": 9, "5755": 9, "9415": 9, "4105": 9, "4619": 9, "8893": 9, "6745": 9, "8265": 9, "3784": 9, "8734": 9, "8757": 9, "6944": 9, "7710": [9, 28], "3966": [9, 29], "8442": 9, "8759": 9, "7365": 9, "6541": 9, "5511": 9, "8660": 9, "spatial_conv": 9, "kernel_s": [9, 10, 90, 99], "feature_extractor": [9, 10], "ident": [9, 31, 43, 66, 83, 119], "relu": [9, 10, 89], "maxpool2d": 9, "dilat": [9, 10, 11, 26, 90], "ceil_mod": [9, 10], "end_dim": [9, 10], "inplac": [9, 10, 16], "in_featur": [9, 10], "816": 9, "out_featur": [9, 10], "bia": [9, 10, 11], "sharex": [9, 10, 11], "plot_confusion_matrix": [9, 10, 11, 26, 27, 140], "confusion_mat": [9, 10, 11, 26, 27, 134], "class_nam": [9, 10, 11, 26, 27, 134], "wake": [9, 10, 11, 73], "rem": [9, 10, 11], "28": [9, 11, 13, 28, 87, 88], "58": 9, "194": 9, "hypnogram": [9, 10, 11], "overlaid": [9, 10, 11], "correctli": [9, 10, 11, 90, 139, 140], "identifi": [9, 10, 11, 79, 111, 112], "amount": [9, 10, 11, 16, 109], "expert": [9, 10, 11], "annot": [9, 10, 11, 18, 19, 21, 26, 27, 28, 29, 31, 106], "text": [9, 10, 11, 28, 134], "150": [9, 10, 11, 71], "22222222222223": [9, 10, 11], "despit": [9, 10, 11], "held": [9, 10], "includ": [9, 11, 12, 14, 27, 28, 29, 31, 37, 56, 72, 104, 106, 107, 111, 112, 135, 136], "especi": [9, 29, 31], "ah": [9, 10, 11], "hac": [9, 10, 11], "jjl": [9, 10, 11], "obery\u00e9": [9, 10, 11], "bme": [9, 10, 11], "al": [9, 10, 11, 71, 83, 84, 86, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 127], "lan": [9, 10, 11], "jm": [9, 10, 11], "pch": [9, 10, 11], "rg": [9, 10, 11], "mietu": [9, 10, 11], "je": [9, 10, 11], "moodi": [9, 10, 11], "gb": [9, 10, 11], "peng": [9, 10, 11, 42, 59], "he": [9, 10, 11], "655": [9, 13], "plot_sleep_staging_chambon2018": [9, 13], "attent": [10, 82, 85, 98], "divyesh": [10, 140], "narayanan": [10, 140], "400": [10, 11, 140], "speed": [10, 11, 16, 140], "0x7f27927067a0": 10, "fpz": 10, "cz": [10, 12, 110, 116], "give": [10, 12, 22, 45, 62, 106, 135], "pz": [10, 12], "oz": 10, "0x7f2783a1f4c0": 10, "133": [10, 11], "sleepstagereldele2021": [10, 140], "1471": 10, "1814": 10, "1764": 10, "4756": 10, "6672": 10, "2712": [10, 26], "8848": 10, "2186": 10, "1543": 10, "1028": 10, "4518": 10, "4956": 10, "2200": 10, "2330": 10, "1087": 10, "_mrcnn": 10, "gelu": 10, "approxim": [10, 46, 47, 48], "features1": 10, "conv1d": [10, 11, 102], "batchnorm1d": 10, "ep": [10, 115], "05": [10, 11, 12, 23, 100], "momentum": [10, 83, 87, 88, 95], "affin": 10, "track_running_stat": 10, "maxpool1d": 10, "features2": 10, "afr": [10, 98], "_sebasicblock": 10, "conv1": 10, "bn1": 10, "conv2": 10, "bn2": 10, "se": 10, "_selay": 10, "avg_pool": 10, "adaptiveavgpool1d": [10, 100], "output_s": [10, 90, 101], "fc": [10, 98], "sigmoid": [10, 66, 119], "_tce": 10, "modulelist": 10, "_encoderlay": 10, "self_attn": 10, "_multiheadedattent": 10, "conv": [10, 11, 102], "_causalconv1d": 10, "feed_forward": 10, "_positionwisefeedforward": 10, "w_1": 10, "120": [10, 71, 98], "w_2": 10, "sublayer_output": 10, "_sublayeroutput": 10, "norm": [10, 82], "layernorm": 10, "06": [10, 11, 23], "elementwise_affin": 10, "n4": 10, "_classif": 10, "1469": 10, "undefinedmetricwarn": 10, "ill": 10, "zero_divis": 10, "behavior": [10, 29, 31, 66, 119, 140], "_warn_prf": 10, "averag": [10, 12, 26, 28, 30, 31, 66, 82, 90, 110, 119, 124], "msg_start": 10, "03": [10, 11, 13, 32], "48": [10, 18, 20, 21, 26, 27, 28, 29, 31, 68, 89], "43": 10, "faster": [10, 16, 26, 66, 109, 119], "89": 10, "eldel": [10, 98], "et": [10, 71, 83, 84, 86, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 127], "With": [10, 98], "vol": [10, 98], "29": [10, 30, 98], "pp": [10, 35, 42, 45, 46, 47, 48, 50, 53, 59, 62, 64, 85, 98], "809": [10, 98], "818": [10, 98], "1109": [10, 82, 86, 87, 88, 98], "tnsre": [10, 87, 88, 98], "3076234": [10, 98], "607": [10, 13], "plot_sleep_staging_eldele2021": [10, 13], "look": [11, 12, 17, 22, 28, 67, 121], "simpler": 11, "current": [11, 66, 110, 119, 135], "seq2seq": 11, "written": [11, 117, 137], "veri": [11, 28, 31, 69, 112], "short": [11, 12, 28, 31, 68, 84], "excecut": 11, "too": 11, "small": [11, 12, 26, 28, 135], "theo": [11, 140], "gnassoun": [11, 140], "omar": [11, 140], "emir": 11, "zero": [11, 16, 50, 64, 106, 109, 112, 115], "median": 11, "unit": [11, 106, 139], "interquartil": 11, "upsampl": [11, 102, 109], "light": [11, 134], "No": [11, 16, 18, 19, 28, 31, 68], "robust_scal": 11, "0x7f27b6eea590": 11, "shorter": [11, 140], "fulli": [11, 28, 29, 82, 85, 87, 88, 89], "usleep": [11, 140], "in_chan": [11, 30, 83, 91, 92, 93, 94, 95, 100, 102, 103], "with_skip_connect": [11, 102], "balanced_accuracy_multi": 11, "309": 11, "even": [11, 28, 31, 66, 67, 102, 119], "odd": [11, 89, 102], "trigger": 11, "intern": [11, 14, 16, 20, 21, 42, 44, 45, 46, 47, 48, 59, 61, 62, 108], "aten": 11, "src": 11, "nativ": 11, "cpp": 11, "1003": 11, "2040": 11, "6129": 11, "1707": 11, "5807": 11, "7701": 11, "2224": 11, "5430": 11, "1594": 11, "5866": 11, "3352": 11, "3464": 11, "4928": 11, "1853": 11, "6026": 11, "3770": 11, "52": 11, "34": [11, 29], "41": [11, 13, 26], "197": [11, 140], "84": 11, "399": 11, "perslev": [11, 102, 120], "darkner": [11, 102, 120], "kempfner": [11, 102, 120], "nikol": [11, 102, 120], "jennum": [11, 102, 120], "pj": [11, 102, 120], "igel": [11, 102, 120], "resili": [11, 102, 120], "npj": [11, 102, 120], "digit": [11, 22, 102, 120], "med": [11, 102, 120], "72": [11, 29, 102, 120], "plot_sleep_staging_usleep": [11, 13], "showcas": [12, 28, 31], "templ": [12, 74, 75, 140], "univers": [12, 71, 74, 75, 140], "hospit": [12, 74, 75, 140], "www": [12, 14, 33, 67, 74, 75], "isip": [12, 14, 74, 75], "piconepress": [12, 14, 74, 75], "tuh_eeg": [12, 14, 22, 74, 75], "shtml": [12, 74, 75], "c_tueg": [12, 74], "luka": [12, 17, 18, 19, 20, 21, 22, 30, 33, 140], "gemein": [12, 17, 18, 19, 20, 21, 22, 30, 140], "tempfil": [12, 16, 18], "error": [12, 22, 26, 29, 30, 79, 105, 111, 112, 113, 119, 135, 140], "messag": [12, 14, 22, 135], "everytim": [12, 14, 22], "plot_tuh_eeg_corpu": [12, 13], "creation": [12, 22], "mock": [12, 22], "want": [12, 14, 18, 21, 22, 24, 27, 28, 29, 31, 66, 119, 136, 139], "disconsid": 12, "section": [12, 22, 71, 138], "_tuhmock": [12, 22], "noqa": [12, 22], "f811": [12, 22], "firstli": [12, 21], "complet": [12, 14, 26, 66, 119], "read": [12, 14, 16, 17, 18, 19, 74, 75, 80, 112], "tuh_path": [12, 14, 22], "pars": 12, "inform": [12, 14, 17, 28, 40, 58, 66, 69, 76, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 106, 119, 121, 139], "path": [12, 14, 16, 17, 18, 19, 22, 31, 67, 69, 74, 75, 80, 81], "patient": [12, 67], "id": [12, 18, 20, 21, 26, 27, 28, 29, 31, 69, 74, 75, 80, 111, 112, 140], "sort": [12, 26, 27, 140], "chronolog": [12, 74, 75], "year": [12, 33], "month": [12, 33], "dai": [12, 68], "segment": [12, 16, 28, 31, 106], "regard": 12, "gender": [12, 18, 22, 74, 75], "insert": [12, 22, 90], "job": [12, 66, 74, 80, 106, 109, 111, 112, 117, 119], "load": [12, 16, 17, 19, 22, 23, 67, 69, 72, 73, 75, 80, 83, 95, 108, 111, 112, 117, 140], "target_nam": [12, 14, 18, 22, 30, 69, 70, 74, 75, 80, 140], "add_physician_report": [12, 22, 74, 75], "__name__": 12, "statist": 12, "plt_histogram": 12, "df_of_ages_gend": 12, "ylim": 12, "show_titl": 12, "dafaram": 12, "male_df": 12, "female_df": 12, "figur": [12, 26, 27, 28, 68, 82, 134], "suptitl": 12, "95": [12, 66, 119], "male": 12, "hist": 12, "bin": 12, "green": 12, "orient": 12, "horizont": 12, "axhlin": 12, "1f": [12, 31], "std": [12, 28, 42, 59, 71], "barh": [12, 28], "height": [12, 28], "width": [12, 29, 100, 106], "xlim": 12, "upper": [12, 16, 106], "left": [12, 26, 27, 28, 38, 66, 68, 71, 119], "ytick": 12, "gca": 12, "invert_xaxi": 12, "femal": [12, 71], "122": 12, "subplots_adjust": 12, "wspace": 12, "hspace": 12, "count": [12, 66, 119], "labelpad": 12, "durat": [12, 28, 29, 30, 104, 106, 112], "least": [12, 106, 121, 122], "five": [12, 67], "select_by_dur": 12, "inf": 12, "determin": [12, 29, 66, 88, 119], "d_i": 12, "ones": [12, 120, 140], "split": [12, 15, 20, 23, 24, 30, 66, 69, 72, 83, 95, 112, 119, 140], "discard": [12, 73], "incomplet": 12, "configur": [12, 16, 26, 28, 31], "subdivis": 12, "le": 12, "repres": [12, 21, 46, 47, 48, 85], "re": [12, 21, 66, 110, 119, 135], "referenc": [12, 110], "short_ch_nam": 12, "a1": 12, "a2": 12, "fp1": 12, "fp2": 12, "f3": 12, "f4": 12, "c3": 12, "c4": 12, "p3": 12, "p4": 12, "o1": [12, 116], "o2": 12, "f7": 12, "f8": 12, "t3": 12, "t4": 12, "t5": 12, "t6": 12, "fz": 12, "subdivid": 12, "refer": [12, 33, 35, 36, 37, 38, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 56, 58, 59, 61, 62, 64, 67, 68, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 110, 116, 120, 122, 129, 134], "ar_ch_nam": 12, "ref": 12, "le_ch_nam": 12, "ar_ch_map": 12, "ch_name": [12, 14, 17, 77, 105, 116], "le_ch_map": 12, "ch_map": 12, "select_by_channel": 12, "endswith": 12, "seta": 12, "kei": [12, 21, 26, 27, 69, 70, 76, 111, 112], "recod": 12, "setb": 12, "issubset": 12, "region": [12, 106], "renam": [12, 140], "micro": 12, "volt": 12, "clip": 12, "outlier": 12, "800": [12, 18], "common": [12, 14, 110, 138, 140], "custom_rename_channel": 12, "unexpect": [12, 135], "rename_channel": 12, "custom_crop": 12, "include_tmax": [12, 104], "bigger": 12, "set_eeg_refer": [12, 110], "ref_channel": [12, 110], "ch_type": [12, 110], "pick_channel": [12, 105, 108], "a_min": 12, "a_max": 12, "parallel": [12, 14, 15, 23, 24, 69, 73, 74, 80, 87, 88, 89, 106, 108, 109, 111, 112, 117, 140], "addition": [12, 18, 33, 66, 119, 130], "serial": [12, 15, 18, 23, 24, 69, 73, 108, 111, 117, 140], "must": [12, 14, 16, 76, 83, 95, 96, 101, 104, 108, 110, 111, 120, 138, 140], "lazi": [12, 15, 16, 23, 24, 75, 83, 95, 111, 140], "capabl": [12, 16, 28, 31, 66, 119], "automat": [12, 14, 67, 84, 100, 110, 140], "reload": [12, 16, 117], "machin": [12, 14, 16, 28, 31, 33, 35, 38, 42, 50, 53, 55, 59, 64, 66, 119], "build": [12, 26, 31, 137, 139], "core": [12, 16, 31], "out_path": 12, "mkdtemp": [12, 18], "directori": [12, 16, 18, 26, 67, 69, 74, 75, 80, 117, 139], "tuh_preproc": 12, "concat_d": [12, 16, 18, 111, 112, 113, 117], "save_dir": [12, 16, 117], "readi": [12, 16, 17, 18, 19, 30], "model": [12, 14, 21, 32, 33, 42, 59, 66, 69, 70, 72, 108, 111, 112, 115, 117, 119, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 140], "train": [12, 14, 20, 21, 32, 66, 69, 71, 72, 76, 90, 95, 108, 112, 115, 117, 119, 132, 140], "disk": [12, 14, 16, 74, 75, 112], "tuh_window": [12, 22], "013": [12, 13], "191": 13, "auto_examples_applied_exampl": 13, "165": 13, "sake": 14, "etc": [14, 27, 29, 108], "preprocess": [14, 15, 18, 20, 21, 22, 23, 24, 30, 69, 73, 136, 140], "continu": [14, 16, 20, 70, 71, 77, 78, 79, 111, 112, 118, 138, 140], "fast": [14, 16, 31, 132], "expens": [14, 66, 119], "ultim": 14, "becom": [14, 16, 28], "imposs": 14, "tb": 14, "potenti": [14, 16, 31, 138], "issu": [14, 16, 135, 140], "overhead": [14, 112], "accomod": 14, "window": [14, 16, 18, 21, 66, 69, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 109, 111, 112, 118, 119, 120, 121, 122, 123, 130, 131, 140], "overal": 14, "though": [14, 16, 28, 31], "impact": [14, 26, 29], "dispatch": 14, "enabl": [14, 16, 26, 31, 66, 68, 100, 119, 140], "fif": [14, 16, 18, 69, 80, 140], "edf": [14, 16, 17, 19, 22], "itertool": [14, 16], "product": [14, 16], "sn": [14, 28, 29], "tuhabnorm": [14, 18, 140], "deep4net": [14, 30], "affect": [14, 26, 127], "57": 14, "algorithm": [14, 27, 28, 29, 31], "set_num_thread": 14, "thread": 14, "autom": [14, 28], "abnorm": [14, 75], "slide": [14, 30, 82, 111], "bundl": 14, "prepar": [14, 16, 20, 31], "load_example_data": 14, "window_len_": 14, "n_record": [14, 121], "creat": [14, 16, 17, 18, 19, 20, 21, 30, 66, 69, 76, 77, 78, 79, 110, 111, 112, 119, 130, 140], "bool": [14, 40, 44, 45, 46, 47, 48, 58, 62, 66, 67, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 109, 110, 111, 112, 116, 117, 119, 122, 123, 127, 130, 132, 134], "windows_d": [14, 16], "assum": [14, 66, 104, 119, 124, 128, 140], "patholog": [14, 18, 75], "window_len_sampl": 14, "drop_bad_window": [14, 30, 79, 111, 112, 113], "bad": [14, 16, 17, 18, 19, 21, 106, 107, 110, 135], "xxx": [14, 93], "itself": [14, 28, 29, 135], "drop_bad": [14, 79, 111, 112], "create_example_model": 14, "kind": 14, "str": [14, 22, 26, 27, 28, 34, 66, 67, 69, 70, 72, 74, 75, 76, 79, 80, 83, 85, 90, 95, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 127, 134], "n_filters_tim": [14, 30, 83, 85, 95], "filter_time_length": [14, 83, 85, 95], "n_filters_spat": [14, 30, 83, 95], "pool_time_length": [14, 83, 85, 95], "pool_time_strid": [14, 83, 85, 95], "split_first_lay": [14, 83, 93, 95], "batch_norm": [14, 83, 95], "batch_norm_alpha": [14, 83, 87, 88, 93, 95], "drop_prob": [14, 29, 83, 85, 86, 87, 88, 91, 92, 95, 99, 100], "elif": [14, 30], "n_filters_2": [14, 30, 83], "filter_length_2": [14, 83], "n_filters_3": [14, 30, 83], "filter_length_3": [14, 83], "n_filters_4": [14, 30, 83], "filter_length_4": [14, 83], "first_pool_mod": [14, 83], "max": [14, 16, 28, 83, 91, 95, 97, 100, 102, 106, 115], "later_pool_mod": [14, 83], "double_time_conv": 14, "stride_before_pool": [14, 30, 83], "valueerror": [14, 30, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102], "run_train": 14, "serv": [14, 68, 70, 76], "loss_val": 14, "zero_grad": [14, 31], "256": [14, 140], "minibatch": 14, "pin_memori": 14, "pin": 14, "n_repetit": 14, "repeat": [14, 135], "get": [14, 16, 17, 22, 26, 27, 28, 31, 66, 119], "folder": [14, 67], "storag": 14, "tuh_eeg_abnorm": 14, "v2": 14, "cycl": 14, "combin": [14, 16, 69], "all_result": 14, "win_len_": 14, "model_kind": 14, "repetit": [14, 16, 71], "nrepetit": 14, "n": [14, 16, 22, 26, 27, 28, 29, 31, 35, 36, 37, 42, 44, 50, 53, 54, 56, 59, 61, 64, 82, 91, 92, 97, 129], "data_loading_start": 14, "data_loading_end": 14, "training_setup_start": 14, "worker_init_fn": 14, "training_setup_end": 14, "model_training_start": 14, "trained_model": 14, "model_training_end": 14, "del": 14, "data_prepar": 14, "training_setup": 14, "model_train": 14, "csv": 14, "results_df": 14, "fname": 14, "lazy_vs_eager_loading_result": 14, "to_csv": 14, "summar": 14, "catplot": 14, "row": [14, 22, 38, 69, 90, 134], "hue": 14, "col": 14, "strip": 14, "hardwar": [14, 16], "slower": 14, "pretti": [14, 135], "worker": [14, 130, 140], "speedup": 14, "benchmark_lazy_eager_load": [14, 23], "basic": [15, 26, 28, 31, 32, 52, 69, 72, 89, 90, 95, 108, 112, 115, 117, 132, 134], "eager": [15, 23, 24, 75, 83, 95, 111], "discret": [15, 23, 24, 69, 74, 111, 140], "simplest": 16, "scenario": [16, 112], "act": [16, 110], "stai": [16, 26, 68], "aris": 16, "bottleneck": [16, 87, 88, 100], "consider": 16, "solut": [16, 110], "clear": 16, "downsid": 16, "write": [16, 18], "cours": [16, 67], "whenev": 16, "up": [16, 17, 68, 102, 109, 140], "significantli": 16, "joblib": 16, "made": [16, 89, 140], "tradeoff": 16, "memory_profil": 16, "memory_usag": 16, "goe": 16, "prepare_data": 16, "n_rec": 16, "tmp_dir": 16, "temporarydirectori": 16, "overwrit": [16, 18, 66, 69, 70, 74, 75, 76, 81, 117, 119], "measur": 16, "peak": [16, 111, 112], "character": 16, "n_repet": 16, "all_n_rec": 16, "all_n_job": 16, "mem": 16, "proc": 16, "time_taken": 16, "max_mem": 16, "mne_data": [16, 17, 19, 26, 67], "sc4001e0": 16, "psg": 16, "detect": [16, 17, 19, 29, 71], "sc4011e0": 16, "2507000": 16, "25070": 16, "sec": [16, 17, 18, 19, 30], "contigu": [16, 50, 64], "fir": [16, 106], "phase": [16, 40, 58, 106], "causal": [16, 106], "firwin": [16, 106], "ham": [16, 106], "0194": 16, "passband": 16, "rippl": 16, "stopband": 16, "attenu": [16, 106], "edg": [16, 106], "transit": [16, 35, 53, 106], "bandwidth": [16, 35, 53], "450": 16, "tmp": [16, 18], "tmp6ti5ln94": 16, "3260000": 16, "32600": 16, "574": [16, 18], "subdirectori": [16, 18, 69, 117], "open": [16, 18, 135, 136, 138], "isotrak": 16, "2884000": 16, "5391000": 16, "28840": 16, "53910": 16, "1975000": 16, "5235000": 16, "19750": 16, "52350": 16, "835": 16, "event": [16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 73, 79, 111, 112], "3000": [16, 22, 30], "point": [16, 17, 18, 19, 20, 21, 68, 110, 114, 115], "1086": 16, "566": [16, 18], "match": [16, 18, 19, 29, 69, 82], "exist": [16, 18, 22, 28, 30, 67, 69, 70, 76, 110, 117], "encount": [16, 18, 135], "mix": [16, 18, 44, 61, 129], "i_d": [16, 18], "epo": [16, 18, 69, 80], "29990": 16, "ctf": [16, 18], "compens": [16, 18, 28, 106], "matric": [16, 18, 26, 27, 46, 47, 48, 66, 119], "ad": [16, 18, 19, 69, 74, 75, 100, 102, 110, 140], "metadata": [16, 18, 19, 69, 76, 111, 119, 120, 121, 122, 123], "baselin": [16, 18, 19], "correct": [16, 18, 19, 31, 66, 86, 87, 88, 89, 91, 92, 119, 140], "tmpee7qw9p2": 16, "tmpjl6ez01h": 16, "tmp1axbavkp": 16, "sub_df": 16, "groupbi": 16, "mib": 16, "without": [16, 26, 28, 29, 31, 66, 119, 129, 140], "circl": 16, "advantag": [16, 28, 87, 88], "togeth": [16, 26, 140], "54": [16, 23, 26], "627": [16, 23], "416": [16, 23], "plot_benchmark_preprocess": [16, 23], "create_from_x_i": 17, "fetch": [17, 19, 20, 21, 68, 71, 72], "imagin": [17, 19], "hand": [17, 19, 24, 27, 29, 68, 71], "feet": [17, 18, 19, 21, 26, 27, 28, 29, 31, 68, 71], "event_cod": [17, 19], "yet": [17, 19, 90, 139], "physionet_path": [17, 19], "eegbci": [17, 19], "load_data": [17, 19], "update_path": [17, 19], "io": [17, 19, 70, 104, 106, 116], "read_raw_edf": [17, 19], "stim_channel": [17, 19], "eegmmidb": [17, 19], "s022": [17, 19], "s022r05": [17, 19], "19999": [17, 19], "124": [17, 19, 26], "994": [17, 19], "s022r06": [17, 19], "s022r09": [17, 19], "s022r10": [17, 19], "s022r13": [17, 19], "s022r14": [17, 19], "ani": [17, 18, 26, 28, 31, 66, 98, 106, 110, 119, 139], "500": [17, 19, 27, 121, 140], "rawarrai": [17, 19, 30, 79], "float64": [17, 19, 30], "20000": 17, "manipul": 17, "x_i": 17, "y_i": 17, "window_ind": 17, "start_ind": 17, "stop_ind": 17, "092": [17, 23], "plot_custom_dataset_exampl": [17, 23], "load_concat_dataset": [18, 140], "skip": [18, 22, 28, 31, 89, 102], "fn": [18, 108], "0x7f279272a140": 18, "concat": [18, 69, 82, 111, 112, 117], "json": [18, 69, 80, 140], "hold": [18, 69, 70, 76, 111, 112], "due": [18, 31, 140], "tmpdir": 18, "temporari": [18, 140], "tmp0pprh_rr": 18, "complianc": 18, "upon": 18, "dataset_load": 18, "ids_to_load": [18, 80], "3868": 18, "386": 18, "left_hand": [18, 21, 26, 27, 28, 29, 31], "right_hand": [18, 21, 26, 27, 28, 29, 31], "tongu": [18, 21, 26, 27, 28, 29, 31, 68], "run_1": [18, 20, 21], "run_3": [18, 20, 21], "again": [18, 22, 28], "windows_dataset_load": 18, "3900": 18, "741": [18, 23], "214": 18, "plot_load_save_dataset": [18, 23], "create_from_mne_raw": 19, "create_from_mne_epoch": 19, "t0": 19, "t1": 19, "t2": 19, "beforehand": 19, "list_of_epoch": [19, 78], "Not": 19, "81": 19, "369": [19, 23], "plot_mne_dataset_exampl": [19, 23], "daniel": [20, 33, 140], "wilson": [20, 140], "dan": [20, 140], "wil": 20, "run_0": [20, 21, 121], "run_2": [20, 21], "run_4": [20, 21], "run_5": [20, 21], "break": [20, 68], "place": [20, 30, 90, 104, 116, 118], "legaci": 20, "inst": [20, 105, 106, 107, 110], "criteria": [20, 66, 119], "subset_nam": 20, "232164": 20, "012": [20, 23], "239": [20, 21], "plot_moabb_dataset_exampl": [20, 23], "aim": [21, 22], "dictionari": [21, 66, 69, 72, 106, 119], "string": [21, 22, 33, 38, 46, 47, 48, 66, 69, 106, 107, 108, 117, 119, 127], "entri": [21, 105], "0x7f2792739870": 21, "0x7f2792738070": 21, "0x7f27b3f83550": 21, "0x7f27bacc2770": 21, "0x7f27bacc0fa0": 21, "0x7f27bacc2860": 21, "integ": [21, 22, 26, 27, 38, 50, 55, 64, 69, 106, 107], "0x7f279270d6c0": 21, "0x7f2792563010": 21, "0x7f2792561d80": 21, "0x7f2792563280": 21, "0x7f27b43f8e50": 21, "0x7f27b431a110": 21, "0x7f27b20f5030": 21, "similarli": [21, 31], "0x7f27b4306c20": 21, "0x7f27925622c0": 21, "0x7f2792563730": 21, "0x7f279271dd50": 21, "0x7f279271eec0": 21, "0x7f27b20f6290": 21, "299": [21, 23], "plot_split_dataset": [21, 23], "welcom": 22, "ll": 22, "guid": [22, 28, 138], "log": [22, 26, 31, 66, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 104, 106, 107, 109, 110, 111, 112, 119], "excess": 22, "v1": [22, 31], "02_tcp_le": 22, "00000058": 22, "s001": 22, "01_tcp_ar": 22, "099": 22, "00009932": 22, "s004": 22, "03_tcp_ar_a": 22, "123": 22, "00012331": 22, "s0": 22, "00000000": 22, "149": [22, 31], "00014928": 22, "83": [22, 31], "ndarrai": [22, 45, 62, 66, 109, 114, 115, 118, 119, 123, 130, 131], "92922518": 22, "22477157": 22, "12493701": 22, "28417889": 22, "13578887": 22, "56835277": 22, "25153176": 22, "7638324": 22, "14345092": 22, "30167542": 22, "68056549": 22, "70380673": 22, "70052629": 22, "21543634": 22, "96330007": 22, "02736802": 22, "65902848": 22, "15756383": 22, "38658058": 22, "04194231": 22, "15447331": 22, "set_descript": [22, 31, 69, 70, 76], "ind": 22, "16017832": 22, "11754766": 22, "6515615": 22, "50407195": 22, "7429778": 22, "9292252": 22, "86039335": 22, "5169721": 22, "0308012": 22, "1209397": 22, "5210943": 22, "2247716": 22, "373041": 22, "14827406": 22, "25829056": 22, "1486133": 22, "15352039": 22, "30362263": 22, "939559": 22, "5686462": 22, "5503989": 22, "3299779": 22, "3865806": 22, "7443461": 22, "1792846": 22, "25878426": 22, "5670986": 22, "2997373": 22, "0537782": 22, "4429058": 22, "05458383": 22, "000525": 22, "66521484": 22, "15447332": 22, "dtype": [22, 29], "float32": 22, "2600": 22, "3600": [22, 73], "dl": 22, "batch_i": 22, "batch_ind": 22, "simpli": 22, "8024": 22, "4564": 22, "4433": 22, "7404": 22, "2522": [22, 29], "0508": 22, "4418": 22, "5201": 22, "2037": 22, "0273": 22, "0506": 22, "1677": 22, "1145": 22, "7075": 22, "1768": 22, "0260": 22, "7216": 22, "2742": 22, "3986": 22, "3912": 22, "8000": 22, "0593": 22, "8097": 22, "1729": 22, "6267": 22, "8419": 22, "3996": 22, "6685": 22, "9266": 22, "1319": 22, "1409": 22, "6246": 22, "6229": 22, "5953": 22, "3169": 22, "4604": 22, "2885": 22, "0168": 22, "6279": 22, "6533": 22, "7673": 22, "6671": 22, "0448": 22, "1422": 22, "5395": 22, "4664": 22, "1882": 22, "2031": 22, "6282": 22, "4535": 22, "8585": 22, "2657": 22, "9942": 22, "3878": 22, "1360": 22, "9132": 22, "9481": 22, "5033": 22, "3406": 22, "6089": [22, 28], "9883": 22, "2919": 22, "3796": 22, "8036": 22, "7666": 22, "8174": 22, "3829": 22, "1508": 22, "8516": 22, "0426": 22, "1322": 22, "4122": 22, "2526": 22, "9711": 22, "6890": 22, "4660": 22, "5510": 22, "3613": 22, "0280": 22, "1350": 22, "2249": 22, "9406": 22, "7754": 22, "7664": 22, "1807": 22, "8206": 22, "1281": 22, "9353": 22, "0165": [22, 28], "6509": 22, "7276": 22, "2137": 22, "5619": 22, "0408": 22, "9825": 22, "3648": 22, "6978": 22, "8943": 22, "2374": 22, "4398": 22, "8218": 22, "5172": 22, "2975": 22, "0311": 22, "1602": 22, "1175": 22, "6516": 22, "5041": 22, "7430": 22, "9292": 22, "8604": 22, "5170": 22, "0308": 22, "1209": 22, "5211": 22, "2248": 22, "3730": 22, "1483": 22, "2583": 22, "1486": 22, "1535": 22, "1249": 22, "3036": 22, "9396": 22, "5686": 22, "5504": 22, "3300": 22, "3866": 22, "7443": 22, "1793": 22, "2588": 22, "5671": 22, "2997": 22, "0419": 22, "0538": 22, "4429": 22, "0546": 22, "1545": 22, "671": [22, 23], "plot_tuh_discrete_multitarget": [22, 23], "811": 23, "auto_examples_datasets_io": 23, "238": [23, 35, 42, 50, 53, 59, 64], "213": [23, 30], "fundament": [24, 25], "tune": [24, 25, 31, 32, 69, 72, 85, 90, 95, 108, 112, 115, 117, 132, 140], "fake": [24, 25, 32, 69, 70, 83, 90, 95, 103, 111, 124, 132, 140], "auto_examples_python": 24, "auto_examples_jupyt": 24, "push": [26, 66, 119], "produc": [26, 28, 31, 98], "neighbour": 26, "simultan": [26, 87, 88], "sub": [26, 140], "afterward": [26, 28, 82, 85, 89, 110], "implicitli": [26, 28, 31], "timestep": 26, "user": [26, 66, 119, 135, 137, 138, 140], "mostli": 26, "runtim": 26, "rule": [26, 66, 119], "mathemat": 26, "neighbourhood": 26, "At": [26, 68], "redund": 26, "lead": [26, 28, 66, 110, 119], "gradient": [26, 140], "softmax": [26, 30, 66, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 119], "likelihood": [26, 66], "typic": [26, 66, 104, 119], "locat": [26, 67], "anyth": [26, 66], "manual": [26, 28, 138], "runtimewarn": 26, "config": [26, 67], "mne_datasets_bnci_path": 26, "set_config": 26, "get_config": 26, "0x7f27b40a3580": 26, "definit": [26, 66, 119], "torchinfo": [26, 27, 28, 31, 90, 140], "tabl": [26, 27, 28, 29, 31, 82, 90, 140], "976": 26, "804": 26, "And": 26, "dens": [26, 90, 96, 97], "explicit": [26, 127], "deep4": [26, 27, 140], "001": [26, 27, 30, 68, 114, 115], "nll_loss": 26, "4632": 26, "9340": 26, "6765": 26, "2539": 26, "4086": 26, "percent": [26, 27], "misclass": [26, 27], "assign": [26, 27, 131], "train_misclass": [26, 27], "valid_misclass": [26, 27], "misclassif": [26, 27], "get_ylim": [26, 27], "room": [26, 27], "model_build": [26, 27, 29, 30, 31], "plot_bcic_iv_2a_moabb_crop": [26, 32], "320": 26, "label_dict": [26, 27], "i_class": [26, 27], "event_id": [26, 27], "kv": [26, 27], "conf": [26, 27], "800x550": [26, 27], "tangermann": [26, 27, 28, 29, 30, 33, 83, 94, 95, 134], "m\u00fcller": [26, 27, 28, 29], "aertsen": [26, 27, 28, 29], "birbaum": [26, 27, 28, 29], "braun": [26, 27, 28, 29], "brunner": [26, 27, 28, 29], "leeb": [26, 27, 28, 29], "mehr": [26, 27, 28, 29], "mueller": [26, 27, 28, 29], "putz": [26, 27, 28, 29], "nolt": [26, 27, 28, 29], "2012": [26, 27, 28, 29], "review": [26, 27, 28, 29], "frontier": [26, 27, 28, 29, 33], "neurosci": [26, 27, 28, 29, 33], "schirrmeist": [26, 27, 28, 29, 30, 33, 71, 83, 94, 95, 134, 140], "springenberg": [26, 27, 28, 29, 30, 33, 83, 94, 95, 134], "fieder": [26, 27, 28, 29, 30, 33, 83, 94, 95, 134], "glasstett": [26, 27, 28, 29, 30, 33, 83, 94, 95, 134], "eggensperg": [26, 27, 28, 29, 30, 33, 83, 94, 95, 134], "hutter": [26, 27, 28, 29, 33, 83, 94, 95, 134], "burgard": [26, 27, 28, 29, 33], "ball": [26, 27, 28, 29, 30, 33, 71, 83, 94, 95, 134], "2017": [26, 27, 28, 29, 30, 33, 45, 46, 47, 48, 62, 71, 83, 84, 94, 95, 134], "hum": [26, 27, 28, 29], "mapp": [26, 27, 28, 29], "5391": [26, 27, 28, 29, 30], "5420": [26, 27, 28, 29, 30], "1002": [26, 27, 28, 29, 33, 83, 94, 95, 134], "hbm": [26, 27, 28, 29, 33, 83, 94, 95, 134], "23730": [26, 27, 28, 29, 33, 83, 94, 95, 134], "936": [26, 32], "1114": 26, "classic": 27, "wrapper": [27, 28, 83, 95], "via": [27, 28, 29, 102, 106, 137, 138, 140], "0x7f27b2200190": 27, "benefici": 27, "6001": [27, 28], "6724": 27, "4743": 27, "2570": 27, "9811": 27, "3432": 27, "2569": [27, 28], "1473": 27, "0234": [27, 29], "3779": 27, "0680": 27, "2431": 27, "9948": 27, "3118": 27, "plot_bcic_iv_2a_moabb_tri": [27, 32], "277": [27, 140], "jayaram": [27, 28, 29], "vinai": [27, 28, 29], "alexandr": [27, 28, 29, 33], "barach": [27, 28, 29], "trustworthi": [27, 28, 29], "066011": [27, 28, 29], "395": [27, 32], "162": 27, "properli": [28, 106, 109, 110], "detail": [28, 31, 44, 61, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 109, 110, 116, 132, 139], "exclus": [28, 31], "elabor": [28, 31], "feel": [28, 31], "free": [28, 31], "distinguish": 28, "scheme": [28, 31, 110], "answer": [28, 31], "reliabl": [28, 31], "sound": [28, 31], "divis": [28, 31, 96, 98, 115], "But": [28, 31], "stori": [28, 31], "what": [28, 66, 82, 111, 112, 119], "learnabl": 28, "infer": [28, 29, 66, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 112, 119, 127], "connect": [28, 29, 82, 85, 89, 96, 102], "bias": 28, "capac": [28, 29], "develop": [28, 31, 135, 139], "ml": [28, 31], "degre": [28, 31, 45, 46, 47, 48, 62], "freedom": [28, 31], "kept": [28, 31], "leakag": [28, 31], "memor": [28, 31], "independ": [28, 31, 40, 58, 106, 140], "never": [28, 31], "explicitli": [28, 31, 106, 107, 110], "recogn": [28, 31], "behind": [28, 31], "alwai": [28, 31, 33, 52, 66, 119], "paramt": [28, 31], "readabl": [28, 31, 106], "reiniti": [28, 31], "rescal": [28, 29], "off": [28, 29, 106], "varianc": [28, 29, 115], "0x7f27b3f8e470": 28, "One": [28, 29, 68, 87, 88], "demarc": [28, 29], "stimulu": [28, 29], "trial_stop_offset_second": [28, 29], "matter": [28, 31, 74, 75], "easiest": 28, "distinct": [28, 31], "previous": [28, 31], "credibl": [28, 31], "test_acc": [28, 31], "9325": 28, "2351": 28, "8139": 28, "patch": 28, "font_scal": 28, "plot_simple_train_test": 28, "all_dataset": 28, "bd_cmap": 28, "3a6190": 28, "683e00": 28, "ddf2ff": 28, "2196f3": 28, "ndataset": 28, "nsplit": 28, "invert_yaxi": 28, "ncol": 28, "bbox_to_anchor": 28, "set_xlim": 28, "risk": [28, 44, 61, 129], "tweak": 28, "until": [28, 68], "visit": 28, "realli": 28, "quit": 28, "unreli": 28, "ratio": 28, "leav": [28, 140], "empti": [28, 66, 106, 110], "x_train": 28, "train_indic": 28, "val_indic": 28, "indices_": 28, "train_subset": 28, "val_subset": 28, "meaning": 28, "3348": 28, "2877": 28, "3448": [28, 29], "0762": 28, "3522": 28, "0681": 28, "3621": 28, "5753": 28, "5206": 28, "82": [28, 42, 59], "compact": [28, 91, 92], "plot_train_valid_test": 28, "n_train": 28, "n_val": 28, "n_test": 28, "mention": 28, "suffici": 28, "unseen": 28, "holdout": 28, "highli": 28, "cross_val_scor": 28, "splitter": 28, "train_val_split": 28, "By": [28, 29, 30, 44, 66, 119], "processor": [28, 29], "cv_result": 28, "2565": 28, "2217": 28, "4566": 28, "2609": 28, "3416": 28, "2171": 28, "3150": 28, "2652": 28, "0127": 28, "3238": 28, "2870": [28, 29], "1441": 28, "3180": 28, "0173": 28, "2641": 28, "1313": 28, "3079": 28, "2727": 28, "0366": 28, "3175": 28, "3853": 28, "0511": 28, "3187": 28, "9833": 28, "3512": 28, "plot_k_fold": 28, "fraction": [28, 30], "ii": 28, "tr_idx": 28, "val_idx": 28, "n_train2": 28, "07": 28, "rotat": [28, 45, 46, 47, 48, 62, 134], "90": [28, 29, 134], "verticalalign": 28, "horizontalalign": 28, "transax": 28, "earli": 28, "rough": 28, "quickli": 28, "messi": 28, "jointli": 28, "sould": 28, "analog": [28, 127], "grid": [28, 29], "tupl": [28, 29, 44, 52, 61, 66, 70, 73, 90, 103, 109, 116, 119, 122, 134], "00625": [28, 29], "000625": 28, "best_paramet": 28, "3565": 28, "4721": 28, "0063": [28, 29], "4266": 28, "3913": [28, 29], "1627": 28, "3510": 28, "4000": 28, "1149": 28, "3136": 28, "9486": 28, "3194": 28, "2016": [28, 91], "7822": 28, "2847": 28, "0208": 28, "replac": [28, 50, 64, 140], "868": [28, 32], "392": [28, 32], "plot_how_train_test_and_tun": [28, 32], "sensit": [29, 68, 134], "hyeperparamet": 29, "signific": 29, "discrimin": 29, "pathologi": 29, "playbook": 29, "googl": 29, "0x7f27b21dd450": 29, "functool": 29, "partial": 29, "analyz": 29, "initialis": [29, 119], "validsplit": [29, 66, 119], "slice": [29, 106, 107, 111, 112], "fine": 29, "learning_r": 29, "0000625": 29, "module__drop_prob": 29, "got": 29, "3130": 29, "8104": 29, "3793": 29, "1233": 29, "9180": 29, "7925": 29, "5862": 29, "7020": 29, "8676": 29, "1558": 29, "8670": 29, "4522": 29, "0370": 29, "4483": 29, "7040": 29, "8645": 29, "2348": 29, "6052": 29, "2759": 29, "2582": 29, "8675": 29, "5181": 29, "5276": 29, "8607": 29, "5301": 29, "3103": 29, "4240": 29, "8769": 29, "4076": 29, "2916": 29, "6926": 29, "6729": 29, "8680": 29, "4957": 29, "1572": 29, "4138": 29, "7131": 29, "8406": 29, "9938": 29, "1886": 29, "8678": 29, "3739": 29, "4401": 29, "4828": 29, "8592": 29, "2174": 29, "6406": 29, "0672": 29, "8686": 29, "6373": 29, "8733": 29, "8638": 29, "2783": 29, "6966": 29, "2069": 29, "8291": 29, "8395": 29, "5263": 29, "3642": 29, "8621": 29, "4261": 29, "3976": 29, "8925": 29, "8624": 29, "5304": 29, "6155": 29, "8003": 29, "8979": 29, "2435": 29, "2416": 29, "7556": 29, "8648": 29, "6460": 29, "2760": 29, "8744": 29, "9100": 29, "9077": 29, "8669": 29, "0091": 29, "3657": 29, "8689": 29, "0078": 29, "5285": 29, "8400": 29, "7658": 29, "0842": 29, "8467": 29, "2957": 29, "2414": 29, "4195": 29, "7471": 29, "5000": 29, "9042": 29, "0484": 29, "7519": 29, "pivot": 29, "heatmap": 29, "pivot_t": 29, "param_optimizer__lr": 29, "param_module__drop_prob": 29, "fmt": 29, "3f": 29, "cmap": 29, "ylgnbu": 29, "cbar": 29, "plot_hyperparameter_tuning_with_scikit": [29, 32], "332": 29, "futur": [29, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102], "constructor": 29, "numer": [29, 112], "sequenc": [29, 34, 39, 66, 99, 101, 119, 120, 123, 130, 138, 140], "44": [29, 71], "varun": 29, "godbol": 29, "georg": 29, "dahl": 29, "justin": 29, "gilmer": 29, "christoph": 29, "shallu": 29, "zachari": 29, "nado": 29, "tuning_playbook": 29, "589": [29, 32], "296": [29, 32], "sara": [30, 140], "sedlar": [30, 140], "n_fake_rec": 30, "sinusoid": 30, "gaussian": [30, 42, 59], "nois": [30, 42, 59, 68], "n_fake_ch": 30, "fake_dur": 30, "fake_sfreq": 30, "basedataset": [30, 34, 69, 76, 80, 117, 140], "create_mne_dummy_raw": 30, "fake_regression_dataset": 30, "n_fake_target": 30, "fake_data_split": 30, "target_subset": 30, "randint": 30, "sin": 30, "pi": [30, 40, 58], "_data": 30, "expand_dim": 30, "fake_descript": 30, "n_fake_chan": 30, "2999": 30, "990": 30, "model_nam": 30, "shallowconvnet": 30, "deepconvnet": 30, "unknown": [30, 127], "602": 30, "minim": [30, 44, 61, 129, 135], "mse": 30, "ground": [30, 68, 71], "truth": 30, "period": 30, "schedul": [30, 31], "optimizer_lr": 30, "optimizer_weight_decai": 30, "neg_root_mean_squared_error": 30, "train_neg_root_mean_squared_error": 30, "valid_neg_root_mean_squared_error": 30, "2505": 30, "0702": 30, "8169": 30, "9044": 30, "0010": 30, "3810": 30, "9601": 30, "1453": 30, "2943": 30, "5348": 30, "3181": 30, "3129": 30, "0413": 30, "2603": 30, "4995": 30, "3417": 30, "root": [30, 139], "squar": [30, 95, 119], "rmse": 30, "plot_regress": [30, 32], "0x7f27b2299a80": 30, "versu": 30, "trend": 30, "y_estim": 30, "ravel": 30, "y_gt": 30, "to_numpi": [30, 125, 126, 127], "polyfit": 30, "poly1d": 30, "kingma": 30, "diederik": 30, "jimmi": 30, "ba": 30, "stochast": 30, "1412": 30, "6980": 30, "2014": [30, 68], "reddi": 30, "sashank": 30, "satyen": 30, "kale": 30, "sanjiv": 30, "kumar": 30, "beyond": [30, 44, 61, 129], "1904": 30, "09237": 30, "189": [30, 31, 32], "goal": [31, 87, 88, 89], "perpect": 31, "adjustmenty": 31, "third": 31, "0x7f27b4285c30": 31, "real": 31, "world": 31, "updat": [31, 66, 67, 69, 70, 76, 79, 111, 112, 116, 119, 138, 140], "tqdm": 31, "train_one_epoch": 31, "loss_fn": 31, "print_batch_stat": 31, "progress_bar": 31, "disabl": [31, 66, 106, 119], "batch_idx": 31, "argmax": 31, "sum": [31, 140], "6f": 31, "accumul": 31, "doesn": [31, 66, 67, 119], "test_model": 31, "n_batch": [31, 124, 128], "test_loss": 31, "batch_loss": 31, "nnloss": 31, "seamlessli": 31, "train_load": 31, "test_load": 31, "test_accuraci": 31, "590727": 31, "80it": 31, "602779": 31, "04it": 31, "717662": 31, "11it": 31, "489191": 31, "17it": 31, "812099": 31, "64it": 31, "35it": 31, "819970": 31, "59it": 31, "713805": 31, "44it": 31, "059214": 31, "77it": 31, "284286": 31, "93it": 31, "808599": 31, "62it": 31, "337175": 31, "642491": 31, "217304": 31, "19it": 31, "259046": 31, "15it": 31, "252112": 31, "20it": 31, "289975": 31, "948479": 31, "70it": 31, "608224": 31, "21it": 31, "350631": 31, "812278": 31, "045660": 31, "459460": 31, "00it": 31, "055251": 31, "193383": 31, "nice": 31, "interfac": [31, 33, 87, 88, 91, 92], "previou": [31, 140], "torchmetr": 31, "litmodul": 31, "lightningmodul": 31, "training_step": 31, "y_hat": 31, "test_step": 31, "multiclass": 31, "num_class": 31, "log_dict": 31, "configure_optim": 31, "trainer": 31, "lit_model": 31, "tpu": 31, "ipu": 31, "hpu": 31, "connector": 31, "logger_connector": 31, "tensorboardx": 31, "conflict": [31, 66, 119], "ecosystem": 31, "logger": 31, "csvlogger": 31, "unless": [31, 119], "tensorboard": 31, "pip": [31, 137, 138, 139, 140], "instal": [31, 66, 106, 109, 119, 140], "extra": [31, 140], "warning_cach": 31, "fit_loop": 31, "281": 31, "possibleuserwarn": 31, "interv": [31, 71, 112], "log_every_n_step": 31, "rank_zero_warn": 31, "0it": 31, "76it": 31, "v_num": 31, "98it": 31, "10it": 31, "09it": 31, "33it": 31, "18it": 31, "46it": 31, "45it": 31, "checkpoint_connector": 31, "ckpt_path": 31, "silenc": 31, "restor": [31, 66], "state": [31, 120, 121, 122, 123], "lightning_log": 31, "version_0": 31, "ckpt": 31, "25it": 31, "01it": 31, "34it": 31, "51it": 31, "13it": 31, "2534722089767456": 31, "993540048599243": 31, "261": [31, 32, 140], "258": 31, "plot_train_in_pure_pytorch_and_pytorch_lightn": [31, 32], "237": 32, "auto_examples_model_build": 32, "1113": 32, "161": [32, 140], "257": 32, "scientif": 33, "softwar": [33, 135], "canon": 33, "articl": 33, "hbm23730": 33, "robin": [33, 140], "tibor": [33, 140], "jost": 33, "tobia": 33, "dominiqu": 33, "josef": 33, "martin": [33, 140], "katharina": 33, "michael": 33, "frank": 33, "wolfram": 33, "tonio": 33, "issn": 33, "1097": 33, "0193": 33, "url": 33, "dx": [33, 83, 87, 88, 94, 95, 134], "aug": [33, 83, 94, 95, 134], "keyword": [33, 34, 72, 104, 106, 107, 108, 109, 110, 116], "electroencephalographi": 33, "interpret": [33, 38, 55, 106, 107, 119], "built": [33, 135], "zenodo": 33, "ask": [33, 68], "3389": 33, "fnin": 33, "2013": 33, "00267": 33, "luessi": 33, "larson": 33, "eric": 33, "deni": [33, 140], "strohmeier": 33, "brodbeck": 33, "christian": 33, "goj": 33, "roman": 33, "ja": 33, "mainak": 33, "brook": 33, "teon": 33, "parkkonen": 33, "lauri": 33, "h\u00e4m\u00e4l\u00e4inen": 33, "matti": 33, "volum": 33, "267": 33, "frontiersin": 33, "1662": 33, "453x": 33, "appropri": [33, 138], "kwarg": [34, 66, 83, 95, 108, 119, 125, 126, 127], "max_freq": 35, "band": [35, 53, 106, 116, 140], "desir": [35, 45, 53, 62, 68, 104, 110], "suggest": [35, 38, 42, 45, 46, 47, 48, 50, 53, 55, 59, 62, 79, 111, 112], "distanc": [35, 53, 68], "admiss": 35, "1hz": 35, "nyquist": 35, "cheng": [35, 42, 50, 53, 59, 64], "goh": [35, 42, 50, 53, 59, 64], "dogrusoz": [35, 42, 50, 53, 59, 64], "tuzel": [35, 42, 50, 53, 59, 64], "azemi": [35, 42, 50, 53, 59, 64], "awar": [35, 42, 50, 53, 59, 64], "biosign": [35, 42, 50, 53, 59, 64], "04871": [35, 42, 50, 53, 59, 64], "mohsenvand": [35, 42, 50, 53, 59, 64], "izadi": [35, 42, 50, 53, 59, 64], "mae": [35, 42, 50, 53, 59, 64], "electroencephalogram": [35, 42, 50, 53, 59, 64], "health": [35, 42, 50, 53, 59, 64], "253": [35, 42, 50, 53, 59, 64], "pmlr": [35, 42, 50, 53, 59, 64], "get_augmentation_param": [35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 52, 140], "freqs_to_notch": [35, 53], "greater": [35, 53], "static": [35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51, 67], "flat": [36, 54, 111, 112, 113], "cmsaugment": [36, 37, 54, 56], "polici": [36, 37, 54, 56], "proba_drop": 36, "eras": 36, "saeed": [36, 37, 54, 56], "grangier": [36, 37, 54, 56], "pietquin": [36, 37, 54, 56], "zeghidour": [36, 37, 54, 56], "heterogen": [36, 37, 54, 56], "differenti": [36, 37, 54, 56], "reorder": [36, 37, 54, 56], "2010": [36, 37, 54, 56, 71], "13694": [36, 37, 54, 56], "p_shuffl": [37, 56], "permut": [37, 38, 44, 55, 56, 61], "carri": [37, 56, 68], "ordered_ch_nam": [38, 46, 47, 48], "invert": 38, "side": [38, 106], "nomenclatur": 38, "deiss": [38, 55], "biswal": [38, 55], "jin": [38, 55], "sun": [38, 55], "westov": [38, 55], "hamlet": [38, 55], "co": [38, 55], "techniqu": [38, 55, 106, 110], "1803": [38, 55, 99], "09702": [38, 55], "accord": [38, 55, 110], "channel_indep": [40, 58], "ft": [40, 58, 82], "surrog": [40, 58], "pertub": [40, 58], "uniformli": [40, 44, 45, 46, 47, 48, 58, 120], "perturb": [40, 58], "schwabed": [40, 58], "snyder": [40, 58], "cakmak": [40, 58], "nemati": [40, 58], "clifford": [40, 58], "address": [40, 58], "imbal": [40, 58, 73], "noisi": [40, 58], "fourier": [40, 58], "1806": [40, 58], "08675": [40, 58], "magnitud": [40, 50], "cliffordlab": [40, 58], "tf": [40, 58], "draw": [40, 58], "maximum": [41, 45, 46, 47, 48, 82, 111], "absolut": 41, "delta_freq": [41, 57], "amplitud": [41, 57, 111, 112, 140], "white": [42, 59], "deviat": [42, 59], "wang": [42, 59], "zhong": [42, 59], "jiang": [42, 59], "liu": [42, 59, 85], "emot": [42, 59], "recognit": [42, 59], "confer": [42, 44, 45, 46, 47, 48, 59, 61, 62], "multimedia": [42, 59], "93": [42, 59], "beta_per_sampl": 44, "drawn": 44, "beta": 44, "hongyi": [44, 61, 129], "zhang": [44, 61, 89, 129], "moustapha": [44, 61, 129], "ciss": [44, 61, 129], "yann": [44, 61, 129], "dauphin": [44, 61, 129], "david": [44, 61, 129], "lopez": [44, 61, 129], "paz": [44, 61, 129], "empir": [44, 61, 99, 129], "iclr": [44, 61], "onlin": [44, 61, 83, 87, 88, 94, 95, 129, 134], "1710": [44, 61, 129], "09412": [44, 61, 129], "facebookresearch": [44, 61, 129], "cifar10": [44, 61, 129], "interpol": [44, 45, 46, 47, 48, 61, 62], "lam": [44, 61], "idx_perm": [44, 61], "form": [44, 61, 68, 69, 70, 76], "sensors_positions_matrix": [45, 62], "max_degre": [45, 46, 47, 48], "spherical_splin": [45, 46, 47, 48, 62], "angl": [45, 46, 47, 48, 62, 134], "3d": [45, 62, 140], "cartesian": [45, 62], "coordin": [45, 62], "ten_twenty_montag": [45, 62], "make_standard_montag": [45, 62], "standard_1020": [45, 62], "get_posit": [45, 62], "ch_po": [45, 62], "spheric": [45, 46, 47, 48, 62], "spline": [45, 46, 47, 48, 62], "scipi": [45, 46, 47, 48, 62, 66, 106, 109, 119], "rbf": [45, 46, 47, 48, 62], "quadrat": [45, 46, 47, 48, 62], "krell": [45, 46, 47, 48, 62], "kim": [45, 46, 47, 48, 62, 89], "electroencephalograph": [45, 46, 47, 48, 62], "39th": [45, 46, 47, 48, 62], "annual": [45, 46, 47, 48, 62], "medicin": [45, 46, 47, 48, 62], "biologi": [45, 46, 47, 48, 62], "societi": [45, 46, 47, 48, 62], "embc": [45, 46, 47, 48, 62], "471": [45, 46, 47, 48, 62], "474": [45, 46, 47, 48, 62], "element": [45, 50, 62], "montag": [46, 47, 48, 68], "flip": [49, 51, 63, 65], "sign": [49, 63], "smoothli": [50, 64], "Will": 50, "mask_start_per_sampl": [50, 64], "resp": 52, "uniform": 52, "instati": 52, "arg": [66, 83, 95, 119], "iterator_train__drop_last": [66, 119, 140], "uninstanti": [66, 119], "get_loss": 66, "classes_": 66, "attributeerror": 66, "sgd": [66, 119], "outcom": [66, 119], "keyboard": [66, 119], "interrupt": [66, 119], "mini": [66, 119], "iterator_train__batch_s": [66, 119], "iterator_test__batch_s": [66, 119], "iterator_valid": [66, 119], "incom": [66, 119], "__len__": [66, 119], "deal": [66, 119], "box": [66, 119], "prefix": [66, 119], "dataset__": [66, 119], "initialz": [66, 119], "dataset_train": [66, 119, 125, 126, 127], "dataset_valid": [66, 119, 125, 126, 127], "get_default_callback": [66, 119], "resolv": [66, 119], "suffix": [66, 119], "epochscoring_1": [66, 119], "print_log": [66, 119], "set_param": [66, 119], "callbacks__print_log__keys_ignor": [66, 119], "predict_nonlinear": [66, 119], "pickleabl": [66, 119], "accept": [66, 79, 101, 112, 119], "predict_proba": [66, 119, 140], "whatev": [66, 119], "anywher": [66, 119], "notabl": [66, 119], "unaffect": [66, 119], "warm_start": [66, 119], "cold": [66, 119], "warm": [66, 119], "summari": [66, 90, 100, 119], "regardless": [66, 119], "acceler": [66, 119], "sent": [66, 119], "unmodifi": [66, 119], "compil": [66, 119], "volta": [66, 119], "amper": [66, 119], "dunder": [66, 119], "notat": [66, 119], "compile__dynam": [66, 119], "dynam": [66, 119], "use_cach": [66, 119, 125, 126], "overrid": [66, 67, 119], "cach": [66, 119], "batchscor": [66, 119], "certain": [66, 119], "situat": [66, 119], "tight": [66, 119], "cumbersom": [66, 119], "global": [66, 119, 127], "honor": [66, 119], "model_evalu": [66, 119], "prefixes_": [66, 119], "special": [66, 119], "neuralnet": [66, 119], "optimizer__momentum": [66, 119], "popul": [66, 119, 140], "cuda_dependent_attributes_": [66, 119], "whose": [66, 79, 112, 119], "unpickl": [66, 119], "expand": [66, 102, 119], "initialized_": [66, 119], "criterion_": [66, 119], "callbacks_": [66, 119], "_modul": [66, 119], "collect": [66, 71, 119], "_criteria": [66, 119], "_optim": [66, 119], "get_iter": [66, 119], "drop_index": [66, 119], "iterator_test": [66, 119], "spars": [66, 119], "csr": [66, 119], "former": [66, 82, 85, 89, 119], "y_proba": [66, 119], "trial_predict": [66, 119, 130], "n_trial": [66, 77, 119, 130], "n_predict": [66, 119, 124, 128, 130], "trial_label": [66, 119, 130], "n_target": [66, 119, 130], "bbci": 67, "de": 67, "desc_4": 67, "pdf": 67, "force_upd": 67, "mne_datasets_": 67, "_path": 67, "forc": 67, "subj": [68, 71], "250hz": 68, "iia": 68, "r382d436f3223": 68, "cue": [68, 71], "imag": [68, 87, 88], "inat": 68, "movement": [68, 71], "compris": 68, "288": [68, 140], "sit": 68, "comfort": 68, "armchair": 68, "front": 68, "screen": 68, "fixat": 68, "acoust": 68, "tone": 68, "arrow": [68, 71], "down": [68, 96, 102, 109, 132], "foot": 68, "prompt": [68, 135], "disappear": 68, "twenti": 68, "agcl": 68, "inter": [68, 71], "monopolarli": 68, "mastoid": [68, 110], "amplifi": 68, "\u03bcv": 68, "notch": 68, "suppress": [68, 106], "raw_preproc_kwarg": 69, "window_kwarg": 69, "window_preproc_kwarg": 69, "old": [69, 117, 140], "datapoint": 69, "along": [70, 76, 109, 138, 140], "gamma": 71, "discrib": 71, "schirrmeister2017": [71, 83, 94, 95], "500hz": 71, "r5e478952091a": 71, "cover": [71, 134], "cortex": 71, "healthi": [71, 73], "963": 71, "divid": [71, 77, 78, 79, 111], "rest": [71, 110], "approx": 71, "880": 71, "except": [71, 73], "160": 71, "acquir": 71, "lab": 71, "invas": 71, "2008": [71, 84], "darva": 71, "direct": [71, 135], "grai": 71, "back": 71, "had": [71, 87, 88, 90], "clench": 71, "toe": 71, "downward": 71, "tap": 71, "leftward": 71, "rightward": 71, "relax": 71, "upward": 71, "littl": 71, "proxim": 71, "muscular": 71, "volv": 71, "pace": 71, "maintain": 71, "pseudo": 71, "ideal": 71, "260": 71, "stimuli": 71, "bci2000": 71, "schalk": 71, "2004": 71, "approv": 71, "ethic": 71, "committe": 71, "freiburg": 71, "dataset_kwarg": 72, "load_eeg_onli": 73, "content": 73, "edfx": 73, "overnight": 73, "78": 73, "auto_tutori": 73, "plot_sleep": 73, "eog": [73, 102], "emg": 73, "temperatur": 73, "respir": 73, "3h": 73, "parent": [74, 75], "ascend": [74, 75], "preserv": [74, 75], "physician": [74, 75], "c_tuab": 75, "i_window_in_tri": [76, 121, 131], "i_start_in_tri": [76, 121], "i_stop_in_tri": [76, 121, 131], "applic": [76, 106], "pre": [77, 110], "compativl": [78, 79], "accepted_bads_ratio": [79, 112], "onset": [79, 112], "fall": [79, 111, 112], "outsid": [79, 111, 112], "proport": [79, 87, 88, 112], "withinconsist": 79, "exceed": [79, 112], "pathlib": 80, "concat_dataset": [80, 81], "input_window_second": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 119], "conv_block_n_filt": 82, "conv_block_kernel_length_1": 82, "conv_block_kernel_length_2": 82, "conv_block_pool_size_1": 82, "conv_block_pool_size_2": 82, "conv_block_depth_mult": 82, "conv_block_dropout": 82, "att_head_dim": 82, "att_num_head": 82, "att_dropout": 82, "tcn_depth": 82, "tcn_kernel_s": 82, "tcn_n_filter": 82, "tcn_dropout": 82, "tcn_activ": 82, "elu": [82, 83, 87, 88, 93], "max_norm_const": 82, "chs_info": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 119], "input_size_": [82, 96, 97, 98, 102], "offici": [82, 138], "tensorflow": 82, "secod": 82, "block": [82, 87, 88, 89, 99, 102], "denot": 82, "kc": 82, "p2": 82, "depthwis": [82, 87, 88], "pc": 82, "head": [82, 85, 98, 121], "dh": 82, "1_": 82, "pa": 82, "tcn": [82, 140], "residu": [82, 93], "kt": 82, "slid": 82, "feed": [82, 98], "logit": 82, "contrari": 82, "constraint": 82, "impos": 82, "fill": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102], "ch": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102], "alia": [82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102], "doc": [82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 132, 139, 140], "attempt": [82, 83, 84, 90, 93, 94, 95, 96, 97, 98, 99, 102, 110], "altaheri": 82, "muhammad": 82, "alsulaiman": 82, "physic": 82, "industri": 82, "informat": 82, "tii": 82, "3197419": 82, "overridden": [82, 85, 89], "subclass": [82, 85, 89], "recip": [82, 85, 89], "care": [82, 85, 89], "regist": [82, 85, 89], "hook": [82, 85, 89], "latter": [82, 85, 89], "silent": [82, 85, 89], "miss": [82, 83, 85, 87, 89, 91, 92, 93, 94, 95, 96, 102, 140], "first_conv_nonlin": 83, "first_pool_nonlin": 83, "later_conv_nonlin": 83, "later_pool_nonlin": 83, "normalis": [83, 95], "load_state_dict": [83, 95], "state_dict": [83, 95], "supratak": 84, "bidirect": 84, "supratak2017": 84, "dong": 84, "wu": 84, "guo": 84, "1998": 84, "att_depth": 85, "att_head": 85, "att_drop_prob": 85, "final_fc_length": 85, "2440": 85, "return_featur": 85, "conform": 85, "methodolog": 85, "song2022": 85, "conformercod": 85, "reciev": 85, "tradit": 85, "n_timestep": 85, "compos": 85, "patchembed": 85, "transformerencod": 85, "classificationhead": 85, "sement": 85, "recombin": 85, "song": [85, 140], "zheng": 85, "q": 85, "gao": 85, "710": 85, "719": 85, "ieeexplor": 85, "9991178": 85, "eeyhsong": 85, "get_fc_siz": 85, "in_channel": [86, 87, 88, 89], "itnet": [86, 140], "incept": [86, 87, 88, 89, 140], "salami": 86, "salami2022": 86, "abbassalami": 86, "guarante": [86, 87, 88, 89, 91, 92], "reimplement": [86, 87, 88, 89, 91, 92], "andreu": 86, "perez": 86, "gillmeist": 86, "3161489": 86, "scales_samples_": [87, 88], "n_filter": [87, 88, 89, 99], "depth_multipli": [87, 88], "pooling_s": [87, 88], "erp": [87, 88], "deperec": 87, "AND": 87, "WILL": 87, "BE": 87, "IN": 87, "THE": 87, "OF": 87, "eeginceptionerp": [87, 140], "santamaria2020": [87, 88], "inceptionnet": [87, 88, 89], "largest": [87, 88], "associ": [87, 88], "winner": [87, 88], "beetl": [87, 88], "neurip": [87, 88], "r15fdf33b022f": 87, "santamaria": [87, 88], "vazquez": [87, 88], "martinez": [87, 88], "cagig": [87, 88], "vaquerizo": [87, 88], "villar": [87, 88], "hornero": [87, 88], "novel": [87, 88], "assist": [87, 88], "3048106": [87, 88], "grifcc": [87, 88], "r37c4761d4e92": 88, "sampel": 88, "eegincept": [88, 140], "n_conv": 89, "kernel_unit_": 89, "input_window_": 89, "vision": 89, "wide": 89, "branch": 89, "1d": 89, "bose": 89, "eskandarian": 89, "accur": 89, "robust": 89, "046014": 89, "mixin": 90, "output_shap": [90, 103], "get_torchinfo_statist": 90, "col_nam": 90, "input_s": 90, "num_param": 90, "row_set": 90, "modelstatist": 90, "intermedi": 90, "bug": 90, "pool_mod": [91, 92, 95], "second_kernel_s": 91, "third_kernel_s": [91, 92], "eegnet": [91, 92], "lawhern": [91, 92], "solon": [91, 92], "waytowich": [91, 92], "gordon": [91, 92], "hung": [91, 92], "lanc": [91, 92], "1611": [91, 92], "08024": [91, 92], "f2": 92, "kernel_length": 92, "v4": 92, "eegnet4": 92, "final_pool_length": [93, 140], "n_first_filt": 93, "n_layers_per_block": 93, "first_filter_length": 93, "batch_norm_epsilon": 93, "conv_weight_init_fn": 93, "hybrid": 94, "conv_nonlin": 95, "pool_nonlin": 95, "safe_log": 95, "n_conv_chan": 96, "n_group": 96, "max_pool_s": 96, "blanco": 96, "blanco2020": 96, "seven": 96, "group": 96, "fernandez": 96, "rivero": 96, "pazo": 96, "soft": 96, "4067": 96, "4079": 96, "1007": 96, "s00500": 96, "04174": 96, "time_conv_size_": [97, 102], "max_pool_size_": 97, "pad_size_": 97, "half": [97, 106], "n_tce": 98, "d_model": 98, "d_ff": 98, "n_attn_head": 98, "after_reduced_cnn_s": 98, "multi": 98, "resolut": 98, "mrcnn": 98, "recalibr": 98, "encod": [98, 102], "tce": 98, "mechan": [98, 140], "captur": 98, "among": 98, "100hz": 98, "125hz": 98, "shh": 98, "unintend": 98, "clone": [98, 140], "positionwisefeedforward": 98, "emadeldeen24": 98, "attnsleep": 98, "sleepdata": 98, "n_block": 99, "n_in_chan": 99, "bai": 99, "bai2018": 99, "locuslab": 99, "kolter": 99, "koltun": 99, "recurr": 99, "01271": 99, "s_growth": 100, "t_filter": 100, "temp_lay": 100, "spat_lay": 100, "temp_span": 100, "thinker": [100, 140], "invari": [100, 140], "densenet": 100, "kosta": 100, "growth": 100, "densefilt": 100, "percentag": 100, "temp_len": 100, "1500": [100, 121], "spoclab": 100, "ca": 100, "thinkerinvari": 100, "rudzicz": 100, "across": [100, 110, 120, 124], "peopl": 100, "eng": 100, "056008": 100, "1741": 100, "2552": 100, "abb7a7": 100, "stager": 101, "middl": 101, "seq_len": 101, "n_time_filt": 102, "complexity_factor": 102, "0703125": 102, "ensure_odd_conv_s": 102, "autoencod": 102, "shrink": 102, "maxpool": 102, "fewer": [102, 106], "2x2": 102, "halv": 102, "ne": 102, "subsequ": 104, "time_as_index": 104, "first_samp": 104, "last_samp": 104, "exce": 104, "exclud": [104, 106, 107, 110], "on_miss": [105, 111, 112], "emit": 105, "evok": [105, 106, 107, 110], "reorder_channel": 105, "drop_channel": 105, "filter_length": 106, "l_trans_bandwidth": 106, "h_trans_bandwidth": 106, "iir_param": 106, "fir_window": 106, "fir_design": 106, "skip_by_annot": 106, "bad_acq_skip": 106, "reflect_limit": [106, 109], "iir": 106, "meg0111": [106, 107], "meg2623": [106, 107], "reciproc": 106, "shortest": 106, "firwin2": 106, "5500m": 106, "doubl": 106, "cupi": [106, 109], "filtfilt": 106, "4th": 106, "butterworth": 106, "construct_iir_filt": 106, "symmetr": 106, "construct": [106, 110], "delai": [106, 140], "twice": 106, "minimum": 106, "weaker": 106, "lfilter": 106, "hann": 106, "blackman": 106, "concatenate_raw": 106, "acquisit": 106, "reflect": [106, 109], "mirror": [106, 109], "create_filt": 106, "savgol_filt": 106, "notch_filt": 106, "filter_data": 106, "apply_funct": [108, 118], "raw_or_epoch": 108, "npad": 109, "boxcar": 109, "joint": 110, "virtual": 110, "infin": 110, "footcit": 110, "yao2001": 110, "apply_proj": 110, "seeg": 110, "projector": 110, "set_bipolar_refer": 110, "bipolar": 110, "m1": 110, "m2": 110, "request": [110, 135], "reject": [111, 112, 113], "concatdataset": 111, "ie": 111, "winddow_size_sampl": 111, "exactli": 112, "inconsist": 112, "demeanin": 114, "exponent": [114, 115], "m_t": [114, 115], "mathrm": [114, 115], "factornew": [114, 115], "cdot": [114, 115], "x_t": [114, 115], "m_": [114, 115], "deman": 114, "_t": [114, 115], "demean": 114, "Then": 115, "v_t": 115, "v_": 115, "sqrt": 115, "stabil": 115, "frequency_band": 116, "drop_original_sign": 116, "order_by_frequency_band": 116, "mne_filter_kwarg": 116, "unfilt": 116, "oder": 116, "cz_4": 116, "o1_4": 116, "cz_8": 116, "o1_8": 116, "fileexistserror": 117, "suppos": 118, "n_sequenc": [120, 123], "inspir": 120, "perslev2021": 120, "recordingsampl": [120, 122, 123], "randomst": [120, 121, 122, 123], "sample_class": 120, "rec_ind": [120, 121], "multiindex": 121, "sample_record": 121, "sample_window": 121, "tau_max": 122, "banville2020": 122, "file_id": 123, "ensembl": [123, 140], "loss_funct": [124, 128], "target_extractor": [125, 126, 127], "on_epoch_end": [125, 126, 127], "on_batch_end": 126, "recomput": 127, "slightli": 127, "scorer": 127, "signatur": 127, "scalar": 127, "wors": 127, "tri": 127, "timeseri": 128, "window_len": 128, "nan": 128, "mixup": [129, 140], "duplic": [131, 140], "atleast": 131, "2darrai": 131, "preds_per_tri": 131, "lack": 132, "pythonhashse": 132, "forum": 132, "ai": 132, "solv": [132, 140], "31628": 132, "use_deterministic_algorithm": 132, "linearsegmentedcolormap": 134, "textcolor": 134, "vmin": 134, "vmax": 134, "fontweight": 134, "rotate_row_label": 134, "rotate_col_label": 134, "with_f1_scor": 134, "norm_ax": 134, "rotate_precis": 134, "class_names_fonts": 134, "font": 134, "bold": 134, "heavi": 134, "ultrabold": 134, "ultralight": 134, "hard": 135, "happen": [135, 140], "mistak": 135, "corrupt": 135, "irregular": 135, "chat": 135, "bear": 135, "tracker": 135, "sure": 135, "ve": 135, "shell": 135, "__version__": [135, 139], "latest": [135, 138, 139], "replic": 135, "link": [135, 140], "anonym": 135, "portion": 135, "persist": 135, "smallest": 135, "past": 135, "backtick": 135, "contributor": [135, 139], "snippet": 135, "toolbox": 136, "electrophysiolog": 136, "fetcher": 136, "neuroscientist": 136, "who": 136, "neurophysiolog": 136, "pypi": 137, "repositori": 137, "beginn": 137, "advanc": 137, "familiar": 137, "instruct": 137, "contribut": [137, 139], "braincod": 138, "command": [138, 139], "nvidia": 138, "driver": 138, "cuda_path": 138, "troubleshoot": 138, "thing": 139, "enter": 139, "git": 139, "cd": 139, "repo": 139, "zipbal": 139, "master": 139, "egg": 139, "edit": 139, "verifi": 139, "guidelin": 139, "whats_new": 140, "incompat": 140, "einop": 140, "466": 140, "467": 140, "marco": 140, "zamboni": 140, "468": 140, "refactor": 140, "470": 140, "conda": 140, "yml": 140, "ci": 140, "479": 140, "action": 140, "472": 140, "489": 140, "485": 140, "pierr": 140, "guetschel": 140, "490": 140, "487": 140, "473": 140, "488": 140, "495": 140, "sylvain": 140, "chevalli": 140, "494": 140, "bruna": 140, "lope": 140, "491": 140, "enforc": 140, "fuction": 140, "497": 140, "env": 140, "505": 140, "friendli": 140, "\u015bliwowski": 140, "shallowfbcsp": 140, "503": 140, "sampler": 140, "504": 140, "th\u00e9o": 140, "dropchannel": 140, "seteegrefer": 140, "514": 140, "517": 140, "523": 140, "remi": 140, "delboui": 140, "models_dict": 140, "524": 140, "eegresnet": 140, "451": 140, "465": 140, "397": 140, "flag": 140, "513": 140, "eeginceptionmi": 140, "428": 140, "atcnet": 140, "429": 140, "431": 140, "mohammad": 140, "javad": 140, "oskar": 140, "st\u00f8rmer": 140, "deepsleepnet": 140, "417": 140, "eegconform": 140, "454": 140, "yonghao": 140, "461": 140, "e231": 140, "whitespac": 140, "untrac": 140, "flake8": 140, "transposit": 140, "_frequency_shift": 140, "446": 140, "matthieu": 140, "terri": 140, "390": 140, "eegitnet": 140, "ghaith": 140, "bouallegu": 140, "371": 140, "389": 140, "exemplifi": 140, "349": 140, "unifi": 140, "sheme": 140, "378": 140, "wimpff": 140, "391": 140, "406": 140, "recoding_id": 140, "402": 140, "ft_surrog": 140, "409": 140, "get_param": 140, "388": 140, "alex": 140, "413": 140, "zscore": 140, "mnepreproc": 140, "numpypreproc": 140, "415": 140, "411": 140, "263": 140, "tidnet": 140, "ann": 140, "kathrin": 140, "kiessner": 140, "henrik": 140, "bonsmann": 140, "vytauta": 140, "jankauska": 140, "274": 140, "254": 140, "thoma": 140, "facilit": 140, "aggregate_proba": 140, "294": 140, "312": 140, "balancedsequencesampl": 140, "295": 140, "318": 140, "cloneabl": 140, "347": 140, "353": 140, "docstr": 140, "333": 140, "365": 140, "367": 140, "304": 140, "mismatch": 140, "327": 140, "propag": 140, "269": 140, "favour": 140, "292": 140, "199": 140, "198": 140, "152": 140, "138": 140, "147": 140, "realiz": 140, "filterbank": 140, "158": 140, "159": 140, "timecrop": 140, "164": 140, "185": 140, "282": 140, "sleepstagerblanco2020": 140, "341": 140, "accident": 140, "167": 140, "compute_amplitude_gradi": 140, "4d": 140, "incorrect": 140, "146": 140, "169": 140, "window_s": 140, "148": 140, "171": 140, "155": 140, "223": 140, "favor": 140}, "objects": {"": [[0, 0, 0, "-", "braindecode"]], "braindecode.augmentation": [[34, 1, 1, "", "AugmentedDataLoader"], [35, 1, 1, "", "BandstopFilter"], [36, 1, 1, "", "ChannelsDropout"], [37, 1, 1, "", "ChannelsShuffle"], [38, 1, 1, "", "ChannelsSymmetry"], [39, 1, 1, "", "Compose"], [40, 1, 1, "", "FTSurrogate"], [41, 1, 1, "", "FrequencyShift"], [42, 1, 1, "", "GaussianNoise"], [43, 1, 1, "", "IdentityTransform"], [44, 1, 1, "", "Mixup"], [45, 1, 1, "", "SensorsRotation"], [46, 1, 1, "", "SensorsXRotation"], [47, 1, 1, "", "SensorsYRotation"], [48, 1, 1, "", "SensorsZRotation"], [49, 1, 1, "", "SignFlip"], [50, 1, 1, "", "SmoothTimeMask"], [51, 1, 1, "", "TimeReverse"], [52, 1, 1, "", "Transform"]], "braindecode.augmentation.BandstopFilter": [[35, 2, 1, "", "get_augmentation_params"], [35, 2, 1, "", "operation"]], "braindecode.augmentation.ChannelsDropout": [[36, 2, 1, "", "get_augmentation_params"], [36, 2, 1, "", "operation"]], "braindecode.augmentation.ChannelsShuffle": [[37, 2, 1, "", "get_augmentation_params"], [37, 2, 1, "", "operation"]], "braindecode.augmentation.ChannelsSymmetry": [[38, 2, 1, "", "get_augmentation_params"], [38, 2, 1, "", "operation"]], "braindecode.augmentation.Compose": [[39, 2, 1, "", "forward"]], "braindecode.augmentation.FTSurrogate": [[40, 2, 1, "", "get_augmentation_params"], [40, 2, 1, "", "operation"]], "braindecode.augmentation.FrequencyShift": [[41, 2, 1, "", "get_augmentation_params"], [41, 2, 1, "", "operation"]], "braindecode.augmentation.GaussianNoise": [[42, 2, 1, "", "get_augmentation_params"], [42, 2, 1, "", "operation"]], "braindecode.augmentation.IdentityTransform": [[43, 2, 1, "", "operation"]], "braindecode.augmentation.Mixup": [[44, 2, 1, "", "get_augmentation_params"], [44, 2, 1, "", "operation"]], "braindecode.augmentation.SensorsRotation": [[45, 2, 1, "", "get_augmentation_params"], [45, 2, 1, "", "operation"]], "braindecode.augmentation.SignFlip": [[49, 2, 1, "", "operation"]], "braindecode.augmentation.SmoothTimeMask": [[50, 2, 1, "", "get_augmentation_params"], [50, 2, 1, "", "operation"]], "braindecode.augmentation.TimeReverse": [[51, 2, 1, "", "operation"]], "braindecode.augmentation.Transform": [[52, 2, 1, "", "forward"], [52, 2, 1, "", "get_augmentation_params"]], "braindecode.augmentation.functional": [[53, 3, 1, "", "bandstop_filter"], [54, 3, 1, "", "channels_dropout"], [55, 3, 1, "", "channels_permute"], [56, 3, 1, "", "channels_shuffle"], [57, 3, 1, "", "frequency_shift"], [58, 3, 1, "", "ft_surrogate"], [59, 3, 1, "", "gaussian_noise"], [60, 3, 1, "", "identity"], [61, 3, 1, "", "mixup"], [62, 3, 1, "", "sensors_rotation"], [63, 3, 1, "", "sign_flip"], [64, 3, 1, "", "smooth_time_mask"], [65, 3, 1, "", "time_reverse"]], "braindecode.classifier": [[66, 1, 1, "", "EEGClassifier"]], "braindecode.classifier.EEGClassifier": [[66, 4, 1, "", "_criteria"], [66, 4, 1, "", "_modules"], [66, 4, 1, "", "_optimizers"], [66, 4, 1, "", "callbacks_"], [66, 4, 1, "", "classes_"], [66, 4, 1, "", "criterion_"], [66, 4, 1, "", "cuda_dependent_attributes_"], [66, 2, 1, "", "get_iterator"], [66, 2, 1, "", "get_loss"], [66, 4, 1, "", "initialized_"], [66, 4, 1, "", "module_"], [66, 2, 1, "", "predict"], [66, 2, 1, "", "predict_proba"], [66, 2, 1, "", "predict_trials"], [66, 4, 1, "", "prefixes_"]], "braindecode.datasets": [[67, 1, 1, "", "BCICompetitionIVDataset4"], [68, 1, 1, "", "BNCI2014001"], [69, 1, 1, "", "BaseConcatDataset"], [70, 1, 1, "", "BaseDataset"], [71, 1, 1, "", "HGD"], [72, 1, 1, "", "MOABBDataset"], [73, 1, 1, "", "SleepPhysionet"], [74, 1, 1, "", "TUH"], [75, 1, 1, "", "TUHAbnormal"], [76, 1, 1, "", "WindowsDataset"], [77, 3, 1, "", "create_from_X_y"], [78, 3, 1, "", "create_from_mne_epochs"], [79, 3, 1, "", "create_from_mne_raw"]], "braindecode.datasets.BCICompetitionIVDataset4": [[67, 2, 1, "", "download"]], "braindecode.datasets.BaseConcatDataset": [[69, 2, 1, "", "get_metadata"], [69, 2, 1, "", "save"], [69, 2, 1, "", "set_description"], [69, 2, 1, "", "split"]], "braindecode.datasets.BaseDataset": [[70, 2, 1, "", "set_description"]], "braindecode.datasets.WindowsDataset": [[76, 2, 1, "", "set_description"]], "braindecode.datautil": [[80, 3, 1, "", "load_concat_dataset"], [81, 3, 1, "", "save_concat_dataset"]], "braindecode.models": [[82, 1, 1, "", "ATCNet"], [83, 1, 1, "", "Deep4Net"], [84, 1, 1, "", "DeepSleepNet"], [85, 1, 1, "", "EEGConformer"], [86, 1, 1, "", "EEGITNet"], [87, 1, 1, "", "EEGInception"], [88, 1, 1, "", "EEGInceptionERP"], [89, 1, 1, "", "EEGInceptionMI"], [90, 1, 1, "", "EEGModuleMixin"], [91, 1, 1, "", "EEGNetv1"], [92, 1, 1, "", "EEGNetv4"], [93, 1, 1, "", "EEGResNet"], [94, 1, 1, "", "HybridNet"], [95, 1, 1, "", "ShallowFBCSPNet"], [96, 1, 1, "", "SleepStagerBlanco2020"], [97, 1, 1, "", "SleepStagerChambon2018"], [98, 1, 1, "", "SleepStagerEldele2021"], [99, 1, 1, "", "TCN"], [100, 1, 1, "", "TIDNet"], [101, 1, 1, "", "TimeDistributed"], [102, 1, 1, "", "USleep"], [103, 3, 1, "", "get_output_shape"]], "braindecode.models.ATCNet": [[82, 2, 1, "", "forward"]], "braindecode.models.Deep4Net": [[83, 2, 1, "", "load_state_dict"]], "braindecode.models.DeepSleepNet": [[84, 2, 1, "", "forward"]], "braindecode.models.EEGConformer": [[85, 2, 1, "", "forward"], [85, 2, 1, "", "get_fc_size"]], "braindecode.models.EEGInceptionMI": [[89, 2, 1, "", "forward"]], "braindecode.models.EEGModuleMixin": [[90, 2, 1, "", "get_output_shape"], [90, 2, 1, "", "get_torchinfo_statistics"], [90, 2, 1, "", "to_dense_prediction_model"]], "braindecode.models.HybridNet": [[94, 2, 1, "", "forward"]], "braindecode.models.ShallowFBCSPNet": [[95, 2, 1, "", "load_state_dict"]], "braindecode.models.SleepStagerBlanco2020": [[96, 2, 1, "", "forward"]], "braindecode.models.SleepStagerChambon2018": [[97, 2, 1, "", "forward"]], "braindecode.models.SleepStagerEldele2021": [[98, 2, 1, "", "forward"]], "braindecode.models.TCN": [[99, 2, 1, "", "forward"]], "braindecode.models.TIDNet": [[100, 2, 1, "", "forward"]], "braindecode.models.TimeDistributed": [[101, 2, 1, "", "forward"]], "braindecode.models.USleep": [[102, 2, 1, "", "forward"]], "braindecode.preprocessing": [[104, 1, 1, "", "Crop"], [105, 1, 1, "", "DropChannels"], [106, 1, 1, "", "Filter"], [107, 1, 1, "", "Pick"], [108, 1, 1, "", "Preprocessor"], [109, 1, 1, "", "Resample"], [110, 1, 1, "", "SetEEGReference"], [111, 3, 1, "", "create_fixed_length_windows"], [112, 3, 1, "", "create_windows_from_events"], [113, 3, 1, "", "create_windows_from_target_channels"], [114, 3, 1, "", "exponential_moving_demean"], [115, 3, 1, "", "exponential_moving_standardize"], [116, 3, 1, "", "filterbank"], [117, 3, 1, "", "preprocess"], [118, 3, 1, "", "scale"]], "braindecode.preprocessing.Preprocessor": [[108, 2, 1, "", "apply"]], "braindecode.regressor": [[119, 1, 1, "", "EEGRegressor"]], "braindecode.regressor.EEGRegressor": [[119, 4, 1, "", "_criteria"], [119, 4, 1, "", "_modules"], [119, 4, 1, "", "_optimizers"], [119, 4, 1, "", "callbacks_"], [119, 4, 1, "", "criterion_"], [119, 4, 1, "", "cuda_dependent_attributes_"], [119, 2, 1, "", "fit"], [119, 2, 1, "", "get_iterator"], [119, 4, 1, "", "initialized_"], [119, 4, 1, "", "module_"], [119, 2, 1, "", "predict_proba"], [119, 2, 1, "", "predict_trials"], [119, 4, 1, "", "prefixes_"]], "braindecode.samplers": [[120, 1, 1, "", "BalancedSequenceSampler"], [121, 1, 1, "", "RecordingSampler"], [122, 1, 1, "", "RelativePositioningSampler"], [123, 1, 1, "", "SequenceSampler"]], "braindecode.samplers.BalancedSequenceSampler": [[120, 2, 1, "", "sample_class"]], "braindecode.samplers.RecordingSampler": [[121, 4, 1, "", "info"], [121, 4, 1, "", "n_recordings"], [121, 2, 1, "", "sample_recording"], [121, 2, 1, "", "sample_window"]], "braindecode.samplers.RelativePositioningSampler": [[122, 2, 1, "", "presample"]], "braindecode.samplers.SequenceSampler": [[123, 4, 1, "", "file_ids"], [123, 4, 1, "", "info"]], "braindecode.training": [[124, 1, 1, "", "CroppedLoss"], [125, 1, 1, "", "CroppedTimeSeriesEpochScoring"], [126, 1, 1, "", "CroppedTrialEpochScoring"], [127, 1, 1, "", "PostEpochTrainScoring"], [128, 1, 1, "", "TimeSeriesLoss"], [129, 3, 1, "", "mixup_criterion"], [130, 3, 1, "", "predict_trials"], [131, 3, 1, "", "trial_preds_from_window_preds"]], "braindecode.training.CroppedLoss": [[124, 2, 1, "", "forward"]], "braindecode.training.CroppedTimeSeriesEpochScoring": [[125, 2, 1, "", "on_epoch_end"]], "braindecode.training.CroppedTrialEpochScoring": [[126, 2, 1, "", "on_batch_end"], [126, 2, 1, "", "on_epoch_end"]], "braindecode.training.PostEpochTrainScoring": [[127, 2, 1, "", "on_epoch_end"]], "braindecode.training.TimeSeriesLoss": [[128, 2, 1, "", "forward"]], "braindecode.util": [[132, 3, 1, "", "set_random_seeds"]], "braindecode.visualization": [[133, 3, 1, "", "compute_amplitude_gradients"], [134, 3, 1, "", "plot_confusion_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": [0, 140], "refer": [0, 4, 5, 9, 10, 11, 26, 27, 28, 29, 30, 135], "classifi": [0, 66], "regressor": [0, 119], "model": [0, 2, 3, 4, 5, 8, 9, 10, 11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "train": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 124, 125, 126, 127, 128, 129, 130, 131], "dataset": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "preprocess": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 26, 27, 28, 29, 31, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "data": [0, 3, 4, 12, 15, 22, 24, 26, 27, 28, 30], "util": [0, 28, 132], "sampler": [0, 5, 9, 10, 11, 120, 121, 122, 123], "augment": [0, 3, 4, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "visual": [0, 3, 5, 28, 133, 134], "advanc": [1, 24], "neural": [1, 24, 29, 30], "network": [1, 9, 11, 24, 29, 30], "strategi": [1, 24], "finger": [2, 8], "flexion": [2, 8], "crop": [2, 26, 104], "decod": [2, 8, 26, 27], "bcic": [2, 3, 4, 8, 26], "iv": [2, 3, 4, 8, 26], "4": [2, 8], "ecog": [2, 8], "load": [2, 3, 4, 5, 8, 9, 10, 11, 14, 15, 18, 21, 24, 26, 27, 28, 29, 31], "prepar": [2, 8, 27], "split": [2, 3, 4, 5, 8, 9, 10, 11, 21, 26, 27, 28, 29, 31], "test": [2, 5, 8, 28, 30, 31, 139], "creat": [2, 3, 4, 5, 8, 9, 10, 11, 12, 22, 26, 27, 28, 29, 31], "cut": [2, 8, 12, 26, 31], "comput": [2, 6, 8, 12, 13, 23, 26, 27, 29, 31, 32], "window": [2, 3, 4, 5, 8, 9, 10, 11, 12, 22, 26, 27, 28, 29, 30, 31], "plot": [2, 4, 8, 9, 10, 11, 26, 27, 29], "result": [2, 4, 5, 8, 9, 10, 11, 26, 27, 29], "2a": [3, 4, 26], "thi": [3, 4, 5, 12, 21, 26, 27, 28, 29, 31], "exampl": [3, 4, 5, 7, 12, 17, 18, 19, 20, 21, 24, 26, 27, 28, 29, 31, 34, 36, 39, 40, 41, 49, 50, 52, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 83, 90, 95, 97, 98, 101, 102, 103, 108, 111, 112, 113, 115, 117, 118, 121, 122, 123, 124, 125, 126, 128, 132, 134], "cover": [3, 4, 5, 12, 21, 26, 27, 28, 29, 31], "extract": [3, 4, 5, 9, 10, 11, 27, 28, 29], "valid": [3, 4, 5, 8, 9, 10, 11, 27, 28, 29], "defin": [3, 4, 28, 30, 31], "transform": [3, 4, 31, 52], "manipul": 3, "one": 3, "session": 3, "an": [3, 4], "eegclassifi": [3, 4, 66], "desir": [3, 4], "manual": 3, "compos": [3, 39], "set": [3, 5, 27], "level": 3, "search": 4, "best": [4, 29], "list": 4, "analys": 4, "fit": 4, "self": 5, "supervis": 5, "learn": [5, 29], "eeg": [5, 12, 22, 27], "rel": 5, "posit": 5, "raw": [5, 31], "record": [5, 12], "inspect": 5, "pretext": 5, "task": 5, "perform": 5, "us": [5, 9, 10, 11, 12, 34, 36, 39, 40, 41, 49, 50, 52, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 83, 90, 95, 97, 98, 101, 102, 103, 108, 111, 112, 113, 115, 117, 118, 121, 122, 123, 124, 125, 126, 128, 132, 134], "represent": 5, "sleep": [5, 9, 10, 11], "stage": [5, 9, 10, 11], "conclus": 5, "time": [6, 13, 23, 32], "appli": [7, 24], "real": [7, 24], "world": [7, 24], "physionet": [9, 10, 11], "chambon2018": 9, "sequenc": [9, 10, 11], "eldele2021": 10, "u": 11, "process": 12, "big": 12, "resourc": 12, "tuh": [12, 22, 74], "corpu": [12, 22], "tuhmock": 12, "select": 12, "combin": 12, "step": 12, "benchmark": [14, 16], "eager": 14, "lazi": 14, "organ": [15, 24], "parallel": 16, "serial": 16, "custom": 17, "save": 18, "mne": [19, 33], "moabb": 20, "By": 21, "descript": 21, "inform": 21, "row": 21, "index": 21, "observ": 21, "multipl": 22, "discret": 22, "target": 22, "templ": 22, "univers": 22, "hospit": 22, "explor": 22, "dataload": 22, "basic": [24, 25, 27], "build": [24, 25], "paramet": 26, "confus": [26, 27], "matrix": [26, 27], "brain": 27, "how": [28, 31, 33, 135], "tune": [28, 29], "your": [28, 31, 139], "why": [28, 29, 31], "should": [28, 31], "i": [28, 31, 135, 139], "care": [28, 31], "about": [28, 31], "evalu": [28, 30, 31], "etc": [28, 31], "option": [28, 31], "1": [28, 31, 140], "simpl": 28, "let": 28, "": [28, 140], "first": 28, "function": [28, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "2": [28, 31], "val": 28, "second": 28, "3": 28, "k": 28, "fold": 28, "cross": 28, "third": 28, "hyperparamet": [28, 29], "scikit": 29, "do": [29, 135], "you": 29, "need": 29, "get": [29, 135], "convolut": 30, "regress": 30, "fake": 30, "gener": 30, "cnn": 30, "choos": 30, "between": 30, "gpu": 30, "cpu": 30, "processor": 30, "braindecod": [31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139], "pytorch": 31, "structur": 31, "offlin": 31, "pure": 31, "loop": 31, "lightn": 31, "cite": [33, 135], "other": 33, "algorithm": 33, "augmenteddataload": 34, "bandstopfilt": 35, "channelsdropout": 36, "channelsshuffl": 37, "channelssymmetri": 38, "ftsurrog": 40, "frequencyshift": 41, "gaussiannois": 42, "identitytransform": 43, "mixup": [44, 61], "sensorsrot": 45, "sensorsxrot": 46, "sensorsyrot": 47, "sensorszrot": 48, "signflip": 49, "smoothtimemask": 50, "timerevers": 51, "bandstop_filt": 53, "channels_dropout": 54, "channels_permut": 55, "channels_shuffl": 56, "frequency_shift": 57, "ft_surrog": 58, "gaussian_nois": 59, "ident": 60, "sensors_rot": 62, "sign_flip": 63, "smooth_time_mask": 64, "time_revers": 65, "bcicompetitionivdataset4": 67, "bnci2014001": 68, "summari": [68, 71], "baseconcatdataset": 69, "basedataset": 70, "hgd": 71, "moabbdataset": 72, "sleepphysionet": 73, "tuhabnorm": 75, "windowsdataset": 76, "create_from_x_i": 77, "create_from_mne_epoch": 78, "create_from_mne_raw": 79, "datautil": [80, 81], "load_concat_dataset": 80, "save_concat_dataset": 81, "atcnet": 82, "deep4net": 83, "deepsleepnet": 84, "eegconform": 85, "eegitnet": 86, "eegincept": 87, "eeginceptionerp": 88, "eeginceptionmi": 89, "eegmodulemixin": 90, "eegnetv1": 91, "eegnetv4": 92, "eegresnet": 93, "hybridnet": 94, "shallowfbcspnet": 95, "sleepstagerblanco2020": 96, "sleepstagerchambon2018": 97, "sleepstagereldele2021": 98, "tcn": 99, "tidnet": 100, "timedistribut": 101, "usleep": 102, "get_output_shap": 103, "dropchannel": 105, "filter": 106, "pick": 107, "preprocessor": 108, "resampl": 109, "seteegrefer": 110, "create_fixed_length_window": 111, "create_windows_from_ev": 112, "create_windows_from_target_channel": 113, "exponential_moving_demean": 114, "exponential_moving_standard": 115, "filterbank": 116, "scale": 118, "eegregressor": 119, "balancedsequencesampl": 120, "recordingsampl": 121, "relativepositioningsampl": 122, "sequencesampl": 123, "croppedloss": 124, "croppedtimeseriesepochscor": 125, "croppedtrialepochscor": 126, "postepochtrainscor": 127, "timeseriesloss": 128, "mixup_criterion": 129, "predict_tri": 130, "trial_preds_from_window_pr": 131, "set_random_se": 132, "compute_amplitude_gradi": 133, "plot_confusion_matrix": 134, "frequent": 135, "ask": 135, "question": 135, "faq": 135, "help": 135, "can": 135, "t": 135, "python": 135, "work": [135, 139], "still": 135, "think": 135, "found": 135, "bug": [135, 140], "what": [135, 140], "homepag": 136, "instal": [137, 138, 139], "from": [138, 139], "pypi": 138, "sourc": 139, "clone": 139, "repositori": 139, "github": 139, "new": 140, "current": 140, "0": 140, "8": 140, "dev0": 140, "enhanc": 140, "chang": 140, "7": 140, "10": 140, "2022": 140, "version": 140, "6": 140, "2021": 140, "12": 140, "06": 140, "5": 140, "07": 140, "14": 140, "author": 140}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "Classifier": [[0, "classifier"]], "Regressor": [[0, "regressor"]], "Models": [[0, "models"]], "Training": [[0, "training"], [2, "training"], [5, "training"], [8, "training"], [9, "training"], [10, "training"], [11, "training"], [26, "training"], [29, "training"]], "Datasets": [[0, "datasets"]], "Preprocessing": [[0, "preprocessing"], [2, "preprocessing"], [3, "preprocessing"], [4, "preprocessing"], [5, "preprocessing"], [8, "preprocessing"], [9, "preprocessing"], [10, "preprocessing"], [11, "preprocessing"], [12, "preprocessing"], [27, "preprocessing"], [29, "preprocessing"]], "Data Utils": [[0, "data-utils"]], "Samplers": [[0, "samplers"]], "Augmentation": [[0, "augmentation"]], "Utils": [[0, "utils"]], "Visualization": [[0, "visualization"]], "Advanced neural network training strategies": [[1, "advanced-neural-network-training-strategies"], [24, "advanced-neural-network-training-strategies"]], "Fingers flexion cropped decoding on BCIC IV 4 ECoG Dataset": [[2, "fingers-flexion-cropped-decoding-on-bcic-iv-4-ecog-dataset"]], "Loading and preparing the dataset": [[2, "loading-and-preparing-the-dataset"], [8, "loading-and-preparing-the-dataset"]], "Loading": [[2, "loading"], [3, "loading"], [4, "loading"], [8, "loading"], [9, "loading"], [10, "loading"], [11, "loading"], [29, "loading"]], "Split dataset into train and test": [[2, "split-dataset-into-train-and-test"], [28, "split-dataset-into-train-and-test"], [31, "split-dataset-into-train-and-test"]], "Create model": [[2, "create-model"], [3, "create-model"], [4, "create-model"], [8, "create-model"], [9, "create-model"], [10, "create-model"], [11, "create-model"], [28, "create-model"], [29, "create-model"]], "Cut Compute Windows": [[2, "cut-compute-windows"], [8, "cut-compute-windows"], [12, "cut-compute-windows"], [31, "cut-compute-windows"]], "Plot Results": [[2, "plot-results"], [8, "plot-results"], [26, "plot-results"]], "Data Augmentation on BCIC IV 2a Dataset": [[3, "data-augmentation-on-bcic-iv-2a-dataset"]], "This example covers:": [[3, "this-example-covers"], [4, "this-example-covers"], [5, "this-example-covers"], [12, "this-example-covers"], [21, "this-example-covers"], [26, "this-example-covers"], [27, "this-example-covers"], [28, "this-example-covers"], [29, "this-example-covers"], [31, "this-example-covers"]], "Loading and preprocessing the dataset": [[3, "loading-and-preprocessing-the-dataset"], [4, "loading-and-preprocessing-the-dataset"], [5, "loading-and-preprocessing-the-dataset"], [9, "loading-and-preprocessing-the-dataset"], [10, "loading-and-preprocessing-the-dataset"], [11, "loading-and-preprocessing-the-dataset"], [26, "loading-and-preprocessing-the-dataset"], [29, "loading-and-preprocessing-the-dataset"]], "Extracting windows": [[3, "extracting-windows"], [4, "extracting-windows"], [5, "extracting-windows"]], "Split dataset into train and valid": [[3, "split-dataset-into-train-and-valid"], [4, "split-dataset-into-train-and-valid"], [9, "split-dataset-into-train-and-valid"], [10, "split-dataset-into-train-and-valid"], [11, "split-dataset-into-train-and-valid"], [29, "split-dataset-into-train-and-valid"]], "Defining a Transform": [[3, "defining-a-transform"]], "Manipulating one session and visualizing the transformed data": [[3, "manipulating-one-session-and-visualizing-the-transformed-data"]], "Training a model with data augmentation": [[3, "training-a-model-with-data-augmentation"], [4, "training-a-model-with-data-augmentation"]], "Create an EEGClassifier with the desired augmentation": [[3, "create-an-eegclassifier-with-the-desired-augmentation"], [4, "create-an-eegclassifier-with-the-desired-augmentation"]], "Manually composing Transforms": [[3, "manually-composing-transforms"]], "Setting the data augmentation at the Dataset level": [[3, "setting-the-data-augmentation-at-the-dataset-level"]], "Searching the best data augmentation on BCIC IV 2a Dataset": [[4, "searching-the-best-data-augmentation-on-bcic-iv-2a-dataset"]], "Data Augmentation": [[4, null]], "Defining a list of transforms": [[4, "defining-a-list-of-transforms"]], "Analysing the best fit": [[4, "analysing-the-best-fit"]], "Plot results": [[4, "plot-results"], [9, "plot-results"], [10, "plot-results"], [11, "plot-results"]], "References": [[4, "references"], [5, "references"], [9, "references"], [10, "references"], [11, "references"], [26, "references"], [27, "references"], [28, "references"], [29, "references"], [30, "references"], [135, "references"]], "Self-supervised learning on EEG with relative positioning": [[5, "self-supervised-learning-on-eeg-with-relative-positioning"]], "Self-supervised learning": [[5, null]], "Loading the raw recordings": [[5, "loading-the-raw-recordings"]], "Preprocessing windows": [[5, "preprocessing-windows"]], "Splitting dataset into train, valid and test sets": [[5, "splitting-dataset-into-train-valid-and-test-sets"]], "Creating samplers": [[5, "creating-samplers"]], "Creating the model": [[5, "creating-the-model"]], "Visualizing the results": [[5, "visualizing-the-results"]], "Inspecting pretext task performance": [[5, "inspecting-pretext-task-performance"]], "Using the learned representation for sleep staging": [[5, "using-the-learned-representation-for-sleep-staging"]], "Conclusion": [[5, "conclusion"]], "Computation times": [[6, "computation-times"], [13, "computation-times"], [23, "computation-times"], [32, "computation-times"]], "Applied examples on real-world datasets": [[7, "applied-examples-on-real-world-datasets"], [24, "applied-examples-on-real-world-datasets"]], "Fingers flexion decoding on BCIC IV 4 ECoG Dataset": [[8, "fingers-flexion-decoding-on-bcic-iv-4-ecog-dataset"]], "Split dataset into train, valid, and test": [[8, "split-dataset-into-train-valid-and-test"]], "Sleep staging on the Sleep Physionet dataset using Chambon2018 network": [[9, "sleep-staging-on-the-sleep-physionet-dataset-using-chambon2018-network"]], "Extract windows": [[9, "extract-windows"], [10, "extract-windows"], [11, "extract-windows"]], "Window preprocessing": [[9, "window-preprocessing"], [10, "window-preprocessing"]], "Create sequence samplers": [[9, "create-sequence-samplers"], [10, "create-sequence-samplers"], [11, "create-sequence-samplers"]], "Sleep staging on the Sleep Physionet dataset using Eldele2021": [[10, "sleep-staging-on-the-sleep-physionet-dataset-using-eldele2021"]], "Sleep staging on the Sleep Physionet dataset using U-Sleep network": [[11, "sleep-staging-on-the-sleep-physionet-dataset-using-u-sleep-network"]], "Process a big data EEG resource (TUH EEG Corpus)": [[12, "process-a-big-data-eeg-resource-tuh-eeg-corpus"]], "Creating the dataset using TUHMock": [[12, "creating-the-dataset-using-tuhmock"]], "Selecting recordings": [[12, "selecting-recordings"]], "Combining preprocessing steps": [[12, "combining-preprocessing-steps"]], "Benchmarking eager and lazy loading": [[14, "benchmarking-eager-and-lazy-loading"]], "Loading and organizing data": [[15, "loading-and-organizing-data"], [24, "loading-and-organizing-data"]], "Benchmarking preprocessing with parallelization and serialization": [[16, "benchmarking-preprocessing-with-parallelization-and-serialization"]], "Custom Dataset Example": [[17, "custom-dataset-example"]], "Load and save dataset example": [[18, "load-and-save-dataset-example"]], "MNE Dataset Example": [[19, "mne-dataset-example"]], "MOABB Dataset Example": [[20, "moabb-dataset-example"]], "Split Dataset Example": [[21, "split-dataset-example"]], "Loading the dataset": [[21, "loading-the-dataset"], [27, "loading-the-dataset"]], "Splitting": [[21, "splitting"]], "By description information": [[21, "by-description-information"]], "By row index": [[21, "by-row-index"]], "Observation": [[21, "observation"]], "Multiple discrete targets with the TUH EEG Corpus": [[22, "multiple-discrete-targets-with-the-tuh-eeg-corpus"]], "Creating Temple University Hospital (TUH) EEG Corpus Dataset": [[22, "creating-temple-university-hospital-tuh-eeg-corpus-dataset"]], "Exploring Data": [[22, "exploring-data"]], "Creating Windows": [[22, "creating-windows"]], "Exploring Windows": [[22, "exploring-windows"]], "DataLoader for Model Training": [[22, "dataloader-for-model-training"]], "Exploring DataLoader": [[22, "exploring-dataloader"]], "Examples": [[24, "examples"]], "Basic model building and training": [[24, "basic-model-building-and-training"], [25, "basic-model-building-and-training"]], "Cropped Decoding on BCIC IV 2a Dataset": [[26, "cropped-decoding-on-bcic-iv-2a-dataset"]], "Create model and compute windowing parameters": [[26, "create-model-and-compute-windowing-parameters"]], "Cut the data into windows": [[26, "cut-the-data-into-windows"]], "Split the dataset": [[26, "split-the-dataset"]], "Plot Confusion Matrix": [[26, "plot-confusion-matrix"]], "Basic Brain Decoding on EEG Data": [[27, "basic-brain-decoding-on-eeg-data"]], "Loading and preparing the data": [[27, "loading-and-preparing-the-data"]], "Extracting Compute Windows": [[27, "extracting-compute-windows"]], "Splitting the dataset into training and validation sets": [[27, "splitting-the-dataset-into-training-and-validation-sets"]], "Creating a model": [[27, "creating-a-model"]], "Model Training": [[27, "model-training"]], "Plotting Results": [[27, "plotting-results"]], "Plotting a  Confusion Matrix": [[27, "plotting-a-confusion-matrix"]], "How to train, test and tune your model?": [[28, "how-to-train-test-and-tune-your-model"]], "Why should I care about model evaluation?": [[28, "why-should-i-care-about-model-evaluation"], [31, "why-should-i-care-about-model-evaluation"]], "Loading and preprocessing of data, defining a model, etc.": [[28, "loading-and-preprocessing-of-data-defining-a-model-etc"]], "Loading data": [[28, "loading-data"]], "Preprocessing data": [[28, "preprocessing-data"]], "Extraction of the Windows": [[28, "extraction-of-the-windows"], [29, "extraction-of-the-windows"]], "How to train and evaluate your model": [[28, "how-to-train-and-evaluate-your-model"], [31, "how-to-train-and-evaluate-your-model"]], "Option 1: Simple Train-Test Split": [[28, "option-1-simple-train-test-split"]], "Let\u2019s visualize the first option with a util function.": [[28, "let-s-visualize-the-first-option-with-a-util-function"]], "Option 2: Train-Val-Test Split": [[28, "option-2-train-val-test-split"]], "Let\u2019s visualize the second option with a util function.": [[28, "let-s-visualize-the-second-option-with-a-util-function"]], "Option 3: k-Fold Cross Validation": [[28, "option-3-k-fold-cross-validation"]], "Let\u2019s visualize the third option with a util function.": [[28, "let-s-visualize-the-third-option-with-a-util-function"]], "How to tune your hyperparameters": [[28, "how-to-tune-your-hyperparameters"]], "Option 1: Train-Val-Test Split": [[28, "option-1-train-val-test-split"]], "Option 2: k-Fold Cross Validation": [[28, "option-2-k-fold-cross-validation"]], "Hyperparameter tuning with scikit-learn": [[29, "hyperparameter-tuning-with-scikit-learn"]], "Why do you need to tune the neural networks model?": [[29, null]], "Extraction of the Compute Windows": [[29, "extraction-of-the-compute-windows"]], "Plotting the results": [[29, "plotting-the-results"]], "Get the best hyperparameters": [[29, "get-the-best-hyperparameters"]], "Convolutional neural network regression model on fake data.": [[30, "convolutional-neural-network-regression-model-on-fake-data"]], "Fake regression data": [[30, "fake-regression-data"]], "Generating fake regression dataset": [[30, "generating-fake-regression-dataset"]], "Defining a CNN regression model": [[30, "defining-a-cnn-regression-model"]], "Choosing between GPU and CPU processors": [[30, "choosing-between-gpu-and-cpu-processors"]], "Data windowing": [[30, "data-windowing"]], "Model training": [[30, "model-training"]], "Model evaluation": [[30, "model-evaluation"]], "Model testing": [[30, "model-testing"]], "Training a Braindecode model in PyTorch": [[31, "training-a-braindecode-model-in-pytorch"]], "Loading, preprocessing, defining a model, etc.": [[31, "loading-preprocessing-defining-a-model-etc"]], "Loading the Dataset Structure": [[31, "loading-the-dataset-structure"]], "Preprocessing, the offline transformation of the raw dataset": [[31, "preprocessing-the-offline-transformation-of-the-raw-dataset"]], "Create Pytorch model": [[31, "create-pytorch-model"]], "Option 1: Pure PyTorch training loop": [[31, "option-1-pure-pytorch-training-loop"]], "Option 2: Train it with PyTorch Lightning": [[31, "option-2-train-it-with-pytorch-lightning"]], "How to cite Braindecode": [[33, "how-to-cite-braindecode"]], "Citing the Braindecode": [[33, "citing-the-braindecode"]], "Citing the MNE": [[33, "citing-the-mne"]], "Citing other algorithms": [[33, "citing-other-algorithms"]], "braindecode.augmentation.AugmentedDataLoader": [[34, "braindecode-augmentation-augmenteddataloader"]], "Examples using braindecode.augmentation.AugmentedDataLoader": [[34, "examples-using-braindecode-augmentation-augmenteddataloader"]], "braindecode.augmentation.BandstopFilter": [[35, "braindecode-augmentation-bandstopfilter"]], "braindecode.augmentation.ChannelsDropout": [[36, "braindecode-augmentation-channelsdropout"]], "Examples using braindecode.augmentation.ChannelsDropout": [[36, "examples-using-braindecode-augmentation-channelsdropout"]], "braindecode.augmentation.ChannelsShuffle": [[37, "braindecode-augmentation-channelsshuffle"]], "braindecode.augmentation.ChannelsSymmetry": [[38, "braindecode-augmentation-channelssymmetry"]], "braindecode.augmentation.Compose": [[39, "braindecode-augmentation-compose"]], "Examples using braindecode.augmentation.Compose": [[39, "examples-using-braindecode-augmentation-compose"]], "braindecode.augmentation.FTSurrogate": [[40, "braindecode-augmentation-ftsurrogate"]], "Examples using braindecode.augmentation.FTSurrogate": [[40, "examples-using-braindecode-augmentation-ftsurrogate"]], "braindecode.augmentation.FrequencyShift": [[41, "braindecode-augmentation-frequencyshift"]], "Examples using braindecode.augmentation.FrequencyShift": [[41, "examples-using-braindecode-augmentation-frequencyshift"]], "braindecode.augmentation.GaussianNoise": [[42, "braindecode-augmentation-gaussiannoise"]], "braindecode.augmentation.IdentityTransform": [[43, "braindecode-augmentation-identitytransform"]], "braindecode.augmentation.Mixup": [[44, "braindecode-augmentation-mixup"]], "braindecode.augmentation.SensorsRotation": [[45, "braindecode-augmentation-sensorsrotation"]], "braindecode.augmentation.SensorsXRotation": [[46, "braindecode-augmentation-sensorsxrotation"]], "braindecode.augmentation.SensorsYRotation": [[47, "braindecode-augmentation-sensorsyrotation"]], "braindecode.augmentation.SensorsZRotation": [[48, "braindecode-augmentation-sensorszrotation"]], "braindecode.augmentation.SignFlip": [[49, "braindecode-augmentation-signflip"]], "Examples using braindecode.augmentation.SignFlip": [[49, "examples-using-braindecode-augmentation-signflip"]], "braindecode.augmentation.SmoothTimeMask": [[50, "braindecode-augmentation-smoothtimemask"]], "Examples using braindecode.augmentation.SmoothTimeMask": [[50, "examples-using-braindecode-augmentation-smoothtimemask"]], "braindecode.augmentation.TimeReverse": [[51, "braindecode-augmentation-timereverse"]], "braindecode.augmentation.Transform": [[52, "braindecode-augmentation-transform"]], "Examples using braindecode.augmentation.Transform": [[52, "examples-using-braindecode-augmentation-transform"]], "braindecode.augmentation.functional.bandstop_filter": [[53, "braindecode-augmentation-functional-bandstop-filter"]], "braindecode.augmentation.functional.channels_dropout": [[54, "braindecode-augmentation-functional-channels-dropout"]], "braindecode.augmentation.functional.channels_permute": [[55, "braindecode-augmentation-functional-channels-permute"]], "braindecode.augmentation.functional.channels_shuffle": [[56, "braindecode-augmentation-functional-channels-shuffle"]], "braindecode.augmentation.functional.frequency_shift": [[57, "braindecode-augmentation-functional-frequency-shift"]], "braindecode.augmentation.functional.ft_surrogate": [[58, "braindecode-augmentation-functional-ft-surrogate"]], "braindecode.augmentation.functional.gaussian_noise": [[59, "braindecode-augmentation-functional-gaussian-noise"]], "braindecode.augmentation.functional.identity": [[60, "braindecode-augmentation-functional-identity"]], "braindecode.augmentation.functional.mixup": [[61, "braindecode-augmentation-functional-mixup"]], "braindecode.augmentation.functional.sensors_rotation": [[62, "braindecode-augmentation-functional-sensors-rotation"]], "braindecode.augmentation.functional.sign_flip": [[63, "braindecode-augmentation-functional-sign-flip"]], "braindecode.augmentation.functional.smooth_time_mask": [[64, "braindecode-augmentation-functional-smooth-time-mask"]], "braindecode.augmentation.functional.time_reverse": [[65, "braindecode-augmentation-functional-time-reverse"]], "braindecode.classifier.EEGClassifier": [[66, "braindecode-classifier-eegclassifier"]], "braindecode.datasets.BCICompetitionIVDataset4": [[67, "braindecode-datasets-bcicompetitionivdataset4"]], "Examples using braindecode.datasets.BCICompetitionIVDataset4": [[67, "examples-using-braindecode-datasets-bcicompetitionivdataset4"]], "braindecode.datasets.BNCI2014001": [[68, "braindecode-datasets-bnci2014001"]], "Dataset summary": [[68, null], [71, null]], "braindecode.datasets.BaseConcatDataset": [[69, "braindecode-datasets-baseconcatdataset"]], "Examples using braindecode.datasets.BaseConcatDataset": [[69, "examples-using-braindecode-datasets-baseconcatdataset"]], "braindecode.datasets.BaseDataset": [[70, "braindecode-datasets-basedataset"]], "Examples using braindecode.datasets.BaseDataset": [[70, "examples-using-braindecode-datasets-basedataset"]], "braindecode.datasets.HGD": [[71, "braindecode-datasets-hgd"]], "braindecode.datasets.MOABBDataset": [[72, "braindecode-datasets-moabbdataset"]], "Examples using braindecode.datasets.MOABBDataset": [[72, "examples-using-braindecode-datasets-moabbdataset"]], "braindecode.datasets.SleepPhysionet": [[73, "braindecode-datasets-sleepphysionet"]], "Examples using braindecode.datasets.SleepPhysionet": [[73, "examples-using-braindecode-datasets-sleepphysionet"]], "braindecode.datasets.TUH": [[74, "braindecode-datasets-tuh"]], "Examples using braindecode.datasets.TUH": [[74, "examples-using-braindecode-datasets-tuh"]], "braindecode.datasets.TUHAbnormal": [[75, "braindecode-datasets-tuhabnormal"]], "Examples using braindecode.datasets.TUHAbnormal": [[75, "examples-using-braindecode-datasets-tuhabnormal"]], "braindecode.datasets.WindowsDataset": [[76, "braindecode-datasets-windowsdataset"]], "braindecode.datasets.create_from_X_y": [[77, "braindecode-datasets-create-from-x-y"]], "Examples using braindecode.datasets.create_from_X_y": [[77, "examples-using-braindecode-datasets-create-from-x-y"]], "braindecode.datasets.create_from_mne_epochs": [[78, "braindecode-datasets-create-from-mne-epochs"]], "Examples using braindecode.datasets.create_from_mne_epochs": [[78, "examples-using-braindecode-datasets-create-from-mne-epochs"]], "braindecode.datasets.create_from_mne_raw": [[79, "braindecode-datasets-create-from-mne-raw"]], "Examples using braindecode.datasets.create_from_mne_raw": [[79, "examples-using-braindecode-datasets-create-from-mne-raw"]], "braindecode.datautil.load_concat_dataset": [[80, "braindecode-datautil-load-concat-dataset"]], "Examples using braindecode.datautil.load_concat_dataset": [[80, "examples-using-braindecode-datautil-load-concat-dataset"]], "braindecode.datautil.save_concat_dataset": [[81, "braindecode-datautil-save-concat-dataset"]], "braindecode.models.ATCNet": [[82, "braindecode-models-atcnet"]], "braindecode.models.Deep4Net": [[83, "braindecode-models-deep4net"]], "Examples using braindecode.models.Deep4Net": [[83, "examples-using-braindecode-models-deep4net"]], "braindecode.models.DeepSleepNet": [[84, "braindecode-models-deepsleepnet"]], "braindecode.models.EEGConformer": [[85, "braindecode-models-eegconformer"]], "braindecode.models.EEGITNet": [[86, "braindecode-models-eegitnet"]], "braindecode.models.EEGInception": [[87, "braindecode-models-eeginception"]], "braindecode.models.EEGInceptionERP": [[88, "braindecode-models-eeginceptionerp"]], "braindecode.models.EEGInceptionMI": [[89, "braindecode-models-eeginceptionmi"]], "braindecode.models.EEGModuleMixin": [[90, "braindecode-models-eegmodulemixin"]], "Examples using braindecode.models.EEGModuleMixin": [[90, "examples-using-braindecode-models-eegmodulemixin"]], "braindecode.models.EEGNetv1": [[91, "braindecode-models-eegnetv1"]], "braindecode.models.EEGNetv4": [[92, "braindecode-models-eegnetv4"]], "braindecode.models.EEGResNet": [[93, "braindecode-models-eegresnet"]], "braindecode.models.HybridNet": [[94, "braindecode-models-hybridnet"]], "braindecode.models.ShallowFBCSPNet": [[95, "braindecode-models-shallowfbcspnet"]], "Examples using braindecode.models.ShallowFBCSPNet": [[95, "examples-using-braindecode-models-shallowfbcspnet"]], "braindecode.models.SleepStagerBlanco2020": [[96, "braindecode-models-sleepstagerblanco2020"]], "braindecode.models.SleepStagerChambon2018": [[97, "braindecode-models-sleepstagerchambon2018"]], "Examples using braindecode.models.SleepStagerChambon2018": [[97, "examples-using-braindecode-models-sleepstagerchambon2018"]], "braindecode.models.SleepStagerEldele2021": [[98, "braindecode-models-sleepstagereldele2021"]], "Examples using braindecode.models.SleepStagerEldele2021": [[98, "examples-using-braindecode-models-sleepstagereldele2021"]], "braindecode.models.TCN": [[99, "braindecode-models-tcn"]], "braindecode.models.TIDNet": [[100, "braindecode-models-tidnet"]], "braindecode.models.TimeDistributed": [[101, "braindecode-models-timedistributed"]], "Examples using braindecode.models.TimeDistributed": [[101, "examples-using-braindecode-models-timedistributed"]], "braindecode.models.USleep": [[102, "braindecode-models-usleep"]], "Examples using braindecode.models.USleep": [[102, "examples-using-braindecode-models-usleep"]], "braindecode.models.get_output_shape": [[103, "braindecode-models-get-output-shape"]], "Examples using braindecode.models.get_output_shape": [[103, "examples-using-braindecode-models-get-output-shape"]], "braindecode.preprocessing.Crop": [[104, "braindecode-preprocessing-crop"]], "braindecode.preprocessing.DropChannels": [[105, "braindecode-preprocessing-dropchannels"]], "braindecode.preprocessing.Filter": [[106, "braindecode-preprocessing-filter"]], "braindecode.preprocessing.Pick": [[107, "braindecode-preprocessing-pick"]], "braindecode.preprocessing.Preprocessor": [[108, "braindecode-preprocessing-preprocessor"]], "Examples using braindecode.preprocessing.Preprocessor": [[108, "examples-using-braindecode-preprocessing-preprocessor"]], "braindecode.preprocessing.Resample": [[109, "braindecode-preprocessing-resample"]], "braindecode.preprocessing.SetEEGReference": [[110, "braindecode-preprocessing-seteegreference"]], "braindecode.preprocessing.create_fixed_length_windows": [[111, "braindecode-preprocessing-create-fixed-length-windows"]], "Examples using braindecode.preprocessing.create_fixed_length_windows": [[111, "examples-using-braindecode-preprocessing-create-fixed-length-windows"]], "braindecode.preprocessing.create_windows_from_events": [[112, "braindecode-preprocessing-create-windows-from-events"]], "Examples using braindecode.preprocessing.create_windows_from_events": [[112, "examples-using-braindecode-preprocessing-create-windows-from-events"]], "braindecode.preprocessing.create_windows_from_target_channels": [[113, "braindecode-preprocessing-create-windows-from-target-channels"]], "Examples using braindecode.preprocessing.create_windows_from_target_channels": [[113, "examples-using-braindecode-preprocessing-create-windows-from-target-channels"]], "braindecode.preprocessing.exponential_moving_demean": [[114, "braindecode-preprocessing-exponential-moving-demean"]], "braindecode.preprocessing.exponential_moving_standardize": [[115, "braindecode-preprocessing-exponential-moving-standardize"]], "Examples using braindecode.preprocessing.exponential_moving_standardize": [[115, "examples-using-braindecode-preprocessing-exponential-moving-standardize"]], "braindecode.preprocessing.filterbank": [[116, "braindecode-preprocessing-filterbank"]], "braindecode.preprocessing.preprocess": [[117, "braindecode-preprocessing-preprocess"]], "Examples using braindecode.preprocessing.preprocess": [[117, "examples-using-braindecode-preprocessing-preprocess"]], "braindecode.preprocessing.scale": [[118, "braindecode-preprocessing-scale"]], "Examples using braindecode.preprocessing.scale": [[118, "examples-using-braindecode-preprocessing-scale"]], "braindecode.regressor.EEGRegressor": [[119, "braindecode-regressor-eegregressor"]], "braindecode.samplers.BalancedSequenceSampler": [[120, "braindecode-samplers-balancedsequencesampler"]], "braindecode.samplers.RecordingSampler": [[121, "braindecode-samplers-recordingsampler"]], "Examples using braindecode.samplers.RecordingSampler": [[121, "examples-using-braindecode-samplers-recordingsampler"]], "braindecode.samplers.RelativePositioningSampler": [[122, "braindecode-samplers-relativepositioningsampler"]], "Examples using braindecode.samplers.RelativePositioningSampler": [[122, "examples-using-braindecode-samplers-relativepositioningsampler"]], "braindecode.samplers.SequenceSampler": [[123, "braindecode-samplers-sequencesampler"]], "Examples using braindecode.samplers.SequenceSampler": [[123, "examples-using-braindecode-samplers-sequencesampler"]], "braindecode.training.CroppedLoss": [[124, "braindecode-training-croppedloss"]], "Examples using braindecode.training.CroppedLoss": [[124, "examples-using-braindecode-training-croppedloss"]], "braindecode.training.CroppedTimeSeriesEpochScoring": [[125, "braindecode-training-croppedtimeseriesepochscoring"]], "Examples using braindecode.training.CroppedTimeSeriesEpochScoring": [[125, "examples-using-braindecode-training-croppedtimeseriesepochscoring"]], "braindecode.training.CroppedTrialEpochScoring": [[126, "braindecode-training-croppedtrialepochscoring"]], "Examples using braindecode.training.CroppedTrialEpochScoring": [[126, "examples-using-braindecode-training-croppedtrialepochscoring"]], "braindecode.training.PostEpochTrainScoring": [[127, "braindecode-training-postepochtrainscoring"]], "braindecode.training.TimeSeriesLoss": [[128, "braindecode-training-timeseriesloss"]], "Examples using braindecode.training.TimeSeriesLoss": [[128, "examples-using-braindecode-training-timeseriesloss"]], "braindecode.training.mixup_criterion": [[129, "braindecode-training-mixup-criterion"]], "braindecode.training.predict_trials": [[130, "braindecode-training-predict-trials"]], "braindecode.training.trial_preds_from_window_preds": [[131, "braindecode-training-trial-preds-from-window-preds"]], "braindecode.util.set_random_seeds": [[132, "braindecode-util-set-random-seeds"]], "Examples using braindecode.util.set_random_seeds": [[132, "examples-using-braindecode-util-set-random-seeds"]], "braindecode.visualization.compute_amplitude_gradients": [[133, "braindecode-visualization-compute-amplitude-gradients"]], "braindecode.visualization.plot_confusion_matrix": [[134, "braindecode-visualization-plot-confusion-matrix"]], "Examples using braindecode.visualization.plot_confusion_matrix": [[134, "examples-using-braindecode-visualization-plot-confusion-matrix"]], "Frequently Asked Questions (FAQ)": [[135, "frequently-asked-questions-faq"]], "How do I cite Braindecode?": [[135, "how-do-i-cite-braindecode"]], "Help! I can\u2019t get Python and Braindecode working!": [[135, "help-i-can-t-get-python-and-braindecode-working"]], "I still can\u2019t get it to work!": [[135, "i-still-can-t-get-it-to-work"]], "I think I found a bug, what do I do?": [[135, "i-think-i-found-a-bug-what-do-i-do"]], "Braindecode Homepage": [[136, "braindecode-homepage"]], "Installation": [[137, "installation"]], "Installing from PyPI": [[138, "installing-from-pypi"]], "Installing from sources": [[139, "installing-from-sources"]], "Clone the repository from GitHub": [[139, "clone-the-repository-from-github"]], "Installing Braindecode from the source": [[139, "installing-braindecode-from-the-source"]], "Testing if your installation is working": [[139, "testing-if-your-installation-is-working"]], "What\u2019s new": [[140, "what-s-new"]], "Current 0.8 (dev0)": [[140, "current-0-8-dev0"]], "Enhancements": [[140, "enhancements"], [140, "id5"], [140, "id8"], [140, "id11"], [140, "id14"]], "Bugs": [[140, "bugs"], [140, "id6"], [140, "id9"], [140, "id12"], [140, "id15"]], "API changes": [[140, "api-changes"], [140, "id7"], [140, "id10"], [140, "id13"], [140, "id16"]], "Current 0.8 ()": [[140, "current-0-8"]], "Current 0.7 (10-2022)": [[140, "current-0-7-10-2022"]], "Version 0.6 (2021-12-06)": [[140, "version-0-6-2021-12-06"]], "Version 0.5.1 (2021-07-14)": [[140, "version-0-5-1-2021-07-14"]], "Authors": [[140, "authors"]]}, "indexentries": {"braindecode": [[0, "module-braindecode"]], "module": [[0, "module-braindecode"]], "augmenteddataloader (class in braindecode.augmentation)": [[34, "braindecode.augmentation.AugmentedDataLoader"]], "bandstopfilter (class in braindecode.augmentation)": [[35, "braindecode.augmentation.BandstopFilter"]], "get_augmentation_params() (braindecode.augmentation.bandstopfilter method)": [[35, "braindecode.augmentation.BandstopFilter.get_augmentation_params"]], "operation() (braindecode.augmentation.bandstopfilter static method)": [[35, "braindecode.augmentation.BandstopFilter.operation"]], "channelsdropout (class in braindecode.augmentation)": [[36, "braindecode.augmentation.ChannelsDropout"]], "get_augmentation_params() (braindecode.augmentation.channelsdropout method)": [[36, "braindecode.augmentation.ChannelsDropout.get_augmentation_params"]], "operation() (braindecode.augmentation.channelsdropout static method)": [[36, "braindecode.augmentation.ChannelsDropout.operation"]], "channelsshuffle (class in braindecode.augmentation)": [[37, "braindecode.augmentation.ChannelsShuffle"]], "get_augmentation_params() (braindecode.augmentation.channelsshuffle method)": [[37, "braindecode.augmentation.ChannelsShuffle.get_augmentation_params"]], "operation() (braindecode.augmentation.channelsshuffle static method)": [[37, "braindecode.augmentation.ChannelsShuffle.operation"]], "channelssymmetry (class in braindecode.augmentation)": [[38, "braindecode.augmentation.ChannelsSymmetry"]], "get_augmentation_params() (braindecode.augmentation.channelssymmetry method)": [[38, "braindecode.augmentation.ChannelsSymmetry.get_augmentation_params"]], "operation() (braindecode.augmentation.channelssymmetry static method)": [[38, "braindecode.augmentation.ChannelsSymmetry.operation"]], "compose (class in braindecode.augmentation)": [[39, "braindecode.augmentation.Compose"]], "forward() (braindecode.augmentation.compose method)": [[39, "braindecode.augmentation.Compose.forward"]], "ftsurrogate (class in braindecode.augmentation)": [[40, "braindecode.augmentation.FTSurrogate"]], "get_augmentation_params() (braindecode.augmentation.ftsurrogate method)": [[40, "braindecode.augmentation.FTSurrogate.get_augmentation_params"]], "operation() (braindecode.augmentation.ftsurrogate static method)": [[40, "braindecode.augmentation.FTSurrogate.operation"]], "frequencyshift (class in braindecode.augmentation)": [[41, "braindecode.augmentation.FrequencyShift"]], "get_augmentation_params() (braindecode.augmentation.frequencyshift method)": [[41, "braindecode.augmentation.FrequencyShift.get_augmentation_params"]], "operation() (braindecode.augmentation.frequencyshift static method)": [[41, "braindecode.augmentation.FrequencyShift.operation"]], "gaussiannoise (class in braindecode.augmentation)": [[42, "braindecode.augmentation.GaussianNoise"]], "get_augmentation_params() (braindecode.augmentation.gaussiannoise method)": [[42, "braindecode.augmentation.GaussianNoise.get_augmentation_params"]], "operation() (braindecode.augmentation.gaussiannoise static method)": [[42, "braindecode.augmentation.GaussianNoise.operation"]], "identitytransform (class in braindecode.augmentation)": [[43, "braindecode.augmentation.IdentityTransform"]], "operation() (braindecode.augmentation.identitytransform static method)": [[43, "braindecode.augmentation.IdentityTransform.operation"]], "mixup (class in braindecode.augmentation)": [[44, "braindecode.augmentation.Mixup"]], "get_augmentation_params() (braindecode.augmentation.mixup method)": [[44, "braindecode.augmentation.Mixup.get_augmentation_params"]], "operation() (braindecode.augmentation.mixup static method)": [[44, "braindecode.augmentation.Mixup.operation"]], "sensorsrotation (class in braindecode.augmentation)": [[45, "braindecode.augmentation.SensorsRotation"]], "get_augmentation_params() (braindecode.augmentation.sensorsrotation method)": [[45, "braindecode.augmentation.SensorsRotation.get_augmentation_params"]], "operation() (braindecode.augmentation.sensorsrotation static method)": [[45, "braindecode.augmentation.SensorsRotation.operation"]], "sensorsxrotation (class in braindecode.augmentation)": [[46, "braindecode.augmentation.SensorsXRotation"]], "sensorsyrotation (class in braindecode.augmentation)": [[47, "braindecode.augmentation.SensorsYRotation"]], "sensorszrotation (class in braindecode.augmentation)": [[48, "braindecode.augmentation.SensorsZRotation"]], "signflip (class in braindecode.augmentation)": [[49, "braindecode.augmentation.SignFlip"]], "operation() (braindecode.augmentation.signflip static method)": [[49, "braindecode.augmentation.SignFlip.operation"]], "smoothtimemask (class in braindecode.augmentation)": [[50, "braindecode.augmentation.SmoothTimeMask"]], "get_augmentation_params() (braindecode.augmentation.smoothtimemask method)": [[50, "braindecode.augmentation.SmoothTimeMask.get_augmentation_params"]], "operation() (braindecode.augmentation.smoothtimemask static method)": [[50, "braindecode.augmentation.SmoothTimeMask.operation"]], "timereverse (class in braindecode.augmentation)": [[51, "braindecode.augmentation.TimeReverse"]], "operation() (braindecode.augmentation.timereverse static method)": [[51, "braindecode.augmentation.TimeReverse.operation"]], "transform (class in braindecode.augmentation)": [[52, "braindecode.augmentation.Transform"]], "forward() (braindecode.augmentation.transform method)": [[52, "braindecode.augmentation.Transform.forward"]], "get_augmentation_params() (braindecode.augmentation.transform method)": [[52, "braindecode.augmentation.Transform.get_augmentation_params"]], "bandstop_filter() (in module braindecode.augmentation.functional)": [[53, "braindecode.augmentation.functional.bandstop_filter"]], "channels_dropout() (in module braindecode.augmentation.functional)": [[54, "braindecode.augmentation.functional.channels_dropout"]], "channels_permute() (in module braindecode.augmentation.functional)": [[55, "braindecode.augmentation.functional.channels_permute"]], "channels_shuffle() (in module braindecode.augmentation.functional)": [[56, "braindecode.augmentation.functional.channels_shuffle"]], "frequency_shift() (in module braindecode.augmentation.functional)": [[57, "braindecode.augmentation.functional.frequency_shift"]], "ft_surrogate() (in module braindecode.augmentation.functional)": [[58, "braindecode.augmentation.functional.ft_surrogate"]], "gaussian_noise() (in module braindecode.augmentation.functional)": [[59, "braindecode.augmentation.functional.gaussian_noise"]], "identity() (in module braindecode.augmentation.functional)": [[60, "braindecode.augmentation.functional.identity"]], "mixup() (in module braindecode.augmentation.functional)": [[61, "braindecode.augmentation.functional.mixup"]], "sensors_rotation() (in module braindecode.augmentation.functional)": [[62, "braindecode.augmentation.functional.sensors_rotation"]], "sign_flip() (in module braindecode.augmentation.functional)": [[63, "braindecode.augmentation.functional.sign_flip"]], "smooth_time_mask() (in module braindecode.augmentation.functional)": [[64, "braindecode.augmentation.functional.smooth_time_mask"]], "time_reverse() (in module braindecode.augmentation.functional)": [[65, "braindecode.augmentation.functional.time_reverse"]], "eegclassifier (class in braindecode.classifier)": [[66, "braindecode.classifier.EEGClassifier"]], "_criteria (braindecode.classifier.eegclassifier attribute)": [[66, "braindecode.classifier.EEGClassifier._criteria"]], "_modules (braindecode.classifier.eegclassifier attribute)": [[66, "braindecode.classifier.EEGClassifier._modules"]], "_optimizers (braindecode.classifier.eegclassifier attribute)": [[66, "braindecode.classifier.EEGClassifier._optimizers"]], "callbacks_ (braindecode.classifier.eegclassifier attribute)": [[66, "braindecode.classifier.EEGClassifier.callbacks_"]], "classes_ (braindecode.classifier.eegclassifier attribute)": [[66, "braindecode.classifier.EEGClassifier.classes_"]], "criterion_ (braindecode.classifier.eegclassifier attribute)": [[66, "braindecode.classifier.EEGClassifier.criterion_"]], "cuda_dependent_attributes_ (braindecode.classifier.eegclassifier attribute)": [[66, "braindecode.classifier.EEGClassifier.cuda_dependent_attributes_"]], "get_iterator() (braindecode.classifier.eegclassifier method)": [[66, "braindecode.classifier.EEGClassifier.get_iterator"]], "get_loss() (braindecode.classifier.eegclassifier method)": [[66, "braindecode.classifier.EEGClassifier.get_loss"]], "initialized_ (braindecode.classifier.eegclassifier attribute)": [[66, "braindecode.classifier.EEGClassifier.initialized_"]], "module_ (braindecode.classifier.eegclassifier attribute)": [[66, "braindecode.classifier.EEGClassifier.module_"]], "predict() (braindecode.classifier.eegclassifier method)": [[66, "braindecode.classifier.EEGClassifier.predict"]], "predict_proba() (braindecode.classifier.eegclassifier method)": [[66, "braindecode.classifier.EEGClassifier.predict_proba"]], "predict_trials() (braindecode.classifier.eegclassifier method)": [[66, "braindecode.classifier.EEGClassifier.predict_trials"]], "prefixes_ (braindecode.classifier.eegclassifier attribute)": [[66, "braindecode.classifier.EEGClassifier.prefixes_"]], "bcicompetitionivdataset4 (class in braindecode.datasets)": [[67, "braindecode.datasets.BCICompetitionIVDataset4"]], "download() (braindecode.datasets.bcicompetitionivdataset4 static method)": [[67, "braindecode.datasets.BCICompetitionIVDataset4.download"]], "bnci2014001 (class in braindecode.datasets)": [[68, "braindecode.datasets.BNCI2014001"]], "baseconcatdataset (class in braindecode.datasets)": [[69, "braindecode.datasets.BaseConcatDataset"]], "get_metadata() (braindecode.datasets.baseconcatdataset method)": [[69, "braindecode.datasets.BaseConcatDataset.get_metadata"]], "save() (braindecode.datasets.baseconcatdataset method)": [[69, "braindecode.datasets.BaseConcatDataset.save"]], "set_description() (braindecode.datasets.baseconcatdataset method)": [[69, "braindecode.datasets.BaseConcatDataset.set_description"]], "split() (braindecode.datasets.baseconcatdataset method)": [[69, "braindecode.datasets.BaseConcatDataset.split"]], "basedataset (class in braindecode.datasets)": [[70, "braindecode.datasets.BaseDataset"]], "set_description() (braindecode.datasets.basedataset method)": [[70, "braindecode.datasets.BaseDataset.set_description"]], "hgd (class in braindecode.datasets)": [[71, "braindecode.datasets.HGD"]], "moabbdataset (class in braindecode.datasets)": [[72, "braindecode.datasets.MOABBDataset"]], "sleepphysionet (class in braindecode.datasets)": [[73, "braindecode.datasets.SleepPhysionet"]], "tuh (class in braindecode.datasets)": [[74, "braindecode.datasets.TUH"]], "tuhabnormal (class in braindecode.datasets)": [[75, "braindecode.datasets.TUHAbnormal"]], "windowsdataset (class in braindecode.datasets)": [[76, "braindecode.datasets.WindowsDataset"]], "set_description() (braindecode.datasets.windowsdataset method)": [[76, "braindecode.datasets.WindowsDataset.set_description"]], "create_from_x_y() (in module braindecode.datasets)": [[77, "braindecode.datasets.create_from_X_y"]], "create_from_mne_epochs() (in module braindecode.datasets)": [[78, "braindecode.datasets.create_from_mne_epochs"]], "create_from_mne_raw() (in module braindecode.datasets)": [[79, "braindecode.datasets.create_from_mne_raw"]], "load_concat_dataset() (in module braindecode.datautil)": [[80, "braindecode.datautil.load_concat_dataset"]], "save_concat_dataset() (in module braindecode.datautil)": [[81, "braindecode.datautil.save_concat_dataset"]], "atcnet (class in braindecode.models)": [[82, "braindecode.models.ATCNet"]], "forward() (braindecode.models.atcnet method)": [[82, "braindecode.models.ATCNet.forward"]], "deep4net (class in braindecode.models)": [[83, "braindecode.models.Deep4Net"]], "load_state_dict() (braindecode.models.deep4net method)": [[83, "braindecode.models.Deep4Net.load_state_dict"]], "deepsleepnet (class in braindecode.models)": [[84, "braindecode.models.DeepSleepNet"]], "forward() (braindecode.models.deepsleepnet method)": [[84, "braindecode.models.DeepSleepNet.forward"]], "eegconformer (class in braindecode.models)": [[85, "braindecode.models.EEGConformer"]], "forward() (braindecode.models.eegconformer method)": [[85, "braindecode.models.EEGConformer.forward"]], "get_fc_size() (braindecode.models.eegconformer method)": [[85, "braindecode.models.EEGConformer.get_fc_size"]], "eegitnet (class in braindecode.models)": [[86, "braindecode.models.EEGITNet"]], "eeginception (class in braindecode.models)": [[87, "braindecode.models.EEGInception"]], "eeginceptionerp (class in braindecode.models)": [[88, "braindecode.models.EEGInceptionERP"]], "eeginceptionmi (class in braindecode.models)": [[89, "braindecode.models.EEGInceptionMI"]], "forward() (braindecode.models.eeginceptionmi method)": [[89, "braindecode.models.EEGInceptionMI.forward"]], "eegmodulemixin (class in braindecode.models)": [[90, "braindecode.models.EEGModuleMixin"]], "get_output_shape() (braindecode.models.eegmodulemixin method)": [[90, "braindecode.models.EEGModuleMixin.get_output_shape"]], "get_torchinfo_statistics() (braindecode.models.eegmodulemixin method)": [[90, "braindecode.models.EEGModuleMixin.get_torchinfo_statistics"]], "to_dense_prediction_model() (braindecode.models.eegmodulemixin method)": [[90, "braindecode.models.EEGModuleMixin.to_dense_prediction_model"]], "eegnetv1 (class in braindecode.models)": [[91, "braindecode.models.EEGNetv1"]], "eegnetv4 (class in braindecode.models)": [[92, "braindecode.models.EEGNetv4"]], "eegresnet (class in braindecode.models)": [[93, "braindecode.models.EEGResNet"]], "hybridnet (class in braindecode.models)": [[94, "braindecode.models.HybridNet"]], "forward() (braindecode.models.hybridnet method)": [[94, "braindecode.models.HybridNet.forward"]], "shallowfbcspnet (class in braindecode.models)": [[95, "braindecode.models.ShallowFBCSPNet"]], "load_state_dict() (braindecode.models.shallowfbcspnet method)": [[95, "braindecode.models.ShallowFBCSPNet.load_state_dict"]], "sleepstagerblanco2020 (class in braindecode.models)": [[96, "braindecode.models.SleepStagerBlanco2020"]], "forward() (braindecode.models.sleepstagerblanco2020 method)": [[96, "braindecode.models.SleepStagerBlanco2020.forward"]], "sleepstagerchambon2018 (class in braindecode.models)": [[97, "braindecode.models.SleepStagerChambon2018"]], "forward() (braindecode.models.sleepstagerchambon2018 method)": [[97, "braindecode.models.SleepStagerChambon2018.forward"]], "sleepstagereldele2021 (class in braindecode.models)": [[98, "braindecode.models.SleepStagerEldele2021"]], "forward() (braindecode.models.sleepstagereldele2021 method)": [[98, "braindecode.models.SleepStagerEldele2021.forward"]], "tcn (class in braindecode.models)": [[99, "braindecode.models.TCN"]], "forward() (braindecode.models.tcn method)": [[99, "braindecode.models.TCN.forward"]], "tidnet (class in braindecode.models)": [[100, "braindecode.models.TIDNet"]], "forward() (braindecode.models.tidnet method)": [[100, "braindecode.models.TIDNet.forward"]], "timedistributed (class in braindecode.models)": [[101, "braindecode.models.TimeDistributed"]], "forward() (braindecode.models.timedistributed method)": [[101, "braindecode.models.TimeDistributed.forward"]], "usleep (class in braindecode.models)": [[102, "braindecode.models.USleep"]], "forward() (braindecode.models.usleep method)": [[102, "braindecode.models.USleep.forward"]], "get_output_shape() (in module braindecode.models)": [[103, "braindecode.models.get_output_shape"]], "crop (class in braindecode.preprocessing)": [[104, "braindecode.preprocessing.Crop"]], "dropchannels (class in braindecode.preprocessing)": [[105, "braindecode.preprocessing.DropChannels"]], "filter (class in braindecode.preprocessing)": [[106, "braindecode.preprocessing.Filter"]], "pick (class in braindecode.preprocessing)": [[107, "braindecode.preprocessing.Pick"]], "preprocessor (class in braindecode.preprocessing)": [[108, "braindecode.preprocessing.Preprocessor"]], "apply() (braindecode.preprocessing.preprocessor method)": [[108, "braindecode.preprocessing.Preprocessor.apply"]], "resample (class in braindecode.preprocessing)": [[109, "braindecode.preprocessing.Resample"]], "seteegreference (class in braindecode.preprocessing)": [[110, "braindecode.preprocessing.SetEEGReference"]], "create_fixed_length_windows() (in module braindecode.preprocessing)": [[111, "braindecode.preprocessing.create_fixed_length_windows"]], "create_windows_from_events() (in module braindecode.preprocessing)": [[112, "braindecode.preprocessing.create_windows_from_events"]], "create_windows_from_target_channels() (in module braindecode.preprocessing)": [[113, "braindecode.preprocessing.create_windows_from_target_channels"]], "exponential_moving_demean() (in module braindecode.preprocessing)": [[114, "braindecode.preprocessing.exponential_moving_demean"]], "exponential_moving_standardize() (in module braindecode.preprocessing)": [[115, "braindecode.preprocessing.exponential_moving_standardize"]], "filterbank() (in module braindecode.preprocessing)": [[116, "braindecode.preprocessing.filterbank"]], "preprocess() (in module braindecode.preprocessing)": [[117, "braindecode.preprocessing.preprocess"]], "scale() (in module braindecode.preprocessing)": [[118, "braindecode.preprocessing.scale"]], "eegregressor (class in braindecode.regressor)": [[119, "braindecode.regressor.EEGRegressor"]], "_criteria (braindecode.regressor.eegregressor attribute)": [[119, "braindecode.regressor.EEGRegressor._criteria"]], "_modules (braindecode.regressor.eegregressor attribute)": [[119, "braindecode.regressor.EEGRegressor._modules"]], "_optimizers (braindecode.regressor.eegregressor attribute)": [[119, "braindecode.regressor.EEGRegressor._optimizers"]], "callbacks_ (braindecode.regressor.eegregressor attribute)": [[119, "braindecode.regressor.EEGRegressor.callbacks_"]], "criterion_ (braindecode.regressor.eegregressor attribute)": [[119, "braindecode.regressor.EEGRegressor.criterion_"]], "cuda_dependent_attributes_ (braindecode.regressor.eegregressor attribute)": [[119, "braindecode.regressor.EEGRegressor.cuda_dependent_attributes_"]], "fit() (braindecode.regressor.eegregressor method)": [[119, "braindecode.regressor.EEGRegressor.fit"]], "get_iterator() (braindecode.regressor.eegregressor method)": [[119, "braindecode.regressor.EEGRegressor.get_iterator"]], "initialized_ (braindecode.regressor.eegregressor attribute)": [[119, "braindecode.regressor.EEGRegressor.initialized_"]], "module_ (braindecode.regressor.eegregressor attribute)": [[119, "braindecode.regressor.EEGRegressor.module_"]], "predict_proba() (braindecode.regressor.eegregressor method)": [[119, "braindecode.regressor.EEGRegressor.predict_proba"]], "predict_trials() (braindecode.regressor.eegregressor method)": [[119, "braindecode.regressor.EEGRegressor.predict_trials"]], "prefixes_ (braindecode.regressor.eegregressor attribute)": [[119, "braindecode.regressor.EEGRegressor.prefixes_"]], "balancedsequencesampler (class in braindecode.samplers)": [[120, "braindecode.samplers.BalancedSequenceSampler"]], "sample_class() (braindecode.samplers.balancedsequencesampler method)": [[120, "braindecode.samplers.BalancedSequenceSampler.sample_class"]], "recordingsampler (class in braindecode.samplers)": [[121, "braindecode.samplers.RecordingSampler"]], "info (braindecode.samplers.recordingsampler attribute)": [[121, "braindecode.samplers.RecordingSampler.info"]], "n_recordings (braindecode.samplers.recordingsampler attribute)": [[121, "braindecode.samplers.RecordingSampler.n_recordings"]], "sample_recording() (braindecode.samplers.recordingsampler method)": [[121, "braindecode.samplers.RecordingSampler.sample_recording"]], "sample_window() (braindecode.samplers.recordingsampler method)": [[121, "braindecode.samplers.RecordingSampler.sample_window"]], "relativepositioningsampler (class in braindecode.samplers)": [[122, "braindecode.samplers.RelativePositioningSampler"]], "presample() (braindecode.samplers.relativepositioningsampler method)": [[122, "braindecode.samplers.RelativePositioningSampler.presample"]], "sequencesampler (class in braindecode.samplers)": [[123, "braindecode.samplers.SequenceSampler"]], "file_ids (braindecode.samplers.sequencesampler attribute)": [[123, "braindecode.samplers.SequenceSampler.file_ids"]], "info (braindecode.samplers.sequencesampler attribute)": [[123, "braindecode.samplers.SequenceSampler.info"]], "croppedloss (class in braindecode.training)": [[124, "braindecode.training.CroppedLoss"]], "forward() (braindecode.training.croppedloss method)": [[124, "braindecode.training.CroppedLoss.forward"]], "croppedtimeseriesepochscoring (class in braindecode.training)": [[125, "braindecode.training.CroppedTimeSeriesEpochScoring"]], "on_epoch_end() (braindecode.training.croppedtimeseriesepochscoring method)": [[125, "braindecode.training.CroppedTimeSeriesEpochScoring.on_epoch_end"]], "croppedtrialepochscoring (class in braindecode.training)": [[126, "braindecode.training.CroppedTrialEpochScoring"]], "on_batch_end() (braindecode.training.croppedtrialepochscoring method)": [[126, "braindecode.training.CroppedTrialEpochScoring.on_batch_end"]], "on_epoch_end() (braindecode.training.croppedtrialepochscoring method)": [[126, "braindecode.training.CroppedTrialEpochScoring.on_epoch_end"]], "postepochtrainscoring (class in braindecode.training)": [[127, "braindecode.training.PostEpochTrainScoring"]], "on_epoch_end() (braindecode.training.postepochtrainscoring method)": [[127, "braindecode.training.PostEpochTrainScoring.on_epoch_end"]], "timeseriesloss (class in braindecode.training)": [[128, "braindecode.training.TimeSeriesLoss"]], "forward() (braindecode.training.timeseriesloss method)": [[128, "braindecode.training.TimeSeriesLoss.forward"]], "mixup_criterion() (in module braindecode.training)": [[129, "braindecode.training.mixup_criterion"]], "predict_trials() (in module braindecode.training)": [[130, "braindecode.training.predict_trials"]], "trial_preds_from_window_preds() (in module braindecode.training)": [[131, "braindecode.training.trial_preds_from_window_preds"]], "set_random_seeds() (in module braindecode.util)": [[132, "braindecode.util.set_random_seeds"]], "compute_amplitude_gradients() (in module braindecode.visualization)": [[133, "braindecode.visualization.compute_amplitude_gradients"]], "plot_confusion_matrix() (in module braindecode.visualization)": [[134, "braindecode.visualization.plot_confusion_matrix"]]}})