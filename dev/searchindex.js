Search.setIndex({"docnames": ["api", "auto_examples/advanced_training/index", "auto_examples/advanced_training/plot_bcic_iv_4_ecog_cropped", "auto_examples/advanced_training/plot_data_augmentation", "auto_examples/advanced_training/plot_data_augmentation_search", "auto_examples/advanced_training/plot_relative_positioning", "auto_examples/advanced_training/sg_execution_times", "auto_examples/applied_examples/index", "auto_examples/applied_examples/plot_bcic_iv_4_ecog_trial", "auto_examples/applied_examples/plot_sleep_staging_chambon2018", "auto_examples/applied_examples/plot_sleep_staging_eldele2021", "auto_examples/applied_examples/plot_sleep_staging_usleep", "auto_examples/applied_examples/plot_tuh_eeg_corpus", "auto_examples/applied_examples/sg_execution_times", "auto_examples/datasets_io/benchmark_lazy_eager_loading", "auto_examples/datasets_io/index", "auto_examples/datasets_io/plot_benchmark_preprocessing", "auto_examples/datasets_io/plot_custom_dataset_example", "auto_examples/datasets_io/plot_load_save_datasets", "auto_examples/datasets_io/plot_mne_dataset_example", "auto_examples/datasets_io/plot_moabb_dataset_example", "auto_examples/datasets_io/plot_split_dataset", "auto_examples/datasets_io/plot_tuh_discrete_multitarget", "auto_examples/datasets_io/sg_execution_times", "auto_examples/index", "auto_examples/model_building/index", "auto_examples/model_building/plot_basic_training_epochs", "auto_examples/model_building/plot_bcic_iv_2a_moabb_cropped", "auto_examples/model_building/plot_bcic_iv_2a_moabb_trial", "auto_examples/model_building/plot_how_train_test_and_tune", "auto_examples/model_building/plot_hyperparameter_tuning_with_scikit-learn", "auto_examples/model_building/plot_regression", "auto_examples/model_building/plot_train_in_pure_pytorch_and_pytorch_lightning", "auto_examples/model_building/sg_execution_times", "auto_examples/sg_execution_times", "cite", "generated/braindecode.augmentation.AugmentedDataLoader", "generated/braindecode.augmentation.BandstopFilter", "generated/braindecode.augmentation.ChannelsDropout", "generated/braindecode.augmentation.ChannelsShuffle", "generated/braindecode.augmentation.ChannelsSymmetry", "generated/braindecode.augmentation.Compose", "generated/braindecode.augmentation.FTSurrogate", "generated/braindecode.augmentation.FrequencyShift", "generated/braindecode.augmentation.GaussianNoise", "generated/braindecode.augmentation.IdentityTransform", "generated/braindecode.augmentation.Mixup", "generated/braindecode.augmentation.SensorsRotation", "generated/braindecode.augmentation.SensorsXRotation", "generated/braindecode.augmentation.SensorsYRotation", "generated/braindecode.augmentation.SensorsZRotation", "generated/braindecode.augmentation.SignFlip", "generated/braindecode.augmentation.SmoothTimeMask", "generated/braindecode.augmentation.TimeReverse", "generated/braindecode.augmentation.Transform", "generated/braindecode.augmentation.functional.bandstop_filter", "generated/braindecode.augmentation.functional.channels_dropout", "generated/braindecode.augmentation.functional.channels_permute", "generated/braindecode.augmentation.functional.channels_shuffle", "generated/braindecode.augmentation.functional.frequency_shift", "generated/braindecode.augmentation.functional.ft_surrogate", "generated/braindecode.augmentation.functional.gaussian_noise", "generated/braindecode.augmentation.functional.identity", "generated/braindecode.augmentation.functional.mixup", "generated/braindecode.augmentation.functional.sensors_rotation", "generated/braindecode.augmentation.functional.sign_flip", "generated/braindecode.augmentation.functional.smooth_time_mask", "generated/braindecode.augmentation.functional.time_reverse", "generated/braindecode.classifier.EEGClassifier", "generated/braindecode.datasets.BCICompetitionIVDataset4", "generated/braindecode.datasets.BNCI2014001", "generated/braindecode.datasets.BaseConcatDataset", "generated/braindecode.datasets.BaseDataset", "generated/braindecode.datasets.HGD", "generated/braindecode.datasets.MOABBDataset", "generated/braindecode.datasets.SleepPhysionet", "generated/braindecode.datasets.TUH", "generated/braindecode.datasets.TUHAbnormal", "generated/braindecode.datasets.WindowsDataset", "generated/braindecode.datasets.create_from_X_y", "generated/braindecode.datasets.create_from_mne_epochs", "generated/braindecode.datasets.create_from_mne_raw", "generated/braindecode.datautil.load_concat_dataset", "generated/braindecode.datautil.save_concat_dataset", "generated/braindecode.models.ATCNet", "generated/braindecode.models.Deep4Net", "generated/braindecode.models.DeepSleepNet", "generated/braindecode.models.EEGConformer", "generated/braindecode.models.EEGITNet", "generated/braindecode.models.EEGInception", "generated/braindecode.models.EEGInceptionERP", "generated/braindecode.models.EEGInceptionMI", "generated/braindecode.models.EEGModuleMixin", "generated/braindecode.models.EEGNetv1", "generated/braindecode.models.EEGNetv4", "generated/braindecode.models.EEGResNet", "generated/braindecode.models.HybridNet", "generated/braindecode.models.ShallowFBCSPNet", "generated/braindecode.models.SleepStagerBlanco2020", "generated/braindecode.models.SleepStagerChambon2018", "generated/braindecode.models.SleepStagerEldele2021", "generated/braindecode.models.TCN", "generated/braindecode.models.TIDNet", "generated/braindecode.models.TimeDistributed", "generated/braindecode.models.USleep", "generated/braindecode.models.get_output_shape", "generated/braindecode.preprocessing.Crop", "generated/braindecode.preprocessing.DropChannels", "generated/braindecode.preprocessing.Filter", "generated/braindecode.preprocessing.Pick", "generated/braindecode.preprocessing.Preprocessor", "generated/braindecode.preprocessing.Resample", "generated/braindecode.preprocessing.SetEEGReference", "generated/braindecode.preprocessing.create_fixed_length_windows", "generated/braindecode.preprocessing.create_windows_from_events", "generated/braindecode.preprocessing.create_windows_from_target_channels", "generated/braindecode.preprocessing.exponential_moving_demean", "generated/braindecode.preprocessing.exponential_moving_standardize", "generated/braindecode.preprocessing.filterbank", "generated/braindecode.preprocessing.preprocess", "generated/braindecode.regressor.EEGRegressor", "generated/braindecode.samplers.BalancedSequenceSampler", "generated/braindecode.samplers.RecordingSampler", "generated/braindecode.samplers.RelativePositioningSampler", "generated/braindecode.samplers.SequenceSampler", "generated/braindecode.training.CroppedLoss", "generated/braindecode.training.CroppedTimeSeriesEpochScoring", "generated/braindecode.training.CroppedTrialEpochScoring", "generated/braindecode.training.PostEpochTrainScoring", "generated/braindecode.training.TimeSeriesLoss", "generated/braindecode.training.mixup_criterion", "generated/braindecode.training.predict_trials", "generated/braindecode.training.trial_preds_from_window_preds", "generated/braindecode.util.set_random_seeds", "generated/braindecode.visualization.compute_amplitude_gradients", "generated/braindecode.visualization.plot_confusion_matrix", "help", "index", "install/install", "install/install_pip", "install/install_source", "sg_execution_times", "whats_new"], "filenames": ["api.rst", "auto_examples/advanced_training/index.rst", "auto_examples/advanced_training/plot_bcic_iv_4_ecog_cropped.rst", "auto_examples/advanced_training/plot_data_augmentation.rst", "auto_examples/advanced_training/plot_data_augmentation_search.rst", "auto_examples/advanced_training/plot_relative_positioning.rst", "auto_examples/advanced_training/sg_execution_times.rst", "auto_examples/applied_examples/index.rst", "auto_examples/applied_examples/plot_bcic_iv_4_ecog_trial.rst", "auto_examples/applied_examples/plot_sleep_staging_chambon2018.rst", "auto_examples/applied_examples/plot_sleep_staging_eldele2021.rst", "auto_examples/applied_examples/plot_sleep_staging_usleep.rst", "auto_examples/applied_examples/plot_tuh_eeg_corpus.rst", "auto_examples/applied_examples/sg_execution_times.rst", "auto_examples/datasets_io/benchmark_lazy_eager_loading.rst", "auto_examples/datasets_io/index.rst", "auto_examples/datasets_io/plot_benchmark_preprocessing.rst", "auto_examples/datasets_io/plot_custom_dataset_example.rst", "auto_examples/datasets_io/plot_load_save_datasets.rst", "auto_examples/datasets_io/plot_mne_dataset_example.rst", "auto_examples/datasets_io/plot_moabb_dataset_example.rst", "auto_examples/datasets_io/plot_split_dataset.rst", "auto_examples/datasets_io/plot_tuh_discrete_multitarget.rst", "auto_examples/datasets_io/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/model_building/index.rst", "auto_examples/model_building/plot_basic_training_epochs.rst", "auto_examples/model_building/plot_bcic_iv_2a_moabb_cropped.rst", "auto_examples/model_building/plot_bcic_iv_2a_moabb_trial.rst", "auto_examples/model_building/plot_how_train_test_and_tune.rst", "auto_examples/model_building/plot_hyperparameter_tuning_with_scikit-learn.rst", "auto_examples/model_building/plot_regression.rst", "auto_examples/model_building/plot_train_in_pure_pytorch_and_pytorch_lightning.rst", "auto_examples/model_building/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "cite.rst", "generated/braindecode.augmentation.AugmentedDataLoader.rst", "generated/braindecode.augmentation.BandstopFilter.rst", "generated/braindecode.augmentation.ChannelsDropout.rst", "generated/braindecode.augmentation.ChannelsShuffle.rst", "generated/braindecode.augmentation.ChannelsSymmetry.rst", "generated/braindecode.augmentation.Compose.rst", "generated/braindecode.augmentation.FTSurrogate.rst", "generated/braindecode.augmentation.FrequencyShift.rst", "generated/braindecode.augmentation.GaussianNoise.rst", "generated/braindecode.augmentation.IdentityTransform.rst", "generated/braindecode.augmentation.Mixup.rst", "generated/braindecode.augmentation.SensorsRotation.rst", "generated/braindecode.augmentation.SensorsXRotation.rst", "generated/braindecode.augmentation.SensorsYRotation.rst", "generated/braindecode.augmentation.SensorsZRotation.rst", "generated/braindecode.augmentation.SignFlip.rst", "generated/braindecode.augmentation.SmoothTimeMask.rst", "generated/braindecode.augmentation.TimeReverse.rst", "generated/braindecode.augmentation.Transform.rst", "generated/braindecode.augmentation.functional.bandstop_filter.rst", "generated/braindecode.augmentation.functional.channels_dropout.rst", "generated/braindecode.augmentation.functional.channels_permute.rst", "generated/braindecode.augmentation.functional.channels_shuffle.rst", "generated/braindecode.augmentation.functional.frequency_shift.rst", "generated/braindecode.augmentation.functional.ft_surrogate.rst", "generated/braindecode.augmentation.functional.gaussian_noise.rst", "generated/braindecode.augmentation.functional.identity.rst", "generated/braindecode.augmentation.functional.mixup.rst", "generated/braindecode.augmentation.functional.sensors_rotation.rst", "generated/braindecode.augmentation.functional.sign_flip.rst", "generated/braindecode.augmentation.functional.smooth_time_mask.rst", "generated/braindecode.augmentation.functional.time_reverse.rst", "generated/braindecode.classifier.EEGClassifier.rst", "generated/braindecode.datasets.BCICompetitionIVDataset4.rst", "generated/braindecode.datasets.BNCI2014001.rst", "generated/braindecode.datasets.BaseConcatDataset.rst", "generated/braindecode.datasets.BaseDataset.rst", "generated/braindecode.datasets.HGD.rst", "generated/braindecode.datasets.MOABBDataset.rst", "generated/braindecode.datasets.SleepPhysionet.rst", "generated/braindecode.datasets.TUH.rst", "generated/braindecode.datasets.TUHAbnormal.rst", "generated/braindecode.datasets.WindowsDataset.rst", "generated/braindecode.datasets.create_from_X_y.rst", "generated/braindecode.datasets.create_from_mne_epochs.rst", "generated/braindecode.datasets.create_from_mne_raw.rst", "generated/braindecode.datautil.load_concat_dataset.rst", "generated/braindecode.datautil.save_concat_dataset.rst", "generated/braindecode.models.ATCNet.rst", "generated/braindecode.models.Deep4Net.rst", "generated/braindecode.models.DeepSleepNet.rst", "generated/braindecode.models.EEGConformer.rst", "generated/braindecode.models.EEGITNet.rst", "generated/braindecode.models.EEGInception.rst", "generated/braindecode.models.EEGInceptionERP.rst", "generated/braindecode.models.EEGInceptionMI.rst", "generated/braindecode.models.EEGModuleMixin.rst", "generated/braindecode.models.EEGNetv1.rst", "generated/braindecode.models.EEGNetv4.rst", "generated/braindecode.models.EEGResNet.rst", "generated/braindecode.models.HybridNet.rst", "generated/braindecode.models.ShallowFBCSPNet.rst", "generated/braindecode.models.SleepStagerBlanco2020.rst", "generated/braindecode.models.SleepStagerChambon2018.rst", "generated/braindecode.models.SleepStagerEldele2021.rst", "generated/braindecode.models.TCN.rst", "generated/braindecode.models.TIDNet.rst", "generated/braindecode.models.TimeDistributed.rst", "generated/braindecode.models.USleep.rst", "generated/braindecode.models.get_output_shape.rst", "generated/braindecode.preprocessing.Crop.rst", "generated/braindecode.preprocessing.DropChannels.rst", "generated/braindecode.preprocessing.Filter.rst", "generated/braindecode.preprocessing.Pick.rst", "generated/braindecode.preprocessing.Preprocessor.rst", "generated/braindecode.preprocessing.Resample.rst", "generated/braindecode.preprocessing.SetEEGReference.rst", "generated/braindecode.preprocessing.create_fixed_length_windows.rst", "generated/braindecode.preprocessing.create_windows_from_events.rst", "generated/braindecode.preprocessing.create_windows_from_target_channels.rst", "generated/braindecode.preprocessing.exponential_moving_demean.rst", "generated/braindecode.preprocessing.exponential_moving_standardize.rst", "generated/braindecode.preprocessing.filterbank.rst", "generated/braindecode.preprocessing.preprocess.rst", "generated/braindecode.regressor.EEGRegressor.rst", "generated/braindecode.samplers.BalancedSequenceSampler.rst", "generated/braindecode.samplers.RecordingSampler.rst", "generated/braindecode.samplers.RelativePositioningSampler.rst", "generated/braindecode.samplers.SequenceSampler.rst", "generated/braindecode.training.CroppedLoss.rst", "generated/braindecode.training.CroppedTimeSeriesEpochScoring.rst", "generated/braindecode.training.CroppedTrialEpochScoring.rst", "generated/braindecode.training.PostEpochTrainScoring.rst", "generated/braindecode.training.TimeSeriesLoss.rst", "generated/braindecode.training.mixup_criterion.rst", "generated/braindecode.training.predict_trials.rst", "generated/braindecode.training.trial_preds_from_window_preds.rst", "generated/braindecode.util.set_random_seeds.rst", "generated/braindecode.visualization.compute_amplitude_gradients.rst", "generated/braindecode.visualization.plot_confusion_matrix.rst", "help.rst", "index.rst", "install/install.rst", "install/install_pip.rst", "install/install_source.rst", "sg_execution_times.rst", "whats_new.rst"], "titles": ["API Reference", "Advanced neural network training strategies", "Fingers flexion cropped decoding on BCIC IV 4 ECoG Dataset", "Data Augmentation on BCIC IV 2a Dataset", "Searching the best data augmentation on BCIC IV 2a Dataset", "Self-supervised learning on EEG with relative positioning", "Computation times", "Applied examples on real-world datasets", "Fingers flexion decoding on BCIC IV 4 ECoG Dataset", "Sleep staging on the Sleep Physionet dataset using Chambon2018 network", "Sleep staging on the Sleep Physionet dataset using Eldele2021", "Sleep staging on the Sleep Physionet dataset using U-Sleep network", "Process a big data EEG resource (TUH EEG Corpus)", "Computation times", "Benchmarking eager and lazy loading", "Loading and organizing data", "Benchmarking preprocessing with parallelization and serialization", "Custom Dataset Example", "Load and save dataset example", "MNE Dataset Example", "MOABB Dataset Example", "Split Dataset Example", "Multiple discrete targets with the TUH EEG Corpus", "Computation times", "Examples", "Basic model building and training", "Simple training on MNE epochs", "Cropped Decoding on BCIC IV 2a Dataset", "Basic Brain Decoding on EEG Data", "How to train, test and tune your model?", "Hyperparameter tuning with scikit-learn", "Convolutional neural network regression model on fake data.", "Training a Braindecode model in PyTorch", "Computation times", "Computation times", "How to cite Braindecode", "braindecode.augmentation.AugmentedDataLoader", "braindecode.augmentation.BandstopFilter", "braindecode.augmentation.ChannelsDropout", "braindecode.augmentation.ChannelsShuffle", "braindecode.augmentation.ChannelsSymmetry", "braindecode.augmentation.Compose", "braindecode.augmentation.FTSurrogate", "braindecode.augmentation.FrequencyShift", "braindecode.augmentation.GaussianNoise", "braindecode.augmentation.IdentityTransform", "braindecode.augmentation.Mixup", "braindecode.augmentation.SensorsRotation", "braindecode.augmentation.SensorsXRotation", "braindecode.augmentation.SensorsYRotation", "braindecode.augmentation.SensorsZRotation", "braindecode.augmentation.SignFlip", "braindecode.augmentation.SmoothTimeMask", "braindecode.augmentation.TimeReverse", "braindecode.augmentation.Transform", "braindecode.augmentation.functional.bandstop_filter", "braindecode.augmentation.functional.channels_dropout", "braindecode.augmentation.functional.channels_permute", "braindecode.augmentation.functional.channels_shuffle", "braindecode.augmentation.functional.frequency_shift", "braindecode.augmentation.functional.ft_surrogate", "braindecode.augmentation.functional.gaussian_noise", "braindecode.augmentation.functional.identity", "braindecode.augmentation.functional.mixup", "braindecode.augmentation.functional.sensors_rotation", "braindecode.augmentation.functional.sign_flip", "braindecode.augmentation.functional.smooth_time_mask", "braindecode.augmentation.functional.time_reverse", "braindecode.classifier.EEGClassifier", "braindecode.datasets.BCICompetitionIVDataset4", "braindecode.datasets.BNCI2014001", "braindecode.datasets.BaseConcatDataset", "braindecode.datasets.BaseDataset", "braindecode.datasets.HGD", "braindecode.datasets.MOABBDataset", "braindecode.datasets.SleepPhysionet", "braindecode.datasets.TUH", "braindecode.datasets.TUHAbnormal", "braindecode.datasets.WindowsDataset", "braindecode.datasets.create_from_X_y", "braindecode.datasets.create_from_mne_epochs", "braindecode.datasets.create_from_mne_raw", "braindecode.datautil.load_concat_dataset", "braindecode.datautil.save_concat_dataset", "braindecode.models.ATCNet", "braindecode.models.Deep4Net", "braindecode.models.DeepSleepNet", "braindecode.models.EEGConformer", "braindecode.models.EEGITNet", "braindecode.models.EEGInception", "braindecode.models.EEGInceptionERP", "braindecode.models.EEGInceptionMI", "braindecode.models.EEGModuleMixin", "braindecode.models.EEGNetv1", "braindecode.models.EEGNetv4", "braindecode.models.EEGResNet", "braindecode.models.HybridNet", "braindecode.models.ShallowFBCSPNet", "braindecode.models.SleepStagerBlanco2020", "braindecode.models.SleepStagerChambon2018", "braindecode.models.SleepStagerEldele2021", "braindecode.models.TCN", "braindecode.models.TIDNet", "braindecode.models.TimeDistributed", "braindecode.models.USleep", "braindecode.models.get_output_shape", "braindecode.preprocessing.Crop", "braindecode.preprocessing.DropChannels", "braindecode.preprocessing.Filter", "braindecode.preprocessing.Pick", "braindecode.preprocessing.Preprocessor", "braindecode.preprocessing.Resample", "braindecode.preprocessing.SetEEGReference", "braindecode.preprocessing.create_fixed_length_windows", "braindecode.preprocessing.create_windows_from_events", "braindecode.preprocessing.create_windows_from_target_channels", "braindecode.preprocessing.exponential_moving_demean", "braindecode.preprocessing.exponential_moving_standardize", "braindecode.preprocessing.filterbank", "braindecode.preprocessing.preprocess", "braindecode.regressor.EEGRegressor", "braindecode.samplers.BalancedSequenceSampler", "braindecode.samplers.RecordingSampler", "braindecode.samplers.RelativePositioningSampler", "braindecode.samplers.SequenceSampler", "braindecode.training.CroppedLoss", "braindecode.training.CroppedTimeSeriesEpochScoring", "braindecode.training.CroppedTrialEpochScoring", "braindecode.training.PostEpochTrainScoring", "braindecode.training.TimeSeriesLoss", "braindecode.training.mixup_criterion", "braindecode.training.predict_trials", "braindecode.training.trial_preds_from_window_preds", "braindecode.util.set_random_seeds", "braindecode.visualization.compute_amplitude_gradients", "braindecode.visualization.plot_confusion_matrix", "Frequently Asked Questions (FAQ)", "Braindecode", "Installation", "Installing from PyPI", "Installing from sources", "Computation times", "What\u2019s new"], "terms": {"thi": [0, 2, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 22, 31, 48, 49, 50, 68, 69, 70, 71, 73, 75, 76, 77, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 108, 112, 114, 116, 117, 120, 122, 128, 133, 136, 140, 142], "i": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 26, 27, 28, 30, 31, 35, 37, 41, 42, 43, 46, 47, 52, 54, 55, 59, 60, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 110, 111, 112, 113, 114, 119, 120, 123, 128, 132, 133, 137, 138, 139, 142], "class": [0, 3, 4, 5, 9, 10, 11, 12, 14, 18, 20, 21, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 135, 142], "camelcas": 0, "name": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 20, 21, 22, 26, 29, 30, 32, 40, 68, 70, 71, 72, 73, 74, 79, 82, 107, 108, 109, 110, 112, 120, 126, 127, 128, 142], "function": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 20, 22, 26, 27, 28, 30, 31, 32, 35, 42, 54, 68, 71, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 106, 110, 112, 114, 120, 126, 127, 128, 133, 142], "underscore_cas": 0, "braindecod": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 33, 138, 139, 141, 142], "base": [0, 2, 3, 4, 5, 8, 9, 10, 12, 16, 18, 20, 21, 26, 27, 28, 29, 30, 31, 32, 36, 44, 46, 61, 63, 68, 70, 71, 84, 86, 87, 88, 89, 90, 91, 93, 94, 100, 106, 108, 109, 113, 114, 120, 122, 130, 142], "datautil": [0, 5, 18, 78, 142], "exampl": [1, 2, 6, 8, 9, 10, 11, 13, 14, 15, 16, 22, 23, 25, 31, 33, 34, 37, 39, 40, 44, 45, 46, 47, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 112, 136, 141, 142], "explain": [1, 4, 24, 27, 88], "more": [1, 2, 3, 4, 5, 8, 9, 10, 11, 16, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 68, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 112, 119, 120, 133, 140, 142], "topic": [1, 24, 35], "finger": [1, 6, 7, 13, 24, 69, 71, 73, 92, 97, 105, 110, 113, 115, 117, 119, 126, 127, 129, 133, 141, 142], "flexion": [1, 6, 7, 13, 24, 69, 71, 92, 97, 105, 110, 113, 115, 117, 119, 126, 127, 129, 133, 141, 142], "crop": [1, 6, 8, 10, 11, 12, 16, 20, 24, 25, 29, 30, 31, 32, 33, 68, 69, 71, 74, 75, 78, 92, 97, 105, 110, 113, 114, 117, 119, 120, 125, 126, 127, 129, 131, 133, 135, 141, 142], "decod": [1, 3, 4, 6, 7, 11, 13, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 35, 68, 69, 71, 74, 79, 85, 87, 92, 96, 97, 104, 105, 110, 113, 114, 115, 117, 119, 120, 125, 126, 127, 129, 131, 133, 135, 137, 141, 142], "bcic": [1, 6, 7, 13, 20, 24, 25, 29, 32, 33, 36, 38, 41, 42, 43, 51, 52, 54, 69, 71, 74, 92, 97, 105, 110, 113, 114, 115, 117, 119, 125, 126, 127, 129, 133, 135, 141, 142], "iv": [1, 6, 7, 13, 20, 21, 24, 25, 26, 28, 29, 30, 32, 33, 36, 38, 41, 42, 43, 51, 52, 54, 69, 71, 74, 84, 91, 92, 97, 105, 110, 113, 114, 115, 117, 119, 125, 126, 127, 129, 133, 135, 141, 142], "4": [1, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 69, 70, 71, 73, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 97, 99, 102, 104, 105, 110, 113, 115, 117, 118, 119, 121, 122, 126, 127, 129, 133, 141], "ecog": [1, 6, 7, 13, 24, 69, 71, 92, 97, 105, 110, 112, 113, 115, 117, 119, 126, 127, 129, 133, 137, 141, 142], "dataset": [1, 6, 13, 14, 15, 16, 23, 25, 26, 33, 36, 38, 41, 42, 43, 51, 52, 54, 68, 82, 84, 91, 92, 97, 99, 100, 103, 104, 105, 110, 113, 114, 115, 117, 119, 120, 122, 124, 125, 126, 127, 129, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142], "data": [1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 25, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 58, 61, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 85, 87, 92, 97, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 125, 130, 133, 135, 136, 137, 141, 142], "augment": [1, 6, 24, 71, 74, 87, 92, 97, 110, 114, 117, 119, 133, 137, 141, 142], "2a": [1, 6, 20, 21, 24, 25, 26, 28, 29, 30, 32, 33, 36, 38, 41, 42, 43, 51, 52, 54, 71, 74, 84, 91, 92, 97, 110, 114, 117, 119, 125, 133, 135, 141, 142], "search": [1, 6, 24, 29, 30, 36, 38, 42, 52, 54, 68, 71, 74, 92, 97, 110, 114, 117, 119, 120, 133, 136, 141, 142], "best": [1, 6, 24, 32, 36, 38, 42, 52, 54, 71, 74, 92, 97, 110, 114, 117, 119, 133, 141], "self": [1, 4, 6, 11, 24, 32, 68, 71, 75, 84, 87, 92, 99, 110, 114, 119, 120, 122, 123, 124, 133, 136, 141, 142], "supervis": [1, 4, 6, 24, 29, 32, 71, 75, 92, 99, 110, 114, 119, 122, 123, 133, 141, 142], "learn": [1, 2, 3, 4, 6, 8, 9, 10, 11, 24, 25, 27, 28, 29, 31, 32, 33, 35, 37, 38, 39, 40, 44, 46, 52, 55, 56, 57, 58, 61, 63, 66, 68, 71, 74, 75, 85, 89, 90, 92, 96, 97, 99, 100, 110, 114, 117, 119, 120, 122, 123, 133, 135, 137, 139, 141, 142], "eeg": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 74, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 108, 109, 110, 112, 113, 114, 117, 119, 122, 123, 130, 133, 135, 137, 141, 142], "rel": [1, 6, 24, 29, 30, 71, 75, 92, 99, 110, 114, 119, 122, 123, 133, 141], "posit": [1, 6, 24, 27, 37, 47, 48, 49, 50, 52, 55, 64, 66, 71, 75, 92, 99, 110, 114, 119, 122, 123, 132, 133, 141], "go": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 106], "end": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 35, 68, 91, 106, 111, 113, 114, 120, 126, 127, 128, 142], "download": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 69, 76, 77, 139], "full": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 133], "code": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 84, 87, 88, 89, 90, 100, 101, 102, 136, 138, 140, 142], "tutori": [2, 3, 4, 5, 8, 9, 10, 11, 22, 24, 26, 27, 28, 29, 30, 32, 140, 142], "show": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 73, 92, 142], "you": [2, 3, 4, 5, 8, 9, 11, 12, 16, 17, 18, 19, 21, 22, 24, 27, 28, 29, 32, 35, 68, 120, 128, 136, 138, 139, 140], "how": [2, 3, 4, 5, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 68, 71, 74, 92, 97, 106, 110, 112, 114, 117, 119, 120, 133, 141, 142], "deep": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 32, 35, 44, 61, 85, 89, 90, 96, 97, 99, 100, 102, 135, 137, 139], "bci": [2, 4, 8, 21, 26, 27, 28, 29, 30, 42, 60, 69, 70, 84, 91, 102], "competit": [2, 4, 8, 11, 14, 21, 26, 27, 28, 29, 30, 69, 70, 89, 90], "us": [2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 35, 37, 39, 40, 44, 46, 47, 48, 49, 50, 53, 56, 58, 60, 61, 64, 68, 70, 73, 78, 84, 87, 88, 89, 90, 91, 93, 95, 96, 98, 101, 102, 106, 108, 109, 111, 112, 120, 128, 131, 136, 139, 140, 141, 142], "mode": [2, 24, 32, 68, 85, 108, 111, 120, 128, 140, 142], "For": [2, 4, 5, 8, 14, 26, 27, 28, 29, 32, 68, 104, 108, 112, 120, 122, 128, 130, 133, 137, 138, 139, 140], "we": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 35, 73, 87, 120, 133, 136, 139, 140], "predict": [2, 4, 5, 8, 9, 10, 11, 27, 28, 31, 68, 72, 92, 103, 120, 125, 126, 127, 128, 129, 130, 131, 132, 142], "5": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 68, 70, 84, 85, 86, 87, 89, 90, 91, 97, 98, 99, 100, 104, 120], "regress": [2, 5, 8, 24, 25, 30, 33, 71, 72, 85, 92, 97, 105, 113, 120, 125, 133, 141, 142], "target": [2, 4, 5, 8, 9, 10, 15, 17, 18, 20, 23, 24, 27, 28, 29, 31, 46, 54, 63, 68, 69, 71, 72, 76, 78, 79, 81, 82, 113, 114, 120, 121, 122, 125, 126, 129, 130, 131, 135, 141, 142], "correspond": [2, 5, 8, 12, 21, 29, 30, 31, 37, 40, 68, 69, 70, 71, 78, 79, 81, 112, 114, 119, 120, 121, 129], "each": [2, 4, 8, 9, 10, 11, 12, 14, 16, 17, 19, 21, 22, 26, 29, 30, 31, 36, 37, 38, 42, 47, 51, 53, 55, 56, 60, 64, 65, 67, 68, 69, 70, 71, 73, 75, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 108, 111, 113, 114, 120, 122, 124, 126, 127, 128, 132], "The": [2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 18, 20, 21, 26, 27, 29, 30, 31, 32, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 59, 68, 70, 72, 73, 78, 84, 87, 89, 90, 91, 93, 94, 95, 96, 98, 100, 104, 106, 107, 108, 109, 111, 112, 118, 120, 130, 131, 135, 138, 140], "were": [2, 8, 9, 11, 14, 19, 26, 30, 70, 71, 73, 87, 98, 108, 142], "record": [2, 4, 8, 9, 10, 11, 14, 16, 21, 22, 26, 31, 69, 70, 73, 75, 76, 77, 81, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 100, 101, 112, 113, 114, 121, 122, 123, 142], "time": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 53, 67, 68, 69, 71, 75, 78, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 116, 117, 120, 121, 125, 126, 129, 132, 142], "seri": [2, 4, 5, 8, 9, 10, 29, 30, 31, 68, 72, 78, 81, 98, 99, 120, 122, 126, 142], "25": [2, 5, 8, 9, 11, 12, 13, 14, 16, 27, 29, 30, 31, 32, 70, 84, 85, 86, 87, 89, 90, 93, 94, 97, 99, 108, 141], "hz": [2, 3, 4, 5, 8, 9, 11, 16, 27, 29, 30, 31, 37, 43, 55, 59, 70, 84, 87, 91, 104, 108], "so": [2, 5, 8, 9, 10, 11, 14, 16, 18, 26, 27, 28, 29, 30, 32, 37, 40, 68, 104, 113, 118, 120, 142], "an": [2, 5, 8, 10, 12, 14, 18, 19, 20, 21, 22, 26, 27, 29, 30, 32, 41, 47, 48, 49, 50, 54, 68, 70, 72, 73, 78, 81, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 103, 104, 107, 108, 110, 111, 112, 114, 120, 122, 128, 136, 137, 142], "author": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31, 35, 87, 88, 89, 90, 91, 93, 94], "maciej": [2, 8, 142], "sliwowski": [2, 8], "maciek": [2, 8], "gmail": [2, 5, 8, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31], "com": [2, 3, 5, 8, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31, 76, 77, 140], "moham": [2, 8, 142], "fattouh": [2, 8, 142], "mo": [2, 8], "licens": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31], "bsd": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31], "3": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 44, 46, 47, 61, 63, 64, 68, 69, 70, 73, 75, 84, 85, 89, 90, 91, 92, 95, 98, 102, 120, 121, 122, 131, 138, 141, 142], "claus": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26], "first": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 26, 27, 28, 30, 40, 52, 66, 68, 71, 75, 76, 77, 84, 85, 87, 97, 100, 108, 111, 112, 114, 120, 136, 140], "In": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 20, 21, 26, 27, 28, 29, 30, 32, 37, 44, 46, 47, 48, 49, 50, 52, 55, 61, 63, 64, 66, 68, 70, 108, 109, 112, 120, 133], "avail": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 19, 22, 26, 27, 28, 29, 30, 32, 69, 75, 87, 89, 90, 100, 113, 114, 121, 122], "part": [2, 8, 16, 17, 19, 28, 29, 32, 38, 39, 52, 56, 58, 66, 87, 89, 90], "librari": [2, 3, 4, 8, 24, 26, 28, 29, 30, 35, 69, 140], "http": [2, 4, 5, 8, 12, 18, 26, 27, 28, 29, 30, 35, 46, 63, 68, 69, 75, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 104, 120, 130, 133, 135, 140], "searchwork": [2, 8, 69], "stanford": [2, 8, 69], "edu": [2, 4, 8, 69], "view": [2, 4, 8, 22, 69], "zk881ps0522": [2, 8, 69], "contain": [2, 5, 8, 12, 14, 16, 18, 21, 22, 26, 31, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 52, 55, 63, 64, 66, 68, 69, 71, 74, 75, 78, 112, 113, 114, 120, 121, 122, 123, 129, 130, 136, 142], "signal": [2, 3, 4, 5, 8, 9, 10, 11, 12, 18, 20, 26, 28, 29, 30, 31, 36, 37, 38, 39, 42, 43, 47, 48, 49, 50, 52, 55, 56, 58, 59, 60, 64, 66, 70, 72, 75, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 108, 111, 112, 113, 114, 118, 120, 123, 142], "differ": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 18, 21, 26, 27, 28, 29, 30, 70, 89, 90, 91, 104, 123, 138], "than": [2, 5, 8, 9, 10, 11, 12, 14, 16, 27, 32, 37, 55, 68, 81, 108, 114, 120, 142], "standard": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 32, 36, 44, 47, 48, 49, 50, 61, 64, 112, 117, 142], "setup": [2, 4, 8, 27, 138], "multipl": [2, 3, 4, 8, 9, 10, 14, 15, 16, 21, 23, 24, 27, 29, 30, 68, 71, 76, 91, 103, 104, 108, 112, 113, 118, 120, 131, 141, 142], "trial": [2, 3, 4, 8, 19, 21, 27, 28, 29, 30, 31, 32, 68, 70, 73, 79, 81, 114, 120, 126, 127, 131, 132, 142], "usual": [2, 3, 4, 8, 16, 29, 32, 68, 120], "one": [2, 4, 8, 9, 10, 11, 14, 16, 20, 26, 27, 29, 30, 32, 41, 46, 52, 66, 68, 70, 71, 84, 87, 91, 92, 104, 112, 113, 114, 120, 121, 122, 123, 136], "per": [2, 4, 5, 8, 9, 10, 11, 27, 46, 52, 66, 70, 73, 75, 91, 102, 112, 142], "here": [2, 3, 4, 5, 8, 10, 11, 12, 21, 22, 24, 26, 27, 28, 29, 30, 32, 43, 59, 81, 91, 114], "chang": [2, 5, 8, 14, 18, 31, 45, 68, 112, 120, 128, 140], "ar": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 35, 37, 46, 63, 68, 71, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 112, 113, 114, 118, 120, 123, 125, 129, 136, 138, 139, 140, 142], "sampl": [2, 3, 4, 5, 8, 9, 10, 14, 16, 17, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 55, 58, 59, 60, 66, 68, 70, 72, 73, 75, 79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 108, 113, 114, 121, 122, 123, 124, 130, 136, 142], "frequenc": [2, 3, 4, 8, 11, 12, 16, 17, 26, 27, 28, 29, 30, 31, 32, 37, 43, 55, 59, 73, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 108, 111, 118, 121, 142], "equal": [2, 8, 32, 79, 80, 81, 92, 105, 113], "If": [2, 8, 14, 18, 19, 22, 26, 29, 30, 32, 35, 37, 46, 68, 69, 70, 71, 73, 74, 75, 76, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 128, 129, 130, 131, 136, 140], "pleas": [2, 3, 4, 5, 8, 11, 12, 22, 26, 27, 28, 29, 30, 32, 69, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 118, 140, 142], "cite": [2, 8, 69], "1": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 30, 31, 33, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 63, 64, 66, 68, 69, 70, 71, 73, 75, 76, 77, 82, 84, 85, 89, 90, 91, 92, 95, 97, 98, 100, 102, 104, 105, 108, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 130, 131, 132, 135, 141], "miller": [2, 8, 27, 28, 29, 30, 69], "kai": [2, 8, 69], "j": [2, 4, 5, 8, 26, 27, 28, 29, 30, 31, 37, 40, 42, 44, 52, 55, 57, 60, 61, 66, 69, 85, 88, 93, 94, 96, 97, 99, 101, 102, 135], "A": [2, 3, 4, 5, 8, 9, 10, 16, 27, 28, 29, 30, 31, 34, 36, 38, 39, 42, 54, 56, 58, 60, 68, 69, 71, 74, 76, 77, 86, 89, 90, 91, 93, 94, 98, 99, 102, 108, 112, 113, 114, 119, 120, 123, 131, 135, 142], "human": [2, 8, 26, 31, 35, 40, 57, 69, 85, 96, 97, 108, 135], "electrocorticograph": [2, 8, 69], "analys": [2, 8, 29, 30, 69], "natur": [2, 8, 14, 69], "behaviour": [2, 8, 69], "11": [2, 3, 4, 5, 8, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 27, 28, 29, 31, 32, 33, 69, 86, 141], "2019": [2, 8, 31, 69], "1225": [2, 8, 69], "1235": [2, 8, 69], "doi": [2, 8, 10, 26, 27, 28, 29, 30, 35, 69, 84, 85, 88, 89, 90, 96, 97, 98, 100, 102, 135], "org": [2, 4, 5, 8, 26, 27, 28, 29, 30, 35, 46, 63, 68, 69, 75, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 104, 120, 130, 133, 135], "10": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 40, 47, 48, 49, 50, 64, 68, 69, 84, 85, 87, 88, 89, 90, 96, 97, 98, 100, 102, 108, 112, 120, 121, 135, 141], "1038": [2, 8, 69], "s41562": [2, 8, 69], "019": [2, 8, 69, 98], "0678": [2, 8, 69], "import": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 42, 60, 136, 140], "copi": [2, 11, 16, 42, 60, 69, 106, 136], "numpi": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 17, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 64, 68, 108, 111, 120, 133, 135], "np": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 26, 29, 31, 32, 68, 116, 117, 120, 121, 122, 123, 124, 131], "sklearn": [2, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 30, 31, 68, 120, 128, 135, 142], "from": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 42, 46, 47, 48, 49, 50, 56, 58, 60, 64, 68, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 112, 113, 114, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 138, 141, 142], "mne": [2, 3, 4, 8, 9, 10, 11, 12, 14, 15, 17, 18, 20, 22, 23, 24, 25, 28, 30, 33, 47, 64, 69, 71, 72, 75, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 120, 136, 141, 142], "set_log_level": [2, 8, 12, 14, 22], "bcicompetitionivdataset4": [2, 8, 142], "subject_id": [2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 27, 28, 29, 30, 32, 69, 70, 73, 74, 75, 142], "can": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 26, 27, 28, 29, 30, 32, 35, 43, 47, 64, 68, 71, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 111, 112, 120, 131, 138, 139, 142], "easili": [2, 8, 20, 26, 28, 29, 30, 32, 122], "addit": [2, 8, 12, 17, 20, 21, 26, 28, 29, 30, 32, 44, 61, 68, 70, 71, 72, 78, 81, 114, 120, 135], "info": [2, 3, 4, 8, 12, 14, 16, 17, 19, 20, 21, 26, 27, 28, 29, 30, 32, 71, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 108, 109, 112, 122, 124, 136, 142], "store": [2, 4, 8, 9, 10, 11, 12, 14, 18, 22, 28, 29, 30, 32, 69, 71, 82, 142], "descript": [2, 5, 8, 12, 17, 18, 19, 20, 22, 27, 28, 29, 30, 32, 69, 70, 71, 72, 76, 77, 78, 81, 82, 84, 87, 89, 91, 93, 94, 95, 96, 98, 104, 113, 114], "attribut": [2, 8, 26, 28, 29, 30, 32, 68, 72, 78, 110, 120, 142], "case": [2, 8, 16, 21, 26, 27, 28, 29, 30, 32, 68, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 120, 133, 139, 142], "session": [2, 4, 8, 12, 18, 20, 21, 27, 28, 29, 30, 31, 32, 70, 73, 122], "column": [2, 8, 19, 21, 22, 27, 28, 29, 30, 32, 71, 78, 82, 92, 121, 122, 135], "select": [2, 4, 8, 9, 16, 20, 27, 28, 29, 30, 32, 37, 73, 112, 121], "valid": [2, 21, 26, 27, 31, 32, 68, 100, 112, 113, 114, 120, 128, 129, 142], "final": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 26, 27, 28, 29, 30, 32, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 117], "evalu": [2, 3, 4, 5, 8, 9, 10, 11, 14, 21, 27, 28, 30, 101], "train_set": [2, 3, 4, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32], "test_set": [2, 8, 29, 31, 32], "now": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 22, 26, 27, 28, 30, 112, 140, 142], "appli": [2, 3, 4, 5, 8, 9, 10, 12, 16, 18, 19, 20, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 72, 78, 98, 99, 103, 108, 110, 112, 118, 119, 120, 130, 142], "like": [2, 8, 16, 26, 28, 29, 30, 32, 37, 42, 47, 55, 60, 64, 68, 79, 80, 81, 100, 108, 109, 120, 122, 140, 142], "bandpass": [2, 3, 4, 8, 20, 27, 28, 29, 30, 32, 70, 108, 118], "filter": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 20, 26, 27, 28, 29, 30, 32, 37, 55, 70, 84, 85, 87, 89, 90, 91, 94, 97, 99, 101, 102, 104, 110, 111, 118, 142], "our": [2, 5, 8, 9, 10, 11, 12, 16, 20, 26, 27, 28, 30, 32, 73, 138], "either": [2, 8, 26, 28, 29, 30, 68, 70, 71, 73, 92, 108, 112, 120, 131], "provid": [2, 8, 9, 10, 11, 26, 28, 30, 32, 35, 68, 70, 71, 72, 76, 77, 103, 108, 109, 110, 119, 120, 136], "raw": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 71, 72, 75, 76, 77, 81, 86, 106, 107, 108, 109, 110, 112, 113, 114, 118, 137, 142], "epoch": [2, 3, 4, 5, 8, 9, 10, 11, 14, 19, 24, 25, 27, 28, 29, 30, 31, 32, 33, 68, 71, 78, 80, 81, 92, 97, 106, 107, 108, 109, 110, 112, 113, 114, 120, 123, 126, 127, 128, 141, 142], "your": [2, 3, 4, 8, 14, 16, 21, 24, 25, 27, 28, 30, 33, 35, 68, 71, 74, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 110, 114, 117, 119, 120, 133, 136, 138, 141], "own": [2, 8, 27, 28, 29, 30, 32, 73, 136], "object": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 18, 19, 21, 27, 28, 29, 30, 31, 32, 41, 72, 75, 76, 77, 78, 81, 106, 110, 113, 114, 119, 135, 142], "underli": [2, 5, 8, 28, 30, 110], "arrai": [2, 4, 8, 11, 17, 22, 26, 28, 29, 30, 37, 47, 54, 55, 64, 68, 79, 80, 81, 108, 109, 110, 111, 120, 124, 131, 135], "step": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 18, 22, 28, 29, 30, 32, 81, 114, 136], "taken": [2, 5, 8, 14], "process": [2, 4, 5, 7, 8, 13, 14, 15, 16, 22, 24, 29, 30, 71, 76, 110, 113, 119, 141, 142], "pipelin": [2, 5, 8, 29, 32], "onli": [2, 4, 5, 8, 9, 10, 11, 12, 14, 18, 19, 21, 26, 27, 29, 30, 32, 41, 54, 68, 73, 75, 81, 88, 89, 90, 91, 93, 94, 106, 108, 109, 111, 112, 114, 120, 129, 136, 140, 142], "cutoff": [2, 8, 16, 108], "proper": [2, 8], "other": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 18, 26, 29, 30, 32, 54, 68, 73, 75, 84, 85, 86, 92, 95, 96, 97, 98, 99, 100, 101, 104, 120], "mai": [2, 3, 4, 5, 8, 9, 10, 11, 16, 18, 19, 27, 28, 29, 32, 35, 68, 120, 128, 133, 136], "need": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 26, 27, 28, 29, 32, 68, 84, 87, 91, 120, 133, 138, 142], "These": [2, 5, 8, 26, 27, 28, 30], "prepocess": [2, 8, 28, 30], "directli": [2, 3, 5, 8, 12, 22, 26, 27, 28, 30, 31, 68, 78, 110, 112, 120, 140], "fly": [2, 8, 28, 30, 72, 78, 142], "transform": [2, 5, 8, 9, 10, 11, 20, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 72, 78, 79, 80, 81, 87, 92, 120, 142], "pytorch": [2, 8, 14, 22, 24, 25, 26, 27, 28, 30, 33, 68, 71, 74, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 110, 114, 117, 119, 120, 131, 133, 139, 141, 142], "torchvis": [2, 8, 28, 30], "preprocessor": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 18, 20, 27, 28, 29, 30, 32, 119, 142], "exponential_moving_standard": [2, 3, 4, 8, 27, 28, 29, 30, 32], "low_cut_hz": [2, 3, 4, 8, 27, 28, 29, 30, 32], "low": [2, 3, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 30, 32, 37, 55, 89, 90, 108], "high_cut_hz": [2, 3, 4, 5, 8, 9, 10, 27, 28, 29, 30, 32], "200": [2, 8, 10, 11, 14, 85], "high": [2, 3, 4, 8, 11, 27, 28, 29, 30, 32, 37, 55, 73, 89, 90, 104, 108, 121], "higher": [2, 5, 8, 32, 100], "paramet": [2, 3, 4, 5, 8, 10, 14, 16, 17, 18, 19, 26, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 135, 142], "exponenti": [2, 3, 4, 8, 27, 28, 29, 30, 32, 104, 116, 117], "move": [2, 3, 4, 8, 14, 16, 27, 28, 29, 30, 32, 69, 92, 116, 117, 142], "factor_new": [2, 3, 4, 8, 27, 28, 29, 30, 32, 116, 117], "1e": [2, 3, 4, 8, 9, 10, 11, 27, 28, 29, 30, 32], "init_block_s": [2, 3, 4, 8, 27, 28, 29, 30, 32, 116, 117], "1000": [2, 3, 4, 8, 12, 22, 26, 27, 28, 29, 30, 32, 73, 89, 90, 122], "30": [2, 5, 8, 9, 10, 11, 16, 18, 27, 31, 75, 97, 98, 99, 100, 104], "second": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 30, 31, 32, 40, 70, 73, 76, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 106], "limit": [2, 5, 8, 11, 12, 16, 26, 106], "memori": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 68, 114, 120], "run": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 68, 70, 73, 81, 84, 87, 91, 98, 108, 110, 111, 114, 120, 122, 133, 136, 140, 142], "6": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 70, 73, 87, 108, 141], "To": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 108, 139, 140], "obtain": [2, 3, 4, 5, 8, 9, 11, 27, 28, 47, 64, 68, 72, 73, 78, 120, 122], "whole": [2, 8, 9, 10], "should": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 20, 26, 27, 28, 30, 37, 40, 47, 52, 55, 64, 66, 68, 69, 71, 72, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 106, 108, 109, 111, 112, 120, 128, 136, 140], "valid_set": [2, 3, 8, 9, 10, 11, 27, 28, 31], "deepcopi": 2, "tmin": [2, 8, 12, 16, 19, 106], "24": [2, 5, 9, 10, 11, 12, 16, 18, 27, 32, 98, 102, 109, 141], "tmax": [2, 8, 12, 106], "n_job": [2, 3, 4, 5, 12, 14, 16, 27, 28, 29, 30, 32, 76, 77, 82, 108, 111, 113, 114, 115, 119, 142], "0": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 42, 44, 45, 46, 54, 56, 58, 60, 63, 68, 70, 71, 75, 76, 77, 81, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 104, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 120, 122, 131, 135, 141], "baseconcatdataset": [2, 5, 9, 10, 12, 14, 16, 21, 31, 68, 79, 80, 81, 82, 113, 114, 119, 120, 122, 131, 142], "0x7fe224907fa0": 2, "variabl": [2, 4, 8, 29, 30, 69, 133], "channel": [2, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 56, 57, 58, 59, 60, 61, 63, 64, 66, 75, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 112, 113, 114, 118, 142], "type": [2, 3, 4, 8, 11, 26, 27, 28, 29, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 52, 63, 68, 71, 73, 79, 80, 81, 82, 91, 92, 103, 105, 108, 109, 111, 112, 113, 114, 116, 117, 119, 120, 122, 124, 130, 132, 135, 142], "misc": [2, 4, 8, 78], "thu": [2, 4, 8, 106], "those": [2, 4, 5, 8, 12, 68, 108, 109, 120], "have": [2, 4, 5, 8, 11, 12, 14, 16, 17, 19, 21, 26, 27, 28, 29, 30, 32, 47, 52, 64, 66, 68, 79, 80, 81, 91, 110, 112, 113, 120, 128, 136, 139, 140, 142], "further": [2, 4, 5, 8, 9, 10, 11, 27, 29, 32, 68, 120], "howev": [2, 3, 4, 5, 8, 11, 14, 16, 21, 26, 27, 28, 29, 114], "mani": [2, 4, 5, 8, 16, 26, 27, 29, 32, 71], "ignor": [2, 4, 8, 52, 68, 84, 87, 91, 107, 110, 113, 114, 120, 123], "perform": [2, 4, 8, 9, 10, 11, 26, 27, 28, 29, 30, 32, 70, 71, 73, 84, 87, 91, 100, 116, 117, 142], "oper": [2, 3, 4, 8, 16, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 106, 111], "see": [2, 3, 4, 5, 8, 9, 10, 11, 16, 18, 20, 21, 24, 26, 27, 28, 29, 30, 32, 46, 63, 68, 69, 70, 73, 75, 77, 78, 88, 92, 93, 94, 96, 101, 102, 106, 107, 108, 109, 111, 112, 113, 114, 119, 120, 121, 123, 124, 130, 133, 136, 139, 140], "tool": [2, 4, 8, 75, 137, 140], "stabl": [2, 4, 5, 8, 16, 26, 68, 75, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 120, 133, 135], "glossari": [2, 4, 8], "html": [2, 4, 5, 8, 12, 18, 26, 27, 68, 75, 76, 77, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 120, 133, 135], "term": [2, 4, 8, 86, 92], "todo": 2, "ensur": [2, 104, 133, 139], "remov": [2, 3, 4, 5, 8, 9, 11, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 112, 132, 142], "pick_typ": [2, 3, 4, 8, 20, 27, 28, 29, 30, 32, 107], "true": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 46, 47, 48, 49, 50, 68, 71, 72, 75, 76, 77, 78, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 110, 112, 113, 114, 115, 118, 120, 123, 124, 126, 127, 128, 131, 133, 142], "lambda": [2, 3, 4, 5, 8, 9, 10, 12, 27, 28, 29, 30, 32, 68, 95, 120], "x": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 80, 81, 84, 86, 87, 91, 96, 98, 99, 100, 101, 102, 103, 104, 111, 116, 117, 120, 125, 128, 129, 131], "1e6": [2, 3, 4, 5, 8, 9, 10, 12, 27, 28, 29, 30, 32], "pick": [2, 8, 10, 12, 19, 20, 108, 113, 114, 115, 142], "convert": [2, 3, 4, 5, 8, 9, 10, 12, 17, 19, 27, 28, 29, 30, 31, 32, 108], "v": [2, 3, 4, 5, 8, 9, 10, 12, 16, 27, 28, 29, 30, 32, 89, 90, 93, 94, 101], "uv": [2, 3, 4, 5, 8, 9, 10, 12, 27, 28, 29, 30, 32], "l_freq": [2, 3, 4, 5, 8, 9, 10, 16, 27, 28, 29, 30, 32, 108], "h_freq": [2, 3, 4, 5, 8, 9, 10, 16, 27, 28, 29, 30, 32, 108], "extract": [2, 8, 12, 14, 16, 17, 19, 22, 27, 32, 78, 89, 90, 91, 98, 100, 113, 114, 121, 123], "check": [2, 3, 4, 8, 9, 10, 11, 26, 27, 28, 29, 30, 32, 35, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 104, 136, 139, 142], "thei": [2, 3, 4, 8, 14, 16, 26, 27, 28, 29, 30, 32, 112, 142], "same": [2, 3, 4, 5, 8, 9, 10, 11, 14, 18, 21, 27, 28, 29, 30, 32, 43, 52, 59, 66, 68, 73, 75, 100, 120, 123], "all": [2, 3, 4, 8, 12, 14, 16, 24, 26, 27, 28, 29, 30, 32, 43, 44, 52, 59, 61, 66, 68, 69, 70, 73, 74, 75, 84, 87, 89, 90, 91, 92, 106, 108, 109, 111, 112, 113, 114, 120, 128, 141, 142], "sfreq": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 32, 37, 43, 55, 59, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 108, 120, 142], "assert": [2, 3, 4, 8, 12, 14, 27, 28, 29, 30, 32], "d": [2, 3, 4, 5, 8, 12, 14, 22, 26, 27, 28, 29, 30, 31, 32, 38, 39, 42, 56, 58, 60, 84, 85, 94, 96, 97, 98, 102, 123, 135, 142], "target_sfreq": [2, 8], "temp": [2, 8], "home": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32], "runner": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32], "work": [2, 3, 4, 5, 8, 9, 10, 12, 16, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 68, 92, 104, 106, 120, 128, 137, 139, 142], "py": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 141], "55": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 32], "userwarn": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 18, 19, 26, 27, 28, 29, 30, 31, 32], "choic": [2, 3, 4, 5, 8, 9, 10, 12, 27, 28, 29, 30, 32, 87, 142], "cannot": [2, 3, 4, 5, 8, 9, 10, 11, 12, 27, 28, 29, 30, 32, 68, 106, 120], "save": [2, 3, 4, 5, 8, 9, 10, 12, 14, 15, 16, 23, 24, 27, 28, 29, 30, 32, 68, 71, 74, 82, 110, 114, 119, 120, 141, 142], "warn": [2, 3, 4, 5, 8, 9, 10, 12, 14, 16, 18, 19, 26, 27, 28, 29, 30, 31, 32, 70, 100, 107, 113, 114, 133, 142], "contrast": [2, 4, 5, 27, 37, 44, 52, 55, 61, 66], "trialwis": [2, 4, 8, 20, 27, 28, 30, 68, 120, 131, 142], "befor": [2, 11, 16, 27, 28, 29, 30, 32, 68, 71, 72, 75, 78, 84, 85, 86, 87, 98, 99, 100, 116, 117, 120, 128, 133, 139, 142], "becaus": [2, 16, 26, 27, 29, 30, 136], "know": [2, 3, 4, 26, 27], "recept": [2, 27, 68, 120, 131], "field": [2, 27, 68, 112, 120, 131], "network": [2, 4, 5, 7, 8, 10, 13, 14, 25, 26, 27, 28, 29, 32, 33, 35, 44, 61, 68, 71, 72, 75, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 113, 114, 119, 120, 122, 124, 125, 131, 133, 135, 141, 142], "larg": [2, 5, 14, 16, 26, 27, 71, 114], "stride": [2, 9, 10, 11, 26, 27, 79, 80, 81, 85, 87, 92, 97, 102, 113, 114], "choos": [2, 3, 4, 8, 18, 27, 28, 29, 30, 32], "input": [2, 3, 4, 8, 10, 11, 14, 21, 26, 27, 28, 29, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 120, 142], "size": [2, 3, 4, 5, 11, 14, 16, 26, 27, 28, 29, 30, 31, 32, 37, 52, 55, 66, 68, 79, 80, 81, 84, 87, 89, 90, 91, 92, 98, 99, 101, 102, 104, 105, 108, 111, 113, 114, 120, 123, 125, 129, 131, 135], "fed": [2, 27, 48, 49, 50], "dure": [2, 4, 5, 8, 9, 10, 11, 12, 14, 27, 28, 29, 30, 32, 68, 69, 108, 112, 120, 142], "ha": [2, 3, 4, 5, 8, 10, 12, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 48, 49, 50, 68, 71, 72, 75, 78, 81, 88, 89, 90, 91, 93, 94, 104, 108, 114, 120, 130, 136, 142], "larger": [2, 5, 27, 89, 90], "otherwis": [2, 14, 27, 29, 31, 81, 114], "chosen": [2, 16, 18, 27, 32, 52, 68, 108, 120, 131], "effici": [2, 3, 16, 27], "explan": [2, 27, 118, 119], "begin": [2, 27, 29, 30, 70, 98, 108, 113], "which": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 19, 20, 21, 24, 26, 27, 29, 30, 32, 35, 36, 39, 42, 47, 58, 60, 64, 68, 71, 72, 73, 78, 92, 100, 103, 108, 111, 112, 120, 122, 123, 124, 136], "rate": [2, 5, 14, 27, 28, 29, 30, 31, 32, 68, 73, 87, 89, 90, 98, 99, 100, 104, 120, 142], "input_window_sampl": [2, 3, 4, 8, 14, 26, 27, 28, 29, 30, 31, 32, 85, 87, 88, 89, 90, 93, 94, 95, 96, 97, 102, 105], "come": [2, 8, 14, 28, 30, 32, 124, 133], "some": [2, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 26, 27, 28, 30, 35, 68, 71, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 112, 120, 133], "predefin": [2, 8, 28, 30], "convolut": [2, 5, 8, 9, 11, 24, 25, 26, 27, 28, 29, 30, 33, 35, 42, 44, 60, 61, 71, 72, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 104, 105, 113, 125, 133, 135, 141, 142], "neural": [2, 4, 5, 8, 9, 10, 11, 14, 25, 26, 27, 28, 29, 33, 35, 44, 61, 71, 72, 85, 86, 87, 89, 90, 91, 92, 96, 97, 98, 99, 100, 102, 105, 113, 125, 133, 135, 141, 142], "architectur": [2, 5, 8, 9, 10, 11, 26, 27, 28, 30, 68, 86, 87, 98, 99, 100, 104, 120, 137], "domain": [2, 4, 8, 16, 28, 30, 43, 59, 104, 108, 111], "shallow": [2, 8, 14, 26, 27, 28, 31, 97], "convnet": [2, 8, 26, 27, 28, 85, 96, 97], "visual": [2, 8, 9, 10, 11, 12, 26, 27, 28, 30, 31, 35, 73, 85, 87, 96, 97, 137, 142], "pure": [2, 5, 8, 28, 30, 142], "therefor": [2, 8, 12, 16, 27, 28, 29, 30, 32, 128], "just": [2, 4, 8, 22, 26, 28, 29, 30, 68, 85, 97, 120], "normal": [2, 5, 8, 9, 10, 28, 30, 98, 99, 122, 135, 142], "nn": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 32, 68, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 103, 104, 120, 131], "modul": [2, 4, 5, 8, 9, 10, 11, 14, 26, 28, 30, 32, 68, 84, 87, 89, 90, 91, 100, 103, 120, 131, 133, 135, 139, 142], "torch": [2, 3, 4, 5, 8, 9, 10, 11, 14, 22, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 120, 125, 129, 130, 131, 133, 142], "shallowfbcspnet": [2, 3, 4, 8, 14, 26, 27, 28, 29, 30, 31, 32], "util": [2, 3, 4, 5, 8, 9, 10, 11, 14, 18, 22, 26, 27, 28, 30, 31, 32, 68, 120, 142], "set_random_se": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 142], "cuda": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 68, 108, 111, 120, 133, 139], "is_avail": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32], "gpu": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 32, 68, 120, 139, 142], "devic": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 36, 68, 120, 142], "els": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 27, 28, 29, 30, 31, 32, 68, 120], "cpu": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 32, 68, 120], "backend": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 133, 142], "cudnn": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 133, 142], "benchmark": [2, 3, 4, 5, 8, 9, 10, 11, 15, 23, 24, 27, 28, 29, 30, 31, 32, 71, 75, 77, 85, 97, 110, 113, 119, 133, 141, 142], "set": [2, 4, 8, 9, 10, 11, 12, 14, 16, 17, 19, 22, 26, 27, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 63, 68, 70, 71, 73, 85, 89, 90, 91, 97, 98, 99, 102, 104, 106, 109, 112, 113, 114, 120, 133, 139, 142], "random": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 30, 31, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 73, 121, 122, 123, 124, 128, 133, 142], "seed": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 61, 133], "abl": [2, 3, 4, 5, 8, 9, 10, 11, 12, 27, 28, 30, 68, 120, 136], "roughli": [2, 3, 4, 5, 8, 9, 11, 27, 28, 73], "reproduc": [2, 3, 4, 5, 8, 9, 10, 11, 24, 27, 28, 30, 133, 142], "note": [2, 3, 4, 5, 8, 9, 11, 17, 20, 26, 27, 28, 43, 59, 68, 69, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 109, 112, 120, 128, 133], "indetermin": [2, 3, 4, 5, 8, 9, 11, 27, 28], "still": [2, 3, 4, 5, 8, 9, 11, 27, 28, 29, 73], "make": [2, 3, 4, 5, 8, 9, 11, 12, 27, 28, 29, 30, 32, 100, 108, 136, 142], "substanti": [2, 3, 4, 5, 8, 9, 10, 11, 14, 19, 27, 28], "between": [2, 3, 4, 5, 8, 9, 11, 26, 27, 28, 29, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 54, 55, 56, 58, 60, 63, 70, 79, 80, 81, 85, 87, 97, 98, 106, 113, 114, 124, 129], "consist": [2, 3, 4, 5, 8, 9, 11, 27, 28, 48, 49, 50, 70, 73], "cost": [2, 3, 4, 5, 8, 9, 11, 27, 28], "increas": [2, 3, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 32, 91, 100], "cudnn_benchmark": [2, 3, 4, 5, 8, 9, 11, 27, 28, 133], "fals": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 42, 46, 47, 48, 49, 50, 60, 64, 68, 69, 71, 72, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 92, 97, 98, 99, 100, 101, 104, 106, 110, 112, 113, 114, 115, 118, 119, 120, 123, 124, 126, 127, 133, 135, 142], "20200220": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "n_class": [2, 3, 4, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 32, 68, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 120, 125, 129, 131], "number": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 22, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 61, 64, 66, 68, 71, 75, 76, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 108, 111, 113, 114, 118, 119, 120, 121, 122, 123, 124, 131, 132], "chan": [2, 3, 4, 8, 27, 28, 29, 30, 32, 73], "n_chan": [2, 8, 11, 26, 27, 28, 30, 31, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 120], "shape": [2, 3, 4, 5, 8, 9, 10, 11, 17, 20, 22, 26, 27, 28, 29, 30, 32, 47, 64, 68, 86, 87, 92, 96, 98, 99, 100, 101, 102, 103, 104, 105, 124, 125, 129], "final_conv_length": [2, 3, 4, 8, 14, 26, 27, 28, 29, 30, 31, 32, 85, 93, 94, 97, 142], "2": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 30, 31, 33, 37, 38, 39, 42, 43, 44, 46, 52, 55, 60, 61, 63, 66, 68, 70, 73, 75, 84, 85, 89, 90, 92, 93, 94, 95, 98, 100, 102, 104, 108, 112, 117, 120, 121, 122, 130, 131, 141], "add_log_softmax": [2, 8, 26, 31, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104], "send": [2, 3, 4, 8, 9, 10, 11, 16, 27, 28, 29, 30, 32], "get_output_shap": [2, 27, 31, 92, 142], "to_dense_prediction_model": [2, 27, 31, 92, 142], "local": [2, 5, 10, 11, 14, 18, 27, 31, 32, 69, 112, 136, 140], "lib": [2, 5, 10, 11, 18, 27, 31, 32], "python3": [2, 5, 10, 11, 18, 27, 31, 32], "site": [2, 5, 10, 11, 18, 27, 31, 32], "packag": [2, 5, 10, 11, 18, 27, 31, 32, 35, 138, 139], "deprec": [2, 5, 10, 19, 31, 89, 142], "86": [2, 5, 11, 16, 18, 31], "futurewarn": [2, 26, 30, 31, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104], "version": [2, 3, 4, 5, 9, 10, 18, 20, 21, 22, 29, 30, 31, 68, 87, 92, 106, 107, 108, 109, 111, 112, 120, 136, 138, 139, 140], "eegmodulemixin": [2, 31, 142], "method": [2, 4, 5, 8, 12, 16, 21, 26, 29, 31, 32, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 68, 69, 71, 72, 78, 84, 86, 87, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 110, 112, 120, 121, 122, 123, 125, 126, 127, 128, 129, 142], "msg": [2, 31], "categori": [2, 4, 31], "calcul": [2, 3, 4, 27, 28, 29, 30, 32, 68, 102, 120], "output": [2, 3, 4, 5, 11, 12, 14, 21, 26, 27, 28, 29, 30, 31, 32, 68, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 111, 112, 113, 114, 120], "dummi": [2, 27], "n_preds_per_input": [2, 27, 31], "create_fixed_length_window": [2, 5, 12, 14, 16, 22, 31, 142], "It": [2, 3, 4, 8, 9, 10, 11, 18, 27, 28, 29, 30, 32, 42, 60, 68, 71, 78, 81, 100, 114, 120, 137], "defin": [2, 5, 9, 10, 11, 12, 14, 20, 21, 27, 28, 30, 40, 54, 57, 68, 78, 84, 87, 91, 102, 114, 120, 123], "start_offset_sampl": [2, 14, 22, 31, 113], "stop_offset_sampl": [2, 14, 22, 31, 113, 142], "none": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 22, 26, 27, 28, 29, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 135, 142], "window_size_sampl": [2, 5, 8, 9, 10, 11, 12, 14, 17, 19, 22, 27, 31, 79, 80, 81, 113, 114, 115], "window_stride_sampl": [2, 5, 9, 10, 11, 12, 14, 17, 19, 22, 27, 31, 79, 80, 81, 113, 114], "drop_last_window": [2, 12, 14, 17, 19, 22, 27, 31, 79, 80, 81, 113, 114], "targets_from": [2, 78, 113, 120], "last_target_onli": [2, 8, 78, 113, 115], "preload": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 27, 28, 29, 30, 31, 32, 75, 76, 77, 81, 82, 112, 113, 114, 115, 119, 142], "thumb": [2, 8, 27], "": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 21, 22, 26, 27, 28, 30, 31, 32, 40, 42, 44, 47, 48, 49, 50, 57, 60, 61, 64, 68, 69, 70, 72, 73, 74, 75, 76, 77, 84, 90, 91, 93, 94, 99, 101, 104, 107, 108, 110, 112, 120, 121, 125, 128, 129], "consid": [2, 4, 29, 32, 48, 49, 50, 68, 120, 128], "well": [2, 5, 8, 12, 26, 27, 28, 29, 32, 81, 114, 137, 142], "encourag": [2, 8, 24, 27, 28], "find": [2, 4, 8, 30], "wai": [2, 5, 8, 16, 21, 24, 26, 29, 100, 138, 140], "target_transform": [2, 8, 9, 10, 71, 142], "suppli": [2, 3, 5, 8, 9, 10, 11, 27, 28, 29], "eegclassifi": [2, 5, 9, 10, 11, 26, 27, 28, 29, 30, 142], "croppedloss": [2, 27, 31], "criterion": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 68, 120], "criterion__loss_funct": [2, 27, 31], "loss": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 32, 68, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 120, 125, 129, 130], "mean": [2, 3, 4, 8, 10, 12, 14, 16, 19, 26, 27, 29, 30, 31, 32, 73, 85, 94, 97, 112, 116, 117, 120, 136], "default": [2, 8, 11, 12, 27, 28, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 68, 69, 75, 76, 77, 78, 81, 84, 85, 87, 89, 90, 91, 92, 106, 107, 108, 109, 111, 112, 114, 120, 128, 133, 142], "found": [2, 8, 10, 12, 16, 18, 19, 20, 21, 26, 27, 28, 29, 30, 32, 69, 112, 113, 114], "motor": [2, 4, 8, 27, 28, 70, 73, 84, 88, 91, 142], "strongli": [2, 8, 18, 27, 28, 89, 90, 91], "hyperparamet": [2, 5, 8, 9, 10, 11, 14, 24, 25, 27, 28, 32, 33, 46, 68, 71, 74, 92, 97, 110, 114, 117, 119, 120, 133, 141, 142], "optim": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 68, 73, 120], "cross": [2, 8, 16, 27, 28, 70], "skorch": [2, 3, 4, 5, 8, 9, 10, 11, 17, 26, 27, 28, 29, 30, 31, 68, 79, 80, 81, 120, 142], "callback": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 68, 120, 128], "lrschedul": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "helper": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31], "predefined_split": [2, 3, 5, 8, 9, 10, 11, 27, 28, 29, 31], "eegregressor": [2, 8, 26, 31, 142], "croppedtimeseriesepochscor": 2, "timeseriesloss": 2, "valu": [2, 4, 5, 8, 9, 10, 11, 12, 26, 27, 28, 30, 31, 32, 43, 46, 63, 68, 71, 72, 78, 81, 91, 102, 108, 109, 111, 112, 113, 114, 120, 129, 130, 131, 142], "good": [2, 8, 26, 27, 28], "mi": [2, 8], "lr": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 68, 120], "0625": [2, 3, 4, 8, 27, 28, 29, 32], "01": [2, 3, 4, 6, 8, 12, 16, 18, 23, 26, 27, 28, 29, 32, 33, 68, 89, 90, 120, 141], "weight_decai": [2, 3, 4, 8, 27, 28, 29, 32], "batch_siz": [2, 3, 4, 5, 8, 9, 10, 11, 14, 22, 27, 28, 29, 30, 31, 32, 37, 46, 47, 55, 63, 64, 68, 86, 87, 92, 96, 98, 99, 100, 101, 102, 103, 105, 120, 125, 129, 131, 134], "27": [2, 4, 9, 11, 16, 18, 27, 29, 73], "64": [2, 3, 4, 8, 10, 11, 14, 16, 17, 19, 27, 28, 29, 30, 32, 84, 94, 99], "n_epoch": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32], "8": [2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33, 84, 87, 89, 90, 93, 94, 99, 118, 138, 141], "regressor": [2, 8, 26, 31, 142], "aggregate_predict": [2, 68, 120], "mse_loss": [2, 31], "adamw": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "train_split": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31, 68, 120], "optimizer__lr": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 68, 120], "optimizer__weight_decai": [2, 3, 4, 8, 27, 28, 29, 31], "iterator_train__shuffl": [2, 5, 9, 10, 11, 27, 31, 68, 120], "lr_schedul": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "cosineannealinglr": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "t_max": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "r2_train": 2, "metric": [2, 5, 9, 10, 11, 27, 28, 32, 135], "r2_score": 2, "lower_is_bett": [2, 5, 8, 9, 10, 11, 126, 127, 128], "on_train": [2, 5, 8, 9, 10, 11, 126, 127], "r2_valid": 2, "verbos": [2, 3, 4, 8, 29, 30, 68, 69, 106, 108, 109, 111, 112, 113, 114, 115, 120, 142], "specifi": [2, 3, 5, 8, 9, 10, 11, 12, 18, 21, 22, 26, 27, 28, 29, 68, 69, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 108, 112, 119, 120], "y": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 80, 81, 86, 87, 91, 111, 120, 128], "alreadi": [2, 3, 5, 8, 9, 10, 11, 14, 19, 27, 28, 29, 71, 72, 78, 119, 120, 136, 138], "fit": [2, 3, 5, 8, 9, 10, 11, 14, 24, 26, 27, 28, 29, 30, 31, 32, 68, 114, 120], "train_loss": [2, 3, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 68, 120], "valid_loss": [2, 3, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31], "dur": [2, 3, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31], "16": [2, 5, 9, 11, 16, 18, 27, 30, 84, 94, 99, 108], "9037": 2, "3086": 2, "5378": 2, "20": [2, 5, 9, 10, 11, 12, 16, 26, 29, 31, 32, 40, 47, 48, 49, 50, 64, 98, 112], "7324": 2, "0006": [2, 3, 8, 27, 28, 29], "5017": 2, "13": [2, 5, 9, 11, 16, 17, 18, 19, 23, 26, 27, 32, 73, 75, 108, 118, 141], "7539": 2, "7": [2, 3, 4, 5, 9, 10, 11, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 35, 73, 84, 91, 92, 98], "1244": 2, "9596": 2, "18": [2, 3, 4, 5, 6, 11, 12, 16, 18, 23, 27, 29, 91, 141], "0720": 2, "4250": 2, "12": [2, 4, 5, 10, 11, 13, 16, 17, 18, 19, 27, 28, 29, 30, 32, 33, 70, 104, 135, 141], "7768": 2, "7402": 2, "6787": 2, "17": [2, 5, 11, 16, 18, 27, 33, 102], "1870": 2, "0005": [2, 3, 22, 28, 31], "4362": 2, "7970": 2, "3910": 2, "5638": 2, "4409": 2, "0004": 2, "4163": 2, "2712": [2, 10, 27], "1840": 2, "4237": 2, "0095": 2, "0002": [2, 3, 28], "4308": 2, "5735": 2, "9203": 2, "3549": 2, "15": [2, 5, 9, 10, 11, 12, 14, 16, 18, 26, 27, 28, 29, 30, 32, 47, 48, 49, 50, 87, 97, 102, 108, 111], "4436": 2, "0001": [2, 30, 95, 117], "4164": 2, "9": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 32, 70, 73, 89, 91, 104, 112, 141], "8228": 2, "6181": 2, "3132": 2, "14": [2, 5, 8, 9, 11, 16, 17, 18, 19, 27, 28, 32, 73, 108, 133], "7799": 2, "0000": [2, 3, 8, 27, 28, 29, 30, 31], "4309": 2, "0643": 2, "3047": 2, "3316": 2, "0884": 2, "4174": 2, "def": [2, 3, 5, 8, 9, 10, 11, 12, 14, 16, 29, 31, 32], "pad_and_select_predict": 2, "pred": [2, 8, 32, 125, 129, 130, 132], "pad": [2, 9, 10, 11, 27, 99, 108, 111, 142], "constant": 2, "constant_valu": 2, "mask": [2, 5, 52, 66, 129], "isnan": 2, "squeez": [2, 3, 4, 26, 27, 28, 29, 30, 32], "return": [2, 5, 8, 9, 10, 11, 12, 14, 17, 19, 21, 29, 30, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 76, 77, 78, 79, 80, 81, 82, 86, 87, 92, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 128, 130, 131, 132, 135, 142], "t": [2, 4, 5, 11, 17, 19, 26, 27, 28, 29, 30, 31, 32, 42, 60, 68, 69, 70, 85, 96, 97, 104, 106, 116, 117, 120, 133, 135], "preds_train": [2, 8], "y_train": [2, 8, 9, 10, 11, 29], "predict_tri": [2, 68, 120, 142], "return_target": [2, 68, 120, 131], "preds_valid": [2, 8], "y_valid": [2, 8], "preds_test": [2, 8], "y_test": [2, 8, 29], "decreas": [2, 8, 11], "doe": [2, 8, 14, 16, 18, 27, 29, 32, 45, 68, 84, 92, 114, 120, 136], "divers": [2, 4, 8], "caus": [2, 8], "overfit": [2, 8, 9, 10, 11, 29], "better": [2, 5, 8, 10, 14, 16, 27, 28, 29, 32, 87, 128, 142], "improv": [2, 3, 5, 8, 9, 10, 11, 32, 108, 136, 142], "matplotlib": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 31, 135], "pyplot": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 31], "plt": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 31], "panda": [2, 4, 5, 8, 9, 10, 11, 14, 16, 20, 21, 27, 28, 29, 30, 31, 68, 71, 72, 78, 81, 120], "pd": [2, 4, 5, 8, 9, 10, 11, 14, 16, 27, 28, 29, 30, 31, 71, 72, 78, 121, 122, 123, 124], "line": [2, 8, 14, 27, 28, 31, 70, 136], "line2d": [2, 8, 27, 28], "fig": [2, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 30, 31, 135], "ax": [2, 3, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 30, 31, 92], "subplot": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 31], "figsiz": [2, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 31, 135], "set_titl": [2, 8, 16, 31], "arang": [2, 8], "label": [2, 3, 5, 8, 9, 10, 11, 12, 16, 22, 26, 27, 28, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 103, 120, 123, 125, 129, 131, 135], "set_ylabel": [2, 5, 8, 9, 10, 11, 16, 27, 28, 31], "legend": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 31], "set_xlabel": [2, 4, 5, 8, 9, 10, 11, 16, 27, 28, 31], "tight_layout": [2, 4, 5, 8, 9, 10, 11, 27, 28, 30], "correl": [2, 8, 27, 29], "coeffici": [2, 8, 46, 63, 130], "corr_coeff": [2, 8], "dim": [2, 8], "rang": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 26, 27, 28, 29, 31, 32, 42, 60, 69, 118, 135], "append": [2, 8, 12, 14, 16, 27, 28, 31, 68, 108, 120], "corrcoef": [2, 8], "print": [2, 4, 5, 8, 9, 10, 11, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 68, 120, 136], "dimens": [2, 5, 8, 52, 66, 84, 87, 100, 104, 111, 142], "round": [2, 8], "histori": [2, 5, 8, 9, 10, 11, 27, 28, 31, 68, 120], "throughout": [2, 8, 9, 10, 11, 28, 29, 32], "accuraci": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 32, 128, 142], "curv": [2, 8, 28], "results_column": [2, 8, 27, 28], "df": [2, 5, 8, 9, 10, 11, 12, 16, 27, 28], "datafram": [2, 4, 5, 8, 9, 10, 11, 14, 16, 20, 21, 22, 27, 28, 29, 30, 68, 71, 120, 121, 122, 123, 124], "index": [2, 5, 8, 9, 10, 11, 17, 27, 28, 30, 31, 72, 106, 116, 117, 121, 122, 132, 138], "ax1": [2, 5, 8, 9, 10, 11, 27, 28], "loc": [2, 8, 12, 26, 27, 28, 29], "style": [2, 5, 8, 27, 28, 48, 49, 50, 102], "marker": [2, 5, 8, 16, 27, 28], "o": [2, 4, 5, 8, 16, 27, 28, 37, 38, 39, 40, 44, 52, 55, 56, 57, 58, 61, 66, 123], "color": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 135], "tab": [2, 5, 8, 16, 27, 28], "blue": [2, 5, 8, 16, 27, 28], "fontsiz": [2, 8, 12, 27, 28], "tick_param": [2, 5, 8, 12, 27, 28], "axi": [2, 3, 5, 8, 27, 28, 31, 47, 48, 49, 50, 51, 53, 64, 65, 67, 92, 111, 132], "labelcolor": [2, 5, 8, 27, 28], "labels": [2, 8, 12, 27, 28], "ax2": [2, 5, 8, 9, 10, 11, 27, 28], "twinx": [2, 5, 8, 27, 28], "instanti": [2, 3, 4, 8, 14, 26, 27, 28, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 61, 68, 74, 120, 142], "share": [2, 8, 14, 27, 28], "red": [2, 8, 27, 28], "r2": [2, 8], "score": [2, 4, 5, 9, 10, 11, 29, 30, 68, 86, 98, 120, 126, 127, 128, 142], "where": [2, 4, 8, 9, 10, 22, 27, 28, 29, 37, 46, 47, 52, 55, 63, 64, 66, 68, 69, 71, 79, 120, 131, 133, 142], "been": [2, 3, 4, 8, 10, 14, 16, 18, 20, 21, 27, 28, 29, 30, 32, 88, 89, 90, 91, 92, 93, 94, 130, 136, 140, 142], "handl": [2, 3, 4, 8, 27, 28, 30, 112], "black": [2, 8, 12, 27, 28, 70, 73, 135], "linewidth": [2, 8, 27, 28], "linestyl": [2, 8, 12, 27, 28], "h": [2, 4, 5, 8, 27, 28, 37, 40, 44, 52, 55, 57, 61, 66, 84, 86, 88, 123], "get_label": [2, 8, 27, 28], "center": [2, 8, 9, 10, 29, 37, 55], "right": [2, 4, 8, 12, 27, 28, 29, 32, 40, 70, 73, 140], "total": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 70, 141], "script": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 133], "minut": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 75], "946": [2, 6, 141], "estim": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32], "usag": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 136, 142], "661": 2, "mb": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 141], "jupyt": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32], "notebook": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32], "plot_bcic_iv_4_ecog_crop": [2, 6, 141], "ipynb": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32], "python": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 35, 106, 133, 137, 138, 140, 142], "sourc": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138], "galleri": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 141], "gener": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 68, 92, 98, 101, 108, 120, 128, 135, 142], "sphinx": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32], "follow": [3, 4, 5, 9, 10, 11, 14, 26, 29, 32, 89, 90, 108, 111, 114, 120, 138, 139, 140, 142], "wise": [3, 4, 5, 9, 10, 11], "also": [3, 4, 5, 9, 10, 11, 12, 14, 18, 21, 26, 28, 35, 68, 78, 87, 89, 90, 100, 108, 109, 111, 120, 131, 136, 139, 140], "illustr": [3, 29], "effect": [3, 19], "simon": [3, 20, 142], "brandt": [3, 20, 142], "simonbrandt": [3, 20], "protonmail": [3, 20], "c\u00e9dric": [3, 4], "rommel": [3, 4, 142], "cedric": [3, 4, 142], "inria": [3, 4, 11], "fr": [3, 4, 11], "moabbdataset": [3, 4, 18, 20, 21, 27, 28, 29, 30, 32, 142], "dataset_nam": [3, 4, 18, 20, 21, 27, 28, 29, 30, 32, 74], "bnci2014001": [3, 4, 18, 20, 21, 29, 30], "renam": [3, 4, 12, 18, 20, 21, 29, 30, 142], "bnci2014_001": [3, 4, 18, 20, 21, 27, 28, 29, 30, 32], "must": [3, 4, 12, 14, 16, 18, 20, 21, 26, 29, 30, 78, 85, 97, 98, 103, 106, 110, 112, 113, 121, 139, 142], "abbrevi": [3, 4, 18, 20, 21, 29, 30], "its": [3, 4, 9, 10, 16, 18, 20, 21, 26, 29, 30, 31, 68, 71, 110, 120], "bnci2014": [3, 4, 18, 20, 21, 29, 30], "001": [3, 4, 18, 20, 21, 27, 28, 29, 30, 31, 70, 116, 117], "moabb": [3, 4, 15, 18, 21, 23, 24, 27, 28, 29, 30, 32, 70, 71, 73, 74, 110, 119, 139, 140, 141, 142], "is_abbrev": [3, 4, 18, 20, 21, 29, 30], "inform": [3, 4, 12, 14, 17, 18, 20, 26, 29, 30, 42, 60, 68, 71, 78, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 108, 120, 122, 140], "multipli": [3, 4, 5, 9, 10, 12, 27, 28, 29, 30, 32, 84, 89, 90], "cut": [3, 4, 19, 28, 29, 30, 37, 55, 79, 108], "38": [3, 4, 11, 16, 27, 28, 29, 30, 31, 32], "factor": [3, 4, 5, 9, 10, 12, 27, 28, 29, 30, 32, 100, 102, 104, 111], "meg": [3, 4, 20, 27, 28, 29, 30, 32, 35, 108, 109, 137], "stim": [3, 4, 18, 20, 21, 27, 28, 29, 30, 32], "keep": [3, 4, 10, 11, 16, 27, 28, 29, 30, 32, 73, 75, 142], "sensor": [3, 4, 27, 28, 29, 30, 32, 40, 47, 48, 49, 50, 64, 73], "0x7fe224938550": 3, "create_windows_from_ev": [3, 4, 5, 9, 10, 11, 18, 21, 27, 28, 29, 30, 32, 142], "trial_start_offset_second": [3, 4, 27, 28, 29, 30, 32], "start": [3, 4, 12, 14, 16, 22, 27, 28, 29, 30, 32, 52, 66, 68, 81, 106, 111, 113, 114, 120, 138], "offset": [3, 4, 16, 18, 27, 28, 29, 30, 32, 71, 81, 113, 114], "trial_start_offset_sampl": [3, 4, 5, 9, 10, 11, 18, 19, 21, 27, 28, 29, 30, 32, 81, 114], "int": [3, 4, 5, 9, 10, 14, 16, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 109, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 131, 133, 135], "windows_dataset": [3, 4, 5, 8, 9, 10, 11, 17, 18, 19, 27, 28, 29, 30, 31, 32, 79, 80, 81, 113, 114], "trial_stop_offset_sampl": [3, 4, 5, 9, 10, 11, 18, 19, 21, 27, 28, 29, 30, 31, 32, 81, 114, 142], "0train": [3, 4, 18, 20, 21, 27, 28, 29, 30, 32], "1test": [3, 4, 20, 21, 27, 28, 29, 30, 32], "callabl": [3, 26, 41, 54, 68, 71, 72, 78, 85, 97, 110, 120, 128], "custom": [3, 4, 15, 23, 24, 36, 71, 79, 141], "loader": [3, 4, 5, 14, 32], "call": [3, 16, 26, 27, 29, 32, 68, 71, 78, 81, 84, 87, 91, 106, 110, 113, 114, 120, 126, 127, 128], "demonstr": [3, 4, 7, 22, 24, 26, 32], "below": [3, 5, 35, 37, 136, 139, 142], "illutr": 3, "purpos": [3, 14, 16, 32], "chose": 3, "frequencyshift": 3, "randomli": [3, 5, 27, 37, 38, 39, 44, 52, 56, 58, 61, 124], "translat": 3, "within": [3, 4, 73, 84, 87, 91, 102, 123, 142], "given": [3, 4, 5, 21, 32, 38, 39, 40, 42, 51, 53, 54, 68, 69, 82, 108, 109, 112, 120, 131, 142], "probabl": [3, 4, 26, 30, 32, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 68, 84, 85, 88, 97, 101, 102, 120], "actual": [3, 5, 12, 14, 22], "modifi": [3, 5, 10, 12, 42, 60, 68, 92, 106, 107, 109, 110, 118, 120, 133], "max_delta_freq": [3, 43], "shift": [3, 29, 43, 59], "next": [3, 4, 5, 9, 10, 11, 12, 14, 16, 18, 22], "let": [3, 4, 22, 26], "u": [3, 5, 7, 13, 24, 30, 71, 75, 92, 104, 110, 114, 119, 121, 122, 124, 133, 135, 140, 141, 142], "result": [3, 12, 14, 16, 29, 32, 68, 81, 111, 114, 120, 128, 133, 136], "stack": [3, 8], "allow": [3, 5, 14, 26, 29, 30, 32, 41, 68, 81, 89, 90, 114, 120, 142], "fix": [3, 40, 57, 136, 142], "instead": [3, 4, 5, 8, 22, 27, 28, 29, 30, 31, 32, 68, 84, 87, 89, 91, 92, 112, 120, 142], "x_tr": 3, "_": [3, 5, 14, 16, 17, 26, 27, 28, 31, 32, 142], "as_tensor": 3, "float": [3, 5, 26, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 68, 75, 79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 106, 108, 111, 114, 116, 117, 120, 130, 135], "psd": 3, "plot": [3, 5, 12, 14, 16, 29, 31, 142], "plot_psd": 3, "freq": 3, "time_frequ": 3, "psd_array_multitap": 3, "fmin": 3, "fmax": 3, "100": [3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 20, 26, 27, 28, 29, 30, 31, 32, 37, 52, 70, 85, 104, 111], "log10": 3, "psds_mean": 3, "origin": [3, 11, 17, 19, 26, 29, 46, 47, 48, 49, 50, 52, 63, 64, 66, 71, 81, 87, 88, 89, 90, 91, 93, 94, 114, 118], "k": [3, 5, 9, 10, 11, 26, 27, 28, 30, 31, 32, 37, 44, 47, 48, 49, 50, 52, 55, 61, 64, 66, 85, 91, 96, 97, 135], "r": [3, 5, 9, 10, 11, 26, 27, 28, 29, 30, 31, 37, 44, 52, 55, 61, 66, 85, 89, 90, 93, 94, 96, 97, 135], "titl": [3, 12, 29, 30, 35], "multitap": 3, "gradiomet": 3, "xlabel": [3, 12, 29, 30], "ylabel": [3, 12, 30], "power": [3, 5, 30, 108, 111], "spectral": 3, "densiti": 3, "db": [3, 16, 112], "them": [3, 4, 5, 12, 14, 16, 17, 19, 26, 27, 29, 32, 68, 71, 84, 85, 86, 87, 91, 92, 95, 96, 97, 98, 99, 100, 101, 104, 120, 140], "try": [3, 4, 12, 18, 22, 24, 30, 136, 140], "comput": [3, 4, 5, 9, 10, 11, 18, 22, 35, 48, 49, 50, 68, 70, 81, 84, 87, 89, 90, 91, 93, 94, 98, 112, 114, 116, 117, 120, 125, 126, 127, 129, 133, 136, 140, 142], "list": [3, 5, 11, 14, 16, 21, 22, 26, 27, 28, 29, 31, 32, 35, 36, 40, 41, 48, 49, 50, 57, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 107, 108, 109, 112, 113, 114, 118, 119, 120, 130, 132, 135, 142], "n_channel": [3, 4, 5, 9, 10, 14, 17, 19, 22, 29, 31, 32, 46, 47, 63, 64, 79, 84, 86, 87, 96, 98, 99, 100, 101, 102, 103, 116, 117], "auto": [3, 4, 8, 14, 17, 19, 26, 28, 29, 30, 32, 68, 85, 93, 94, 97, 108, 111, 112, 120, 142], "23": [3, 4, 5, 6, 8, 9, 10, 11, 16, 18, 27, 28, 29, 30, 31, 32, 107, 141], "depreci": [3, 4, 8, 27, 28, 29, 30, 31, 32], "n_time": [3, 4, 5, 8, 9, 10, 11, 12, 14, 17, 19, 26, 27, 28, 29, 30, 31, 32, 46, 63, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 116, 117, 120, 125, 129], "180": [3, 4, 11, 26, 27, 28, 29, 30, 32], "logsoftmax": [3, 4, 26, 27, 28, 29, 30, 32, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 142], "layer": [3, 4, 5, 9, 10, 11, 26, 27, 28, 29, 30, 31, 32, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 142], "adjust": [3, 4, 26, 27, 28, 29, 30, 32, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104], "accordingli": [3, 4, 9, 26, 27, 28, 29, 30, 32, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 106], "e": [3, 4, 5, 9, 10, 11, 14, 16, 26, 27, 28, 29, 30, 32, 37, 40, 44, 52, 54, 55, 57, 61, 66, 68, 72, 75, 76, 77, 78, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 114, 118, 120, 124, 128, 135, 140, 142], "g": [3, 4, 5, 9, 10, 11, 14, 16, 26, 27, 28, 29, 30, 32, 37, 40, 42, 44, 52, 54, 55, 57, 60, 61, 68, 72, 75, 76, 77, 78, 81, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 114, 118, 120, 124, 128, 135, 142], "crossentropyloss": [3, 4, 9, 10, 11, 26, 27, 28, 29, 30, 32, 68, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 120], "order": [3, 4, 12, 21, 26, 40, 48, 49, 50, 57, 68, 73, 76, 77, 108, 112, 118, 120, 124, 142], "pass": [3, 4, 9, 10, 11, 16, 22, 26, 27, 28, 29, 30, 32, 36, 41, 54, 68, 74, 84, 86, 87, 91, 96, 98, 99, 100, 101, 102, 106, 108, 109, 111, 112, 120, 125, 128, 129, 142], "sequenti": [3, 4, 5, 9, 10, 11, 16, 26, 27, 28, 29, 30, 32, 73, 92], "batch": [3, 4, 5, 26, 30, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 85, 86, 92, 96, 97, 98, 99, 100, 101, 102, 105, 120, 127, 131, 142], "augmenteddataload": [3, 4, 142], "signflip": 3, "freq_shift": 3, "sign_flip": 3, "iter": [3, 4, 5, 20, 22, 46, 68, 92, 107, 120, 131], "argument": [3, 4, 16, 19, 26, 29, 32, 36, 38, 39, 40, 42, 51, 53, 54, 68, 74, 106, 108, 109, 110, 111, 112, 118, 120, 128, 142], "clf": [3, 4, 5, 9, 10, 11, 27, 28, 29, 30], "iterator_train": [3, 4, 68, 120], "tell": [3, 4, 136], "dataload": [3, 4, 5, 14, 32, 36, 68, 120, 131], "iterator_train__transform": [3, 4], "nllloss": [3, 4, 14, 28, 29, 30, 32, 68], "train_accuraci": [3, 27, 28, 29, 30, 32], "valid_acc": [3, 5, 9, 10, 11, 26, 28, 29, 30], "valid_accuraci": [3, 27, 28, 29, 30], "2535": [3, 28], "6458": 3, "1252": 3, "7241": 3, "2639": 3, "3297": 3, "2500": [3, 22, 27, 28, 29, 122], "7607": 3, "5354": 3, "1539": 3, "1231": 3, "5637": 3, "2708": 3, "1567": 3, "2555": 3, "5381": [3, 30], "classifi": [3, 4, 5, 9, 10, 11, 26, 29, 31, 142], "initi": [3, 5, 9, 10, 11, 26, 29, 30, 32, 68, 87, 89, 90, 104, 120], "module_": [3, 9, 10, 11, 26, 68, 120], "var_nam": [3, 4, 11, 26, 27, 28, 29, 32, 92], "depth": [3, 4, 11, 26, 27, 28, 29, 30, 32, 84, 89, 90, 92, 104], "idx": [3, 4, 9, 10, 11, 26, 27, 28, 29, 30, 32], "param": [3, 4, 5, 11, 26, 27, 28, 29, 30, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 52], "kernel": [3, 4, 11, 26, 27, 28, 29, 30, 32, 47, 48, 49, 50, 64, 84, 90, 91, 98, 99, 101, 104], "22": [3, 4, 5, 9, 11, 16, 17, 18, 19, 27, 28, 29, 32], "1125": [3, 4, 28, 29, 32], "ensure4d": [3, 4, 26, 27, 28, 29, 32], "ensuredim": [3, 4, 26, 27, 28, 29, 32], "rearrang": [3, 4, 26, 27, 28, 29, 32, 142], "dimshuffl": [3, 4, 26, 27, 28, 29, 32], "combinedconv": [3, 4, 26, 27, 28, 29, 32], "conv_time_spat": [3, 4, 26, 27, 28, 29, 32], "40": [3, 4, 11, 14, 16, 26, 27, 28, 29, 31, 32, 87, 97], "1101": [3, 4, 28, 29, 32], "36": [3, 4, 9, 11, 16, 18, 27, 28, 29, 32], "240": [3, 4, 16, 17, 23, 26, 27, 28, 29, 32, 141], "batchnorm2d": [3, 4, 26, 27, 28, 29, 32, 85, 89, 90, 97], "bnorm": [3, 4, 26, 27, 28, 29, 32], "80": [3, 4, 5, 10, 11, 16, 19, 26, 27, 28, 29, 32, 73, 100], "express": [3, 4, 26, 27, 28, 29, 32], "conv_nonlin_exp": [3, 4, 26, 27, 28, 29, 32], "avgpool2d": [3, 4, 26, 27, 28, 29, 32], "pool": [3, 4, 26, 27, 28, 29, 32, 84, 85, 87, 89, 90, 92, 97, 99, 102, 104], "69": [3, 4, 5, 16, 18, 28, 29, 32], "75": [3, 4, 5, 9, 14, 16, 26, 27, 28, 29, 32, 87, 97, 102], "pool_nonlin_exp": [3, 4, 26, 27, 28, 29, 32], "dropout": [3, 4, 5, 9, 10, 26, 27, 28, 29, 30, 32, 84, 85, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102], "drop": [3, 4, 10, 14, 19, 26, 27, 28, 29, 32, 38, 56, 81, 107, 114, 118], "final_lay": [3, 4, 11, 26, 27, 28, 29, 32], "conv2d": [3, 4, 9, 26, 27, 28, 29, 32], "conv_classifi": [3, 4, 26, 27, 28, 29, 32], "044": [3, 4, 28, 29, 32], "47": [3, 4, 5, 9, 10, 11, 16, 18, 28, 29, 32], "364": [3, 4, 28, 29, 32], "trainabl": [3, 4, 11, 26, 27, 28, 29, 32], "non": [3, 4, 11, 16, 22, 26, 27, 28, 29, 30, 32, 68, 73, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 108, 120, 142], "mult": [3, 4, 11, 26, 27, 28, 29, 32], "add": [3, 4, 5, 11, 26, 27, 28, 29, 32, 43, 44, 59, 61, 68, 71, 72, 78, 108, 120, 128, 142], "m": [3, 4, 5, 9, 10, 11, 12, 16, 22, 26, 27, 28, 29, 30, 31, 32, 37, 40, 44, 47, 48, 49, 50, 52, 55, 57, 61, 64, 66, 84, 85, 93, 94, 96, 97, 99, 104, 108, 121, 135, 140], "forward": [3, 4, 5, 11, 26, 27, 28, 29, 32, 41, 54, 68, 84, 86, 87, 91, 96, 98, 99, 100, 101, 102, 103, 104, 108, 110, 112, 120, 125, 129, 131], "backward": [3, 4, 11, 14, 26, 27, 28, 29, 32, 92, 108, 142], "35": [3, 4, 11, 16, 18, 27, 28, 29, 31, 32], "04": [3, 4, 11, 16, 23, 26, 27, 28, 29, 32, 141], "50": [3, 4, 5, 9, 10, 11, 14, 16, 19, 28, 29, 32, 70, 85], "would": [3, 26, 27, 29, 32, 68, 85, 97, 120], "equival": 3, "although": [3, 68, 84, 87, 91, 120], "composit": [3, 41], "composed_transform": 3, "possibl": [3, 4, 11, 12, 16, 18, 26, 68, 70, 113, 120, 133, 136, 142], "most": [3, 9, 10, 11, 14, 123, 136, 139], "windowsdataset": [3, 18, 26, 71, 79, 80, 81, 82, 113, 114, 119, 120, 142], "through": [3, 4, 11, 12, 14, 16, 20, 22, 27, 47, 64, 72, 78, 86, 98, 99, 100, 142], "commonli": 3, "done": [3, 11, 16, 18, 26, 27, 84, 113, 114], "advis": [3, 18, 27, 30, 42, 60, 120], "abov": [3, 14, 16, 22, 27, 29, 136, 138], "compat": [3, 14, 17, 19, 30, 68, 79, 80, 81, 120, 142], "163": [3, 6, 11, 141], "505": [3, 6, 141, 142], "plot_data_augment": [3, 6, 141], "inde": 4, "known": [4, 68], "often": [4, 9, 10, 11, 28, 30], "depend": [4, 5, 9, 10, 11, 12, 14, 16, 26, 29, 30, 32, 35, 68, 73, 100, 120, 131, 138, 140, 142], "task": [4, 9, 10, 11, 26, 30, 42, 60, 70, 72, 123], "phenomenon": 4, "studi": [4, 5, 7, 24], "methodologi": 4, "propos": [4, 38, 39, 42, 52, 56, 58, 60, 66, 91, 142], "openli": [4, 5, 9, 10, 11], "could": [4, 5, 14, 29, 32, 92, 140], "brain": [4, 24, 25, 26, 27, 29, 30, 31, 33, 35, 71, 74, 85, 89, 90, 92, 93, 94, 96, 97, 110, 114, 117, 119, 133, 135, 137, 141], "recent": [4, 26, 136], "shown": [4, 5, 9, 11, 16, 29, 32, 70, 73], "artifici": 4, "cast": [4, 41], "paradigm": [4, 5, 68, 70, 120, 131], "present": [4, 12, 29, 32, 70, 73, 107], "both": [4, 5, 16, 22, 30, 70, 73, 98, 99, 104], "pretext": 4, "approach": [4, 5, 9, 10, 11, 16, 24, 30, 100, 121], "demand": 4, "intens": 4, "comparison": [4, 14, 27, 28], "strength": 4, "context": [4, 5, 29, 35, 100, 123], "bruno": [4, 142], "aristimunha": [4, 142], "ufabc": 4, "br": 4, "bnci": [4, 70], "websit": 4, "There": [4, 24, 26, 85, 97, 138, 140], "subject": [4, 5, 9, 10, 11, 12, 14, 18, 19, 20, 21, 22, 29, 37, 44, 52, 55, 61, 66, 69, 70, 72, 73, 74, 75, 122], "electrod": [4, 20, 70, 73, 112], "while": [4, 5, 14, 29, 32, 73, 84, 87, 91, 98, 132], "do": [4, 12, 14, 26, 27, 29, 32, 68, 79, 80, 81, 104, 113, 114, 120, 124, 133, 140, 142], "imageri": [4, 70, 84, 88, 91, 142], "144": 4, "focu": 4, "relat": [4, 5, 26, 27, 35, 73, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 120, 142], "activ": [4, 19, 26, 68, 73, 84, 85, 89, 90, 91], "0x7fe221295d20": 4, "out": [4, 8, 9, 10, 26, 37, 52, 55, 66, 68, 70, 120, 121, 129, 136], "provind": 4, "slicedataset": [4, 29, 30], "eval_set": [4, 30], "three": [4, 16, 29, 32, 68, 69, 87, 89, 90, 120, 136], "categor": [4, 121], "aggreg": [4, 87], "sever": [4, 12, 18, 24, 113, 114, 137], "being": [4, 10, 14, 18, 27, 68, 73, 120], "spatial": [4, 26, 42, 60, 85, 97, 104, 142], "paper": [4, 11, 35, 47, 48, 49, 50, 64, 84, 87, 88, 89, 90, 91, 93, 94, 100, 142], "ftsurrog": 4, "smoothtimemask": 4, "channelsdropout": 4, "respect": [4, 5, 30], "two": [4, 5, 9, 10, 11, 12, 14, 16, 18, 27, 29, 32, 46, 52, 63, 70, 73, 75, 91, 98, 108, 111, 112, 123, 124, 130], "insid": [4, 29, 30, 89, 90, 140], "rememb": [4, 29, 32], "\u03c6max": 4, "2\u03c0": 4, "p_drop": [4, 38, 56], "linspac": [4, 12], "transforms_freq": 4, "phase_noise_magnitud": [4, 42, 60], "phase_freq": 4, "random_st": [4, 5, 8, 30, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 121, 122, 123, 124], "transforms_tim": 4, "mask_len_sampl": [4, 52, 66], "transforms_spati": 4, "prob": 4, "gridsearchcv": [4, 29, 30, 128, 142], "control": [4, 5, 10, 29, 68, 98, 106, 108, 109, 111, 112, 113, 114, 119, 120, 142], "over": [4, 10, 16, 29, 31, 32, 42, 47, 48, 49, 50, 60, 64, 68, 120, 142], "framework": 4, "necessari": [4, 68, 112, 120], "slicedata": 4, "mandatori": 4, "eval": [4, 30, 32, 142], "train_x": [4, 30], "train_i": [4, 30], "kfold": [4, 29, 30], "model_select": [4, 5, 8, 29, 30], "cv": [4, 29, 30], "n_split": [4, 29, 30], "shuffl": [4, 8, 14, 29, 30, 32, 39, 46, 58, 68, 120, 142], "fit_param": [4, 30, 120], "param_grid": [4, 29, 30], "return_train_scor": [4, 29, 30], "refit": [4, 29, 30], "error_scor": [4, 29, 30], "rais": [4, 14, 26, 29, 30, 31, 68, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 114, 119, 142], "fold": [4, 30, 32], "candid": [4, 29, 30], "x27": 4, "lt": 4, "gt": 4, "uniniti": [4, 68, 120], "ou": 4, "environ": [4, 69, 133], "rerun": 4, "cell": 4, "represent": [4, 37, 44, 46, 52, 55, 61, 63, 66, 142], "trust": 4, "On": [4, 27, 30, 31, 72, 78], "github": [4, 30, 136, 138, 142], "unabl": 4, "render": 4, "page": [4, 29, 32, 35, 136, 142], "nbviewer": 4, "gridsearchcvgridsearchcv": 4, "analysi": [4, 5, 9, 10, 11, 26, 35, 137], "wa": [4, 5, 9, 10, 11, 27, 28, 29, 32, 68, 70, 73, 87, 100, 120, 121, 142], "search_result": [4, 29, 30], "cv_results_": [4, 29, 30], "best_run": [4, 29, 30], "rank_test_scor": [4, 29, 30], "best_aug": 4, "validation_scor": 4, "around": [4, 10, 32, 47, 48, 49, 50, 64, 114, 121], "mean_test_scor": [4, 30], "training_scor": 4, "mean_train_scor": [4, 30], "report_messag": 4, "gave": [4, 30], "format": [4, 14, 17, 19, 26, 79, 80, 81], "eval_x": [4, 30], "eval_i": [4, 30], "f": [4, 5, 10, 11, 12, 14, 16, 17, 18, 22, 26, 27, 28, 29, 30, 31, 32, 44, 61, 85, 89, 90, 96, 97, 102, 135], "2f": [4, 29, 30, 32], "accuracyof": 4, "08": [4, 16, 29], "26": [4, 5, 9, 10, 11, 16, 18, 20, 27, 99], "39": [4, 11, 16, 18, 22, 27], "bar": 4, "param_iterator_train__transform": 4, "yerr": 4, "std_train_scor": 4, "rot": 4, "45": [4, 5, 11, 16, 18, 26, 27, 29, 32, 33, 141], "c0": 4, "c1": 4, "c2": 4, "strategi": [4, 25, 29, 30], "set_ylim": [4, 27, 28], "32": [4, 5, 9, 10, 11, 16, 18, 26, 27, 29, 33, 84, 93, 102, 141], "c": [4, 5, 9, 10, 11, 20, 27, 28, 29, 30, 42, 60, 86, 91, 93, 94, 104, 121, 136], "paillard": 4, "moreau": [4, 142], "gramfort": [4, 5, 9, 10, 35, 99, 123, 142], "2022": [4, 30, 84, 87, 88, 89, 90], "systemat": 4, "arxiv": [4, 5, 31, 37, 38, 39, 40, 42, 44, 46, 52, 55, 56, 57, 58, 60, 61, 63, 66, 93, 94, 101, 123, 130], "ab": [4, 5, 46, 63, 130], "2206": 4, "14483": 4, "banvil": [4, 5, 9, 14, 16, 20, 123, 142], "chehab": [4, 5, 11, 123, 142], "hyv\u00e4rinen": [4, 5, 123], "engemann": [4, 5, 35, 123, 142], "2021": [4, 10, 11, 89, 90, 91, 100, 104, 121], "uncov": [4, 5, 123], "structur": [4, 5, 16, 17, 19, 122, 123, 142], "clinic": [4, 5, 7, 24, 123], "journal": [4, 28, 29, 30, 35, 91], "engin": [4, 5, 9, 10, 28, 29, 30, 47, 48, 49, 50, 64, 86, 87, 89, 90, 91, 99, 100], "046020": 4, "31": [4, 5, 6, 9, 10, 11, 16, 18, 26, 27, 30, 32, 87, 141], "826": [4, 6, 141], "223": [4, 6, 141, 142], "plot_data_augmentation_search": [4, 6, 141], "access": [5, 9, 10, 11, 12, 14, 26, 88, 122, 138], "physionet": [5, 7, 13, 16, 24, 71, 75, 92, 99, 100, 103, 104, 110, 114, 119, 122, 124, 133, 135, 141, 142], "ssl": [5, 18, 27], "leverag": [5, 100], "unlabel": 5, "design": [5, 16, 100, 108], "prior": [5, 92], "understand": [5, 24, 29], "under": [5, 14, 69, 119, 140, 142], "autocorrel": 5, "requir": [5, 11, 12, 14, 16, 17, 22, 54, 68, 73, 78, 120, 142], "anoth": [5, 21, 29, 32, 123], "interest": [5, 12, 22, 26], "onc": [5, 16, 29, 108, 113, 123, 140], "reus": [5, 9, 11], "featur": [5, 9, 10, 26, 29, 86, 87, 89, 90, 91, 92, 98, 99, 100, 104, 136, 140, 142], "extractor": [5, 9, 10, 86, 98, 99, 100, 104], "weight": [5, 9, 10, 11, 29, 30, 32, 84, 135], "downstream": 5, "help": [5, 9, 10, 21, 112], "reduc": [5, 10, 14, 16, 75, 114], "quantiti": 5, "compar": [5, 14, 16, 22, 27, 29, 32], "strictli": 5, "rp": 5, "simpl": [5, 12, 16, 24, 25, 32, 33, 92, 97, 141], "whether": [5, 14, 26, 38, 39, 40, 42, 47, 48, 49, 50, 51, 53, 54, 60, 64, 68, 71, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 113, 118, 119, 120, 123, 128, 133, 136], "close": [5, 16, 18, 123, 136], "far": [5, 123], "apart": 5, "yield": [5, 14, 20, 70, 102, 136], "physiolog": [5, 9, 10, 11], "relev": [5, 29, 35, 68, 120], "boost": 5, "classif": [5, 9, 10, 11, 26, 27, 30, 37, 42, 44, 52, 55, 60, 61, 66, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "regim": 5, "hubert": [5, 9, 14, 16, 20, 142], "jbanvil": [5, 9, 14, 16, 20], "87": [5, 16, 27], "few": [5, 9, 10, 11, 14, 16, 26, 142], "sleep_physionet": [5, 9, 10, 11], "sleepphysionet": [5, 9, 10, 11, 16, 142], "recording_id": [5, 9, 10, 11, 12, 14, 16, 22, 75, 76, 77], "crop_wake_min": [5, 9, 10, 11, 16, 75], "microvolt": [5, 9, 10], "lowpass": [5, 9, 10, 16], "sinc": [5, 9, 10, 11, 12, 22, 26, 30, 68, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 120, 136], "don": [5, 11, 17, 19, 68, 120], "resampl": [5, 12, 14, 18, 20, 75, 108, 142], "0x7fe2277c4310": 5, "As": [5, 16, 26, 27, 29, 68, 120], "conveni": [5, 112], "later": [5, 12, 22, 72, 73, 76, 77, 85], "window_size_": [5, 9, 10, 11], "map": [5, 9, 10, 11, 12, 22, 26, 27, 28, 29, 30, 31, 35, 68, 81, 84, 85, 96, 97, 103, 113, 114, 120, 135], "merg": [5, 9, 10, 11, 142], "aasm": [5, 9, 10, 11], "w": [5, 9, 10, 11, 12, 27, 28, 29, 30], "z": [5, 9, 10, 31, 47, 50, 64, 101], "scale": [5, 9, 10, 11, 12, 16, 87, 89, 90, 91, 142], "standard_scal": [5, 9, 10], "channel_wis": [5, 9, 10, 11, 16], "0x7fe223f66e60": 5, "new": [5, 9, 10, 11, 20, 40, 57, 68, 87, 106, 107, 108, 109, 111, 112, 120, 136, 140], "receiv": [5, 87], "pair": [5, 123], "indic": [5, 9, 10, 21, 31, 46, 63, 71, 108, 109, 112, 122, 123, 124, 142], "when": [5, 9, 10, 11, 14, 16, 22, 27, 29, 30, 32, 35, 41, 42, 47, 48, 49, 50, 54, 60, 64, 68, 69, 74, 79, 80, 81, 84, 87, 104, 107, 108, 109, 112, 113, 114, 119, 120, 133, 136, 142], "train_test_split": [5, 8, 29], "uniqu": [5, 9, 10, 11, 21, 68, 72, 120], "subj_train": 5, "subj_test": 5, "test_siz": [5, 8, 29], "subj_valid": 5, "relativepositioningdataset": 5, "__getitem__": [5, 68, 120], "expect": [5, 14, 26, 32, 68, 120], "__init__": [5, 32], "list_of_d": [5, 71], "super": [5, 32, 126, 127], "return_pair": 5, "ind1": 5, "ind2": 5, "properti": [5, 71, 142], "_return_pair": 5, "setter": 5, "split_id": [5, 9, 10, 11, 12, 71, 142], "dict": [5, 9, 10, 11, 21, 26, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 52, 71, 72, 74, 78, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 108, 113, 114, 118, 120, 142], "item": [5, 14, 19, 20, 26, 27, 28, 32], "main": [5, 89, 90, 91], "tau_po": [5, 123], "tau_neg": [5, 123], "neg": [5, 27, 31, 68, 123], "separ": [5, 29, 32, 70, 108, 114, 123], "less": [5, 27, 29, 32], "min": [5, 12, 29, 75, 108], "n_exampl": [5, 123], "regular": [5, 116, 117], "instanc": [5, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 61, 68, 84, 87, 91, 106, 107, 108, 109, 112, 120, 122, 142], "000": [5, 16, 17, 18, 19, 22, 23, 31, 34, 141], "lower": [5, 9, 12, 29, 32, 37, 55, 108, 128], "250": [5, 20, 27, 70, 84, 87, 91], "relativepositioningsampl": 5, "60": [5, 10, 12, 16, 19, 32], "n_examples_train": 5, "len": [5, 8, 9, 10, 11, 12, 14, 17, 20, 22, 29, 32, 73, 118], "n_examples_valid": 5, "n_examples_test": 5, "train_sampl": [5, 9, 10, 11], "get_metadata": [5, 9, 10, 11, 27, 28, 29, 31, 71, 122], "same_rec_neg": [5, 123], "valid_sampl": [5, 9, 10, 11], "presampl": [5, 123], "test_sampl": 5, "introduc": [5, 9, 10, 11, 14, 15, 24, 25, 27, 31], "four": [5, 9, 47, 70, 73], "embedd": 5, "dimension": [5, 68, 87, 120, 131], "last": [5, 22, 27, 31, 32, 52, 66, 73, 75, 79, 80, 81, 84, 87, 108, 111, 113, 114, 142], "embed": [5, 9, 10, 84, 87], "after": [5, 12, 16, 21, 26, 28, 29, 32, 70, 75, 85, 97, 98, 99, 125, 128, 142], "tempor": [5, 9, 10, 14, 26, 84, 85, 87, 88, 90, 97, 98, 99, 100, 101, 102, 104, 142], "wrap": [5, 26, 32, 71], "siames": 5, "contrastivenet": 5, "sleepstagerchambon2018": [5, 9, 26], "input_size_sampl": [5, 9, 10, 11], "emb_siz": 5, "emb": 5, "n_output": [5, 9, 10, 11, 26, 31, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 120], "n_conv_ch": [5, 99], "apply_batch_norm": [5, 98, 99], "linear": [5, 9, 10, 26, 30, 46, 63, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 108], "top": [5, 9, 10, 11, 35], "x1": [5, 123], "x2": [5, 123], "z1": 5, "z2": 5, "flatten": [5, 9, 10, 11], "similar": [5, 27, 106], "account": [5, 71, 113], "smaller": [5, 27, 32, 81, 89, 90, 114], "checkpoint": [5, 32], "earlystop": [5, 29, 32], "epochscor": [5, 8, 9, 10, 11, 68, 120], "5e": 5, "128": [5, 10, 11, 68, 73, 89, 90, 99, 104, 120], "512": [5, 11], "enough": [5, 73], "num_work": [5, 14, 32, 131], "cp": 5, "dirnam": 5, "f_criterion": 5, "f_optim": 5, "f_histori": 5, "early_stop": 5, "patienc": 5, "train_acc": 5, "bcewithlogitsloss": [5, 68, 120], "adam": [5, 9, 10, 11, 14, 31], "max_epoch": [5, 29, 32, 68, 120], "iterator_train__sampl": [5, 9, 10, 11], "iterator_valid__sampl": [5, 9, 10, 11], "iterator_train__num_work": 5, "iterator_valid__num_work": 5, "load_param": 5, "lowest": 5, "pt": [5, 84], "delet": [5, 22, 71, 119], "file": [5, 6, 12, 13, 14, 16, 17, 18, 19, 23, 26, 33, 34, 71, 75, 76, 82, 106, 124, 136, 141, 142], "5234": 5, "7013": 5, "6680": 5, "6320": 5, "1084": 5, "5938": 5, "7149": 5, "4880": 5, "8358": 5, "8656": 5, "4922": 5, "0040": 5, "6440": 5, "6172": 5, "8752": 5, "7031": 5, "6120": 5, "5990": 5, "8806": 5, "5391": [5, 27, 28, 29, 30, 31], "6751": 5, "5920": 5, "6213": 5, "8703": 5, "6719": 5, "6227": 5, "6263": 5, "8719": 5, "6562": 5, "6309": 5, "6240": 5, "6117": 5, "8720": 5, "6641": 5, "6272": 5, "6480": 5, "5950": 5, "8630": 5, "6328": 5, "6238": 5, "5797": 5, "8680": 5, "6406": [5, 30], "6177": 5, "6800": 5, "5746": 5, "8633": 5, "6250": 5, "6323": 5, "7040": 5, "5787": 5, "8631": 5, "6094": 5, "6281": 5, "6760": 5, "5772": 5, "8683": 5, "6422": 5, "6880": 5, "5790": 5, "8709": 5, "6840": 5, "5765": 5, "8507": 5, "6170": 5, "6920": 5, "5730": 5, "8657": 5, "7578": 5, "5608": 5, "6960": 5, "5676": 5, "8711": 5, "6875": 5, "5936": 5, "7120": 5, "5612": 5, "8686": 5, "7734": 5, "5472": 5, "7080": 5, "5500": 5, "8750": 5, "19": [5, 6, 9, 10, 11, 16, 17, 18, 27, 106, 112], "7656": 5, "5245": 5, "5400": 5, "8746": 5, "5641": 5, "7160": 5, "5333": 5, "8544": 5, "21": [5, 9, 11, 16, 17, 18, 23, 27, 31, 112, 141], "7422": 5, "5307": 5, "7200": [5, 10], "5272": 5, "8605": 5, "7109": 5, "5499": 5, "7360": 5, "5211": [5, 22], "8674": 5, "6259": 5, "7400": 5, "5164": 5, "8736": 5, "5712": 5, "5120": 5, "8745": 5, "5030": 5, "7280": 5, "balanc": [5, 9, 10, 11, 121, 142], "to_list": [5, 9, 10, 11], "ys1": 5, "ys2": 5, "y1": 5, "y2": 5, "zip": [5, 12, 16, 24], "l": [5, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 84, 85, 96, 97, 104, 121, 135], "orang": [5, 12, 16], "lines1": 5, "labels1": 5, "get_legend_handles_label": 5, "lines2": 5, "labels2": 5, "displai": [5, 9, 10, 11, 27, 28, 29, 32, 73, 133], "confus": [5, 9, 10, 11, 135, 142], "matrix": [5, 9, 10, 11, 39, 40, 47, 57, 58, 64, 87, 135, 142], "report": [5, 9, 10, 11, 14, 29, 32, 76, 77, 84, 136], "confusion_matrix": [5, 9, 10, 11, 27, 28, 135], "classification_report": [5, 9, 10, 11], "switch": [5, 32, 142], "y_pred": [5, 9, 10, 11, 27, 28, 68, 104, 127], "y_true": [5, 9, 10, 11, 27, 28, 68], "90": [5, 16, 29, 135], "41": [5, 11, 16, 27], "88": [5, 16], "precis": [5, 9, 10, 11, 135], "recal": [5, 9, 10, 11], "f1": [5, 9, 10, 11, 84, 94, 128], "support": [5, 9, 10, 11, 18, 27, 32, 68, 108, 111, 112, 118, 120, 142], "74": [5, 16], "71": [5, 16, 27], "121": [5, 12], "68": [5, 16, 27], "129": [5, 11], "macro": [5, 9, 10, 11], "avg": [5, 9, 10, 11], "logist": 5, "balanced_accuracy_scor": [5, 11], "linear_model": 5, "logisticregress": 5, "standardscal": 5, "make_pipelin": 5, "singl": [5, 9, 10, 27, 30, 41, 42, 43, 59, 60, 68, 86, 100, 112, 120, 131, 142], "no_grad": [5, 32], "feat": 5, "batch_x": [5, 22], "concaten": [5, 9, 10, 71, 84, 103, 108, 113, 114], "log_reg": 5, "penalti": 5, "l2": [5, 84], "class_weight": [5, 9, 10, 11], "solver": 5, "lbfg": 5, "multi_class": 5, "multinomi": 5, "clf_pipe": 5, "train_y_pr": 5, "valid_y_pr": 5, "test_y_pr": 5, "train_bal_acc": [5, 9, 10, 11], "valid_bal_acc": [5, 9, 10, 11], "test_bal_acc": 5, "bal": 5, "acc": [5, 29, 32], "4f": 5, "_logist": 5, "460": [5, 142], "convergencewarn": 5, "fail": [5, 12], "converg": [5, 29, 31], "statu": 5, "stop": [5, 32, 37, 55, 81, 108, 113, 114, 132, 142], "NO": 5, "reach": [5, 9, 10, 32], "max_it": 5, "scikit": [5, 24, 25, 33, 68, 71, 74, 92, 97, 110, 114, 117, 119, 120, 133, 135, 141, 142], "document": [5, 10, 12, 35, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 106, 108, 109, 111, 112, 136, 140, 142], "altern": [5, 26, 32, 68, 120], "option": [5, 10, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 68, 71, 74, 81, 84, 90, 91, 92, 108, 111, 114, 120, 131, 135, 140, 142], "n_iter_i": 5, "_check_optimize_result": 5, "8924": 5, "5215": 5, "6011": 5, "107": [5, 26], "70": [5, 16], "350": 5, "77": [5, 11, 16], "79": [5, 16, 18], "58": [5, 11, 16, 18], "66": [5, 16], "142": [5, 142], "43": [5, 10, 11, 16, 18], "109": 5, "81": [5, 16, 19, 27], "62": [5, 14, 16, 26, 27], "562": 5, "48": [5, 10, 11, 16, 18, 20, 21, 27, 28, 29, 30, 32, 70, 91], "61": [5, 9, 16, 26, 27], "105": 5, "46": [5, 11, 16, 26], "170": [5, 142], "1088": [5, 102], "57": [5, 14, 16, 18, 26, 27], "much": [5, 27, 68, 111, 120], "chanc": [5, 9, 10], "level": [5, 9, 10, 22, 69, 106, 108, 109, 111, 112, 142], "problem": [5, 26, 42, 60, 136, 139], "quick": [5, 122], "2d": [5, 135], "space": [5, 16], "pca": 5, "decomposit": 5, "cm": [5, 70, 135], "n_compon": 5, "tsne": 5, "compon": [5, 9, 10, 11, 73, 89, 90], "fit_transform": 5, "get_cmap": 5, "viridi": 5, "enumer": [5, 12, 29, 32], "n1": [5, 9, 10, 11], "n2": [5, 9, 10, 11], "n3": [5, 9, 10, 11], "scatter": [5, 16, 31], "alpha": [5, 9, 10, 11, 12, 46, 84, 89, 90], "advanced_train": [5, 6, 141], "plot_relative_posit": [5, 6, 141], "472": [5, 142], "matplotlibdeprecationwarn": 5, "minor": 5, "releas": [5, 89, 136, 140], "colormap": [5, 135], "obj": 5, "0x7fe2215893c0": 5, "nonlinear": [5, 29, 68, 84, 95, 120], "project": [5, 12, 14, 19, 26, 76, 77, 112], "umap": 5, "might": [5, 14, 16, 26, 29, 30, 32, 114, 122], "insight": 5, "explor": [5, 29], "ag": [5, 12, 18, 22, 70, 73, 76, 77], "sex": 5, "specif": [5, 9, 10, 11, 16, 18, 30, 68, 82, 98, 106, 120, 122, 138], "subset": [5, 8, 20, 29, 31, 71, 108, 109, 142], "achiev": [5, 9, 10, 11], "reason": [5, 10, 29, 32, 68, 120, 128], "avenu": 5, "entir": [5, 14, 20, 29, 32, 142], "describ": [5, 11, 26, 27, 28, 29, 32, 73, 85, 86, 89, 90, 91, 92, 97, 98, 99, 100, 104], "discov": 5, "2020": [5, 37, 38, 39, 44, 52, 55, 56, 58, 61, 66, 89, 90, 98, 102, 123], "preprint": [5, 31, 37, 38, 39, 40, 42, 44, 52, 55, 56, 57, 58, 60, 61, 66, 93, 94, 101, 123], "2007": [5, 37, 44, 52, 55, 61, 66, 123], "16104": [5, 123], "kemp": [5, 9, 10, 11], "b": [5, 9, 10, 11, 16, 18, 27, 40, 57, 87, 93, 94, 104], "zwinderman": [5, 9, 10, 11], "tuk": [5, 9, 10, 11], "kamphuisen": [5, 9, 10, 11], "obery": 5, "2000": [5, 9, 10, 11, 22, 30, 122], "neuron": [5, 9, 10, 11], "feedback": [5, 9, 10, 11, 70], "loop": [5, 9, 10, 11, 14, 68, 120], "slow": [5, 9, 10, 11, 16, 133, 142], "wave": [5, 9, 10, 11], "microcontinu": [5, 9, 10, 11], "ieee": [5, 9, 10, 11, 47, 48, 49, 50, 64, 84, 86, 87, 88, 89, 90, 99, 100], "transact": [5, 10, 84, 86, 87, 89, 90, 99, 100], "biomed": 5, "1185": [5, 9, 10, 11, 22], "1194": [5, 9, 10, 11], "goldberg": [5, 9, 10, 11], "amar": [5, 9, 10, 11], "glass": [5, 9, 10, 11], "hausdorff": [5, 9, 10, 11], "ivanov": [5, 9, 10, 11], "p": [5, 9, 10, 27, 28, 29, 30, 31, 37, 44, 52, 55, 61, 66, 93, 94, 99], "mark": [5, 9, 10, 11], "stanlei": [5, 9, 10, 11], "physiobank": [5, 9, 10, 11], "physiotoolkit": [5, 9, 10, 11], "research": [5, 9, 10, 11, 30, 35, 137], "resourc": [5, 7, 9, 10, 11, 13, 16, 24, 71, 76, 110, 113, 119, 141, 142], "complex": [5, 9, 10, 11, 29, 32, 73, 98], "circul": [5, 9, 10, 11], "101": [5, 9, 10, 11, 12], "e215": [5, 9, 10, 11], "e220": [5, 9, 10, 11], "chambon": [5, 9, 10, 99], "galtier": [5, 9, 10, 99], "arnal": [5, 9, 10, 99], "wainrib": [5, 9, 10, 99], "2018": [5, 9, 10, 28, 29, 30, 40, 42, 44, 46, 57, 60, 61, 63, 94, 99, 101], "multivari": [5, 9, 10, 99], "multimod": [5, 9, 10, 99], "tran": [5, 9, 10], "system": [5, 9, 10, 47, 64, 86, 87, 89, 90, 99, 100, 139], "rehabilit": [5, 9, 10, 86, 87, 89, 90, 99, 100], "758": [5, 9, 10, 99], "769": [5, 9, 10, 99], "921": [5, 6, 141], "172": [5, 6, 141], "03": [6, 9, 10, 11, 13, 16, 18, 23, 27, 141], "855": 6, "execut": [6, 11, 12, 13, 14, 16, 17, 19, 23, 33, 34, 73, 119, 141], "auto_exampl": [6, 13, 23, 33, 34], "mem": [6, 13, 16, 23, 33, 34, 141], "05": [6, 10, 11, 12, 16, 18, 102, 141], "660": [6, 11, 141], "00": [6, 10, 13, 16, 18, 23, 26, 27, 29, 32, 33, 34, 141], "analaysi": [7, 24], "sleep": [7, 13, 16, 24, 30, 42, 60, 71, 75, 86, 92, 98, 99, 100, 103, 104, 110, 114, 119, 121, 122, 124, 133, 135, 141, 142], "cognit": [7, 24], "experi": [7, 14, 24, 29, 32, 69, 73], "stage": [7, 13, 24, 29, 30, 32, 71, 75, 86, 92, 98, 99, 100, 103, 104, 110, 114, 119, 121, 122, 124, 133, 135, 141, 142], "chambon2018": [7, 13, 24, 71, 75, 92, 99, 103, 110, 114, 119, 122, 124, 133, 135, 141], "eldele2021": [7, 13, 24, 71, 75, 92, 100, 103, 110, 114, 119, 122, 124, 133, 135, 141], "big": [7, 13, 24, 71, 76, 110, 113, 119, 141, 142], "tuh": [7, 13, 14, 15, 23, 24, 71, 77, 110, 113, 119, 141, 142], "corpu": [7, 13, 14, 15, 23, 24, 71, 76, 77, 110, 113, 119, 141, 142], "bcicomp": 8, "0x7fe224bd0190": 8, "decid": [8, 28, 38, 39, 40, 42, 51, 53, 54], "about": [8, 9, 10, 12, 26, 30, 72, 78, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 133, 136], "length": [8, 9, 11, 12, 14, 16, 26, 27, 30, 46, 63, 71, 81, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 108, 113, 114, 142], "preced": 8, "create_windows_from_target_channel": [8, 142], "cnosid": 8, "finer": [8, 142], "fexion": 8, "idx_train": 8, "idx_valid": 8, "n_out_chan": 8, "long": [8, 14, 29, 30, 73, 86], "respons": [8, 9, 10, 11, 28, 30], "manag": [8, 9, 10, 11, 28, 30, 31], "inherit": [8, 9, 10, 11, 26, 28, 30, 68, 120], "neuralnetregressor": 8, "logic": [8, 9, 10, 11, 28, 30, 32], "pearson": 8, "pearson_r_scor": 8, "net": [8, 26, 68, 100, 104, 120, 126, 127, 128], "mseloss": [8, 120], "valid_pearson_r": 8, "train_pearson_r": 8, "train_r2": 8, "valid_r2": 8, "5083": 8, "1251": [8, 22], "5570": 8, "7337": 8, "1507": 8, "6139": 8, "2861": 8, "7986": 8, "3712": 8, "3153": [8, 27], "2582": 8, "1510": 8, "3971": 8, "1712": 8, "184": [8, 13, 141], "112": 8, "plot_bcic_iv_4_ecog_tri": [8, 13, 141], "test": [9, 10, 11, 16, 21, 24, 25, 27, 28, 30, 33, 68, 71, 73, 74, 92, 97, 110, 114, 117, 119, 120, 133, 141, 142], "adapt": [9, 11, 16, 88, 89, 90, 100, 101, 102], "distribut": [9, 10, 29, 46, 138], "individu": [9, 10, 11, 12, 26, 27, 68, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 120, 142], "integr": [9, 10, 32], "omit": [9, 37], "downsampl": [9, 10, 111], "apply_on_arrai": [9, 10, 12, 110], "0x7fe22477c850": [9, 21], "0x7fe221574130": 9, "take": [9, 10, 11, 16, 17, 29, 31, 54, 82, 84, 87, 91, 100], "everi": [9, 10, 11, 12, 14, 18, 22, 29, 32, 73, 84, 87, 91], "consecut": [9, 10, 11, 52, 66, 103, 114, 121, 124], "simplifi": [9, 10, 122, 142], "rather": [9, 10], "freez": [9, 10, 142], "sequencesampl": [9, 10, 11, 142], "n_window": [9, 10, 11, 22, 84, 121, 124], "n_windows_strid": [9, 10, 11, 124], "maxim": [9, 10, 30, 37], "overlap": [9, 10, 11, 79, 80, 81, 108, 113, 114], "372": 9, "383": 9, "implement": [9, 10, 14, 16, 26, 29, 46, 54, 63, 68, 84, 88, 89, 90, 91, 93, 94, 120, 130, 131, 137, 142], "get_center_label": [9, 10], "isinst": [9, 10], "ceil": [9, 10, 102], "astyp": [9, 10], "appear": [9, 10, 11, 70], "lot": [9, 10, 11, 68, 120], "night": [9, 10, 11], "spent": [9, 10, 11], "imbalanc": [9, 10, 11], "avoid": [9, 10, 11, 12, 14, 16, 22, 27, 29, 75, 142], "frequent": [9, 10, 11], "compute_class_weight": [9, 10, 11], "vector": [9, 10, 108, 111], "timedistribut": [9, 10, 142], "feat_extractor": [9, 10], "return_feat": [9, 10, 86, 98, 99, 100], "start_dim": [9, 10], "len_last_lay": [9, 10], "neuralnetclassifi": [9, 10, 11, 28, 30], "mass": 9, "ss3": 9, "speak": [9, 11, 14], "recommend": [9, 11, 16, 29, 30, 35, 87, 139, 140], "balanced_accuraci": [9, 10], "criterion__weight": [9, 10, 11], "tensor": [9, 10, 11, 22, 26, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 86, 87, 91, 96, 98, 99, 100, 101, 102, 103, 120, 125, 129, 130], "2136": 9, "5768": 9, "0888": 9, "6372": 9, "5955": 9, "2036": 9, "4788": 9, "6676": 9, "4785": 9, "2324": 9, "4033": 9, "0966": 9, "2102": 9, "6337": 9, "4906": 9, "2888": 9, "3407": 9, "1149": [9, 29], "2465": 9, "6790": 9, "4720": 9, "3993": 9, "2126": 9, "4517": 9, "4013": 9, "6235": 9, "4889": 9, "5294": 9, "0967": 9, "2768": 9, "4076": [9, 30], "6179": 9, "4829": 9, "5755": 9, "9662": 9, "5927": 9, "5671": [9, 22], "3689": 9, "4745": 9, "6251": 9, "8904": 9, "7076": 9, "5786": 9, "2952": 9, "4972": 9, "6877": 9, "8148": 9, "7154": 9, "5876": 9, "3450": 9, "4704": 9, "6860": 9, "7449": 9, "5196": 9, "5269": 9, "6322": 9, "4930": 9, "spatial_conv": 9, "kernel_s": [9, 10, 92, 101, 142], "feature_extractor": [9, 10], "ident": [9, 11, 32, 45, 68, 85, 120], "relu": [9, 10, 91], "maxpool2d": 9, "dilat": [9, 10, 11, 27, 92], "ceil_mod": [9, 10], "end_dim": [9, 10], "inplac": [9, 10, 16], "in_featur": [9, 10], "816": 9, "out_featur": [9, 10], "bia": [9, 10, 11], "sharex": [9, 10, 11], "plot_confusion_matrix": [9, 10, 11, 27, 28, 142], "confusion_mat": [9, 10, 11, 27, 28, 135], "class_nam": [9, 10, 11, 27, 28, 135], "wake": [9, 10, 11, 75], "rem": [9, 10, 11], "33": [9, 11, 16, 18, 27], "56": [9, 11, 16, 18, 27], "34": [9, 11, 16, 27, 30], "42": [9, 11, 16, 18, 27, 30, 33, 141], "194": 9, "28": [9, 11, 16, 18, 27, 29, 30, 33, 89, 90, 141], "37": [9, 11, 16, 18, 22, 26, 27], "hypnogram": [9, 10, 11], "overlaid": [9, 10, 11], "correctli": [9, 10, 11, 92, 140, 142], "identifi": [9, 10, 11, 81, 114], "amount": [9, 10, 11, 16, 111], "expert": [9, 10, 11], "annot": [9, 10, 11, 18, 19, 21, 27, 28, 29, 30, 32, 108, 142], "text": [9, 10, 11, 29, 135], "150": [9, 10, 11, 73], "22222222222223": [9, 10, 11], "despit": [9, 10, 11], "held": [9, 10], "includ": [9, 11, 12, 14, 28, 29, 30, 32, 39, 58, 74, 106, 108, 109, 113, 114, 136, 137], "especi": [9, 30, 32], "ah": [9, 10, 11], "hac": [9, 10, 11], "jjl": [9, 10, 11], "obery\u00e9": [9, 10, 11], "bme": [9, 10, 11], "al": [9, 10, 11, 26, 73, 85, 86, 88, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 128], "lan": [9, 10, 11], "jm": [9, 10, 11], "pch": [9, 10, 11], "rg": [9, 10, 11], "mietu": [9, 10, 11], "je": [9, 10, 11], "moodi": [9, 10, 11], "gb": [9, 10, 11], "peng": [9, 10, 11, 44, 61], "he": [9, 10, 11], "620": [9, 11, 13, 141], "plot_sleep_staging_chambon2018": [9, 13, 141], "attent": [10, 84, 87, 100], "divyesh": [10, 142], "narayanan": [10, 142], "400": [10, 11, 142], "speed": [10, 11, 16, 142], "0x7fe211cf81f0": 10, "fpz": 10, "cz": [10, 12, 26, 112, 118], "give": [10, 12, 22, 26, 47, 64, 108, 136], "pz": [10, 12], "oz": 10, "130": [10, 19], "reject": [10, 19, 113, 114, 115], "flat": [10, 19, 38, 56, 113, 114, 115], "bad": [10, 14, 19, 108, 109, 112, 136], "slower": [10, 14, 19], "futur": [10, 19, 26, 30, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104], "0x7fe211cf9840": 10, "133": [10, 11], "sleepstagereldele2021": [10, 26, 142], "1471": 10, "1815": 10, "3459": 10, "1795": 10, "4748": 10, "2764": 10, "8805": 10, "1955": 10, "2186": 10, "1537": 10, "9641": 10, "4550": 10, "4941": 10, "2256": 10, "2200": 10, "2159": 10, "9905": 10, "_mrcnn": 10, "gelu": 10, "approxim": [10, 48, 49, 50], "features1": 10, "conv1d": [10, 11, 104], "batchnorm1d": [10, 11], "ep": [10, 117], "momentum": [10, 26, 85, 89, 90, 97], "affin": 10, "track_running_stat": 10, "maxpool1d": [10, 11], "features2": 10, "afr": [10, 100], "_sebasicblock": 10, "conv1": 10, "bn1": 10, "conv2": 10, "bn2": 10, "se": 10, "_selay": 10, "avg_pool": 10, "adaptiveavgpool1d": [10, 102], "output_s": [10, 92, 103], "fc": [10, 100], "sigmoid": [10, 68, 120], "_tce": 10, "modulelist": 10, "_encoderlay": 10, "self_attn": 10, "_multiheadedattent": 10, "conv": [10, 11, 104], "_causalconv1d": 10, "feed_forward": 10, "_positionwisefeedforward": 10, "w_1": 10, "120": [10, 73, 100], "w_2": 10, "sublayer_output": 10, "_sublayeroutput": 10, "norm": [10, 84], "layernorm": 10, "06": [10, 11, 16, 18, 27, 33, 141], "elementwise_affin": 10, "n4": 10, "_classif": 10, "undefinedmetricwarn": 10, "ill": 10, "zero_divis": 10, "behavior": [10, 30, 32, 68, 120, 142], "_warn_prf": 10, "averag": [10, 12, 27, 29, 31, 32, 68, 84, 92, 112, 120, 125], "msg_start": 10, "02": [10, 11, 13, 16, 18, 23, 26, 27, 33, 141], "faster": [10, 16, 27, 68, 111, 120], "89": [10, 16, 18, 27], "eldel": [10, 100], "et": [10, 26, 73, 85, 86, 88, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 128], "With": [10, 100], "vol": [10, 100], "29": [10, 11, 16, 23, 27, 31, 100, 141], "pp": [10, 37, 44, 47, 48, 49, 50, 52, 55, 61, 64, 66, 87, 100], "809": [10, 100], "818": [10, 100], "1109": [10, 84, 88, 89, 90, 100], "tnsre": [10, 89, 90, 100], "3076234": [10, 100], "567": [10, 13, 141], "plot_sleep_staging_eldele2021": [10, 13, 141], "look": [11, 12, 17, 22, 26, 29, 69, 122], "simpler": 11, "current": [11, 68, 112, 120, 136], "seq2seq": 11, "written": [11, 119, 138], "veri": [11, 29, 32, 71, 114], "short": [11, 12, 29, 32, 70, 86], "too": 11, "small": [11, 12, 27, 29, 136], "theo": [11, 142], "gnassoun": [11, 142], "omar": [11, 142], "emir": 11, "zero": [11, 16, 52, 66, 108, 111, 114, 117, 142], "median": 11, "unit": [11, 26, 108, 140], "interquartil": 11, "upsampl": [11, 104, 111], "light": [11, 135], "No": [11, 19, 26, 29, 32, 70], "robust_scal": 11, "0x7fe224745090": 11, "shorter": [11, 142], "fulli": [11, 29, 30, 84, 87, 89, 90, 91], "usleep": [11, 26, 142], "in_chan": [11, 26, 31, 85, 93, 94, 95, 96, 97, 102, 104, 105], "with_skip_connect": [11, 104], "balanced_accuracy_multi": 11, "deactiv": 11, "set_param": [11, 68, 120], "callbacks__valid_acc": 11, "306": 11, "even": [11, 26, 29, 32, 68, 69, 104, 120], "odd": [11, 91, 104], "trigger": 11, "intern": [11, 14, 16, 20, 21, 44, 46, 47, 48, 49, 50, 61, 63, 64, 110], "aten": 11, "src": 11, "nativ": 11, "cpp": 11, "1008": 11, "2040": 11, "6129": 11, "1707": 11, "5807": 11, "1662": [11, 35], "2224": 11, "5430": 11, "1594": 11, "5866": 11, "7319": 11, "3464": 11, "4928": 11, "1853": 11, "6026": 11, "7256": 11, "3000": [11, 22, 31], "encod": [11, 100, 104], "_encoderblock": 11, "1500": [11, 26, 102, 122], "block_prepool": 11, "102": [11, 22, 23, 141], "maxpool": [11, 104], "750": 11, "405": 11, "375": 11, "726": 11, "188": 11, "constantpad1d": 11, "377": 11, "94": [11, 16], "160": [11, 73], "004": 11, "960": 11, "49": [11, 16, 18, 27], "565": 11, "876": 11, "108": 11, "536": 11, "152": [11, 142], "115": 11, "368": 11, "214": 11, "228": 11, "338": 11, "bottom": 11, "302": 11, "452": 11, "698": 11, "elu": [11, 84, 85, 89, 90, 95], "604": 11, "_decoderblock": 11, "block_preskip": 11, "898": 11, "block_postskip": 11, "428": [11, 142], "641": 11, "786": 11, "65": [11, 16, 18], "304": [11, 142], "323": 11, "912": 11, "156": 11, "216": 11, "863": 11, "154": 11, "83": [11, 16, 18, 22, 32], "237": 11, "635": 11, "110": 11, "515": [11, 142], "520": [11, 142], "324": 11, "060": 11, "44": [11, 16, 18, 27, 30, 73], "376": 11, "645": 11, "195": 11, "363": 11, "727": 11, "225": 11, "161": [11, 142], "126": 11, "51": [11, 16, 18], "522": 11, "tanh": 11, "avgpool1d": 11, "482": 11, "011": 11, "91": [11, 16, 27], "93": [11, 16, 18, 44, 61], "52": [11, 16, 26, 27], "197": [11, 142], "84": [11, 16], "399": 11, "perslev": [11, 104, 121], "darkner": [11, 104, 121], "kempfner": [11, 104, 121], "nikol": [11, 104, 121], "jennum": [11, 104, 121], "pj": [11, 104, 121], "igel": [11, 104, 121], "resili": [11, 104, 121], "npj": [11, 104, 121], "digit": [11, 22, 104, 121], "med": [11, 104, 121], "72": [11, 16, 18, 30, 104, 121], "867": [11, 13, 141], "118": [11, 13, 141], "plot_sleep_staging_usleep": [11, 13, 141], "showcas": [12, 29, 32], "templ": [12, 76, 77, 142], "univers": [12, 73, 76, 77, 142], "hospit": [12, 76, 77, 142], "www": [12, 14, 35, 69, 76, 77], "isip": [12, 14, 76, 77], "piconepress": [12, 14, 76, 77], "tuh_eeg": [12, 14, 22, 76, 77], "shtml": [12, 76, 77], "c_tueg": [12, 76], "luka": [12, 17, 18, 19, 20, 21, 22, 31, 35, 142], "gemein": [12, 17, 18, 19, 20, 21, 22, 31, 142], "tempfil": [12, 16, 18], "error": [12, 22, 27, 30, 31, 81, 107, 113, 114, 115, 120, 136, 142], "messag": [12, 14, 22, 136], "creation": [12, 22], "mock": [12, 22], "want": [12, 14, 18, 21, 22, 24, 28, 29, 30, 32, 68, 120, 137, 140], "disconsid": 12, "section": [12, 22, 73, 139], "_tuhmock": [12, 22], "noqa": [12, 22], "f811": [12, 22], "firstli": [12, 21], "complet": [12, 14, 16, 17, 27, 68, 120], "read": [12, 14, 16, 17, 18, 19, 76, 77, 82, 114], "tuh_path": [12, 14, 22], "pars": 12, "path": [12, 14, 16, 17, 18, 19, 22, 32, 69, 71, 76, 77, 82, 83], "patient": [12, 69], "id": [12, 18, 20, 21, 27, 28, 29, 30, 32, 71, 76, 77, 82, 113, 114, 142], "sort": [12, 27, 28, 142], "chronolog": [12, 76, 77], "year": [12, 35], "month": [12, 35], "dai": [12, 70], "segment": [12, 16, 29, 32, 87, 108], "regard": 12, "gender": [12, 18, 22, 76, 77], "insert": [12, 22, 92], "job": [12, 68, 76, 82, 108, 111, 113, 114, 119, 120], "load": [12, 16, 17, 19, 22, 23, 69, 71, 74, 75, 77, 82, 85, 97, 110, 113, 114, 119, 141, 142], "target_nam": [12, 14, 18, 22, 31, 71, 72, 76, 77, 82, 142], "add_physician_report": [12, 22, 76, 77], "__name__": 12, "statist": 12, "plt_histogram": 12, "df_of_ages_gend": 12, "ylim": 12, "show_titl": 12, "dafaram": 12, "male_df": 12, "female_df": 12, "figur": [12, 27, 28, 29, 70, 84, 135], "suptitl": 12, "95": [12, 16, 27, 68, 120], "male": 12, "hist": 12, "bin": 12, "green": 12, "orient": 12, "horizont": 12, "axhlin": 12, "1f": [12, 32], "std": [12, 29, 44, 61, 73], "barh": [12, 29], "height": [12, 29], "width": [12, 30, 102, 108], "xlim": 12, "upper": [12, 16, 108], "left": [12, 27, 28, 29, 40, 68, 70, 73, 120], "ytick": 12, "gca": 12, "invert_xaxi": 12, "femal": [12, 73], "122": 12, "subplots_adjust": 12, "wspace": 12, "hspace": 12, "count": [12, 68, 120], "labelpad": 12, "durat": [12, 29, 30, 31, 106, 108, 114], "least": [12, 108, 122, 123, 132], "five": [12, 69], "select_by_dur": 12, "inf": 12, "determin": [12, 30, 68, 90, 120], "d_i": 12, "ones": [12, 26, 121, 142], "split": [12, 15, 20, 23, 24, 26, 31, 68, 71, 74, 85, 97, 114, 120, 141, 142], "discard": [12, 75], "incomplet": 12, "configur": [12, 16, 27, 29, 32], "subdivis": 12, "le": 12, "repres": [12, 21, 48, 49, 50, 87], "re": [12, 21, 68, 112, 120, 136], "referenc": [12, 112], "short_ch_nam": 12, "a1": 12, "a2": 12, "fp1": 12, "fp2": 12, "f3": 12, "f4": 12, "c3": [12, 26], "c4": [12, 26], "p3": 12, "p4": 12, "o1": [12, 118], "o2": 12, "f7": 12, "f8": 12, "t3": 12, "t4": 12, "t5": 12, "t6": 12, "fz": 12, "subdivid": 12, "refer": [12, 35, 37, 38, 39, 40, 42, 44, 46, 47, 48, 49, 50, 52, 55, 56, 57, 58, 60, 61, 63, 64, 66, 69, 70, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 112, 118, 121, 123, 130, 135], "ar_ch_nam": 12, "ref": 12, "le_ch_nam": 12, "ar_ch_map": 12, "ch_name": [12, 14, 17, 26, 79, 107, 118], "le_ch_map": 12, "ch_map": 12, "select_by_channel": 12, "endswith": 12, "seta": 12, "kei": [12, 21, 26, 27, 28, 71, 72, 78, 113, 114], "recod": 12, "setb": 12, "issubset": 12, "region": [12, 108], "micro": 12, "volt": 12, "clip": 12, "outlier": 12, "800": [12, 18], "common": [12, 14, 112, 139, 142], "custom_rename_channel": 12, "unexpect": [12, 136], "rename_channel": 12, "custom_crop": 12, "include_tmax": [12, 106], "bigger": 12, "set_eeg_refer": [12, 112], "ref_channel": [12, 112], "ch_type": [12, 26, 112], "pick_channel": [12, 107, 110], "a_min": 12, "a_max": 12, "parallel": [12, 14, 15, 23, 24, 71, 75, 76, 82, 89, 90, 91, 108, 110, 111, 113, 114, 119, 141, 142], "addition": [12, 18, 26, 35, 68, 120, 131], "serial": [12, 15, 18, 23, 24, 71, 75, 110, 113, 119, 141, 142], "lazi": [12, 15, 16, 23, 24, 77, 85, 97, 113, 141, 142], "capabl": [12, 16, 29, 32, 68, 120], "automat": [12, 14, 26, 69, 86, 102, 112, 142], "reload": [12, 16, 119], "machin": [12, 14, 16, 29, 32, 35, 37, 40, 44, 52, 55, 57, 61, 66, 68, 120], "build": [12, 27, 32, 138, 140], "core": [12, 16, 32], "out_path": 12, "mkdtemp": [12, 18], "directori": [12, 16, 18, 27, 69, 71, 76, 77, 82, 119, 140], "tuh_preproc": 12, "concat_d": [12, 16, 18, 113, 114, 115, 119], "save_dir": [12, 16, 119], "readi": [12, 16, 17, 18, 19, 31], "model": [12, 14, 21, 33, 35, 44, 61, 68, 71, 72, 74, 110, 113, 114, 117, 119, 120, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 141, 142], "train": [12, 14, 20, 21, 33, 68, 71, 73, 74, 78, 92, 97, 110, 114, 117, 119, 120, 133, 141, 142], "disk": [12, 14, 16, 76, 77, 114], "tuh_window": [12, 22], "124": [12, 13, 17, 19, 27, 141], "plot_tuh_eeg_corpu": [12, 13, 141], "07": [13, 16, 18, 27, 29], "362": 13, "applied_exampl": [13, 141], "09": [13, 16, 18, 27, 141], "111": [13, 141], "sake": 14, "etc": [14, 28, 30, 110], "preprocess": [14, 15, 18, 19, 20, 21, 22, 23, 24, 26, 31, 71, 75, 137, 141, 142], "continu": [14, 16, 20, 72, 73, 79, 80, 81, 113, 114, 139, 142], "fast": [14, 16, 32, 133], "expens": [14, 68, 120], "ultim": 14, "becom": [14, 16, 29], "imposs": 14, "tb": 14, "potenti": [14, 16, 32, 139], "issu": [14, 16, 136, 142], "overhead": [14, 114], "accommod": 14, "window": [14, 16, 18, 19, 21, 26, 68, 71, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 111, 113, 114, 120, 121, 122, 123, 124, 131, 132, 142], "overal": 14, "though": [14, 16, 29, 32], "impact": [14, 27, 30], "dispatch": 14, "enabl": [14, 16, 27, 32, 68, 70, 102, 120, 142], "fif": [14, 16, 18, 71, 82, 142], "edf": [14, 16, 17, 19, 22], "itertool": [14, 16], "product": [14, 16], "seaborn": [14, 29, 30], "sn": [14, 29, 30], "tuhabnorm": [14, 18, 142], "deep4net": [14, 26, 31, 142], "affect": [14, 27, 128], "algorithm": [14, 26, 28, 29, 30, 32], "set_num_thread": 14, "thread": 14, "autom": [14, 29], "abnorm": [14, 77], "slide": [14, 31, 84, 113], "bundl": 14, "prepar": [14, 16, 20, 32], "load_example_data": 14, "window_len_": 14, "n_record": [14, 122], "creat": [14, 16, 17, 18, 19, 20, 21, 31, 68, 71, 78, 79, 80, 81, 112, 113, 114, 120, 131, 142], "bool": [14, 26, 42, 46, 47, 48, 49, 50, 60, 64, 68, 69, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 123, 124, 128, 131, 133, 135], "windows_d": [14, 16], "assum": [14, 26, 68, 106, 120, 125, 129, 142], "patholog": [14, 18, 77], "window_len_sampl": 14, "xxx": [14, 95], "itself": [14, 29, 30, 136], "drop_bad": [14, 81, 114], "create_example_model": 14, "kind": [14, 26], "str": [14, 22, 26, 27, 28, 29, 36, 68, 69, 71, 72, 74, 76, 77, 78, 81, 82, 85, 87, 92, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 128, 135], "n_filters_tim": [14, 26, 31, 85, 87, 97], "filter_time_length": [14, 26, 85, 87, 97], "n_filters_spat": [14, 26, 31, 85, 97], "pool_time_length": [14, 26, 85, 87, 97], "pool_time_strid": [14, 26, 85, 87, 97], "split_first_lay": [14, 26, 85, 95, 97], "batch_norm": [14, 26, 85, 97], "batch_norm_alpha": [14, 26, 85, 89, 90, 95, 97], "drop_prob": [14, 26, 30, 85, 87, 88, 89, 90, 93, 94, 97, 101, 102], "elif": [14, 31], "n_filters_2": [14, 31, 85], "filter_length_2": [14, 85], "n_filters_3": [14, 31, 85], "filter_length_3": [14, 85], "n_filters_4": [14, 31, 85], "filter_length_4": [14, 85], "first_pool_mod": [14, 85], "max": [14, 16, 26, 29, 85, 93, 97, 99, 102, 104, 108, 117], "later_pool_mod": [14, 85], "double_time_conv": 14, "stride_before_pool": [14, 31, 85], "valueerror": [14, 26, 31, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104], "run_train": 14, "serv": [14, 70, 72, 78], "loss_val": 14, "zero_grad": [14, 32], "256": [14, 26, 142], "minibatch": 14, "pin_memori": 14, "pin": 14, "n_repetit": 14, "repeat": [14, 136], "get": [14, 16, 17, 22, 27, 28, 29, 32, 68, 120], "folder": [14, 32, 69], "storag": 14, "tuh_eeg_abnorm": 14, "v2": 14, "cycl": 14, "combin": [14, 16, 71], "all_result": 14, "win_len_": 14, "model_kind": 14, "repetit": [14, 16, 73], "nrepetit": 14, "n": [14, 16, 22, 26, 27, 28, 29, 30, 32, 34, 37, 38, 39, 44, 46, 52, 55, 56, 58, 61, 63, 66, 84, 93, 94, 99, 130], "data_loading_start": 14, "data_loading_end": 14, "training_setup_start": 14, "worker_init_fn": 14, "training_setup_end": 14, "model_training_start": 14, "trained_model": 14, "model_training_end": 14, "del": 14, "data_prepar": 14, "training_setup": 14, "model_train": 14, "csv": 14, "results_df": 14, "fname": 14, "lazy_vs_eager_loading_result": 14, "to_csv": 14, "summar": 14, "catplot": 14, "row": [14, 22, 40, 71, 92, 135], "hue": 14, "col": 14, "strip": 14, "hardwar": [14, 16], "pretti": [14, 136], "worker": [14, 32, 131, 142], "speedup": 14, "benchmark_lazy_eager_load": [14, 23, 141], "basic": [15, 27, 29, 32, 33, 54, 71, 74, 91, 92, 97, 110, 114, 117, 119, 133, 135, 141, 142], "eager": [15, 23, 24, 77, 85, 97, 113, 141], "discret": [15, 23, 24, 71, 76, 113, 141, 142], "simplest": 16, "scenario": [16, 114], "act": [16, 112], "stai": [16, 27, 70], "aris": 16, "bottleneck": [16, 32, 89, 90, 102], "consider": 16, "solut": [16, 112], "clear": 16, "downsid": 16, "write": [16, 18], "cours": [16, 69], "whenev": 16, "up": [16, 17, 70, 104, 111, 142], "significantli": 16, "joblib": [16, 119], "made": [16, 18, 27, 91, 142], "remain": [16, 29, 32], "tradeoff": 16, "memory_profil": 16, "memory_usag": 16, "goe": 16, "prepare_data": 16, "n_rec": 16, "tmp_dir": 16, "temporarydirectori": 16, "overwrit": [16, 18, 68, 71, 72, 76, 77, 78, 83, 119, 120], "measur": 16, "peak": [16, 113, 114], "character": 16, "n_repet": 16, "all_n_rec": 16, "all_n_job": 16, "proc": 16, "time_taken": 16, "max_mem": 16, "3m": [16, 18, 27], "2k": 16, "491kb": 16, "131k": 16, "660kb": 16, "229k": 16, "794kb": 16, "328k": 16, "850kb": 16, "426k": 16, "53": [16, 22, 27], "894kb": 16, "524k": 16, "919kb": 16, "623k": 16, "910kb": 16, "721k": 16, "819k": 16, "929kb": 16, "912k": 16, "54": 16, "863kb": 16, "03m": 16, "934kb": 16, "13m": 16, "940kb": 16, "23m": 16, "942kb": 16, "33m": 16, "939kb": 16, "43m": 16, "938kb": 16, "52m": 16, "924kb": 16, "62m": [16, 18, 27], "72m": 16, "82m": 16, "933kb": 16, "92m": 16, "932kb": 16, "02m": 16, "923kb": 16, "11m": 16, "21m": 16, "31m": 16, "927kb": 16, "41m": 16, "931kb": 16, "950kb": 16, "952kb": 16, "947kb": 16, "951kb": 16, "93m": 16, "963kb": 16, "974kb": 16, "964kb": 16, "945kb": 16, "944kb": 16, "42m": 16, "918kb": 16, "911kb": 16, "897kb": 16, "899kb": 16, "900kb": 16, "01m": 16, "903kb": 16, "51m": 16, "935kb": 16, "61m": 16, "71m": 16, "957kb": 16, "80m": [16, 18, 27], "941kb": 16, "90m": 16, "00m": 16, "953kb": 16, "32m": 16, "937kb": 16, "91m": 16, "930kb": 16, "50m": [16, 27], "925kb": 16, "60m": [16, 18], "70m": 16, "914kb": 16, "959kb": 16, "969kb": 16, "22m": 16, "956kb": 16, "958kb": 16, "73m": 16, "973kb": 16, "85m": 16, "982kb": 16, "96m": 16, "980kb": 16, "06m": 16, "16m": 16, "961kb": 16, "26m": 16, "36m": 16, "943kb": 16, "45m": 16, "936kb": 16, "55m": 16, "916kb": 16, "65m": 16, "75m": [16, 18], "95m": 16, "0m": [16, 18, 27], "1m": [16, 18, 27], "912kb": 16, "2m": [16, 18, 27], "4m": [16, 18, 27], "5m": [16, 18, 27], "6m": [16, 18, 27], "920kb": 16, "7m": [16, 18], "917kb": 16, "8m": [16, 18, 27], "9m": [16, 27], "926kb": 16, "965kb": 16, "966kb": 16, "970kb": 16, "979kb": 16, "955kb": 16, "992kb": 16, "00mb": 16, "02mb": 16, "991kb": 16, "993kb": 16, "976kb": 16, "977kb": 16, "986kb": 16, "998kb": 16, "981kb": 16, "967kb": 16, "946kb": 16, "928kb": 16, "949kb": 16, "987kb": 16, "999kb": 16, "985kb": 16, "983kb": 16, "01mb": 16, "971kb": 16, "975kb": 16, "989kb": 16, "996kb": 16, "04mb": 16, "03mb": 16, "59": [16, 27], "05mb": 16, "63": [16, 18, 33, 141], "67": [16, 27, 32, 104], "997kb": 16, "995kb": 16, "990kb": 16, "968kb": 16, "978kb": 16, "73": 16, "76": [16, 18, 27], "78": [16, 75], "82": [16, 27, 29, 44, 61], "85": [16, 27, 28], "92": 16, "994kb": 16, "96": [16, 18, 27], "97": 16, "98": 16, "99": 16, "960kb": 16, "954kb": 16, "302gb": 16, "62k": 16, "5mb": [16, 18, 27], "5k": 16, "560kb": 16, "147k": 16, "684kb": 16, "262k": 16, "840kb": 16, "360k": 16, "892kb": 16, "451k": 16, "672kb": 16, "639k": 16, "754k": 16, "862k": 16, "983k": 16, "10m": 16, "20m": 16, "30m": 16, "948kb": 16, "962kb": 16, "44m": 16, "56m": 16, "67m": [16, 18], "984kb": 16, "79m": 16, "24m": 16, "35m": 16, "46m": 16, "57m": 16, "69m": 16, "40m": 16, "34m": 16, "78m": 16, "830kb": 16, "889kb": 16, "881kb": 16, "843kb": 16, "822kb": 16, "68m": 16, "796kb": 16, "76m": 16, "798kb": 16, "84m": 16, "791kb": 16, "773kb": 16, "768kb": 16, "09m": 16, "775kb": 16, "18m": 16, "772kb": 16, "27m": 16, "801kb": 16, "37m": [16, 27], "47m": 16, "825kb": 16, "819kb": 16, "846kb": 16, "77m": [16, 18], "86m": [16, 27], "872kb": 16, "878kb": 16, "866kb": 16, "908kb": 16, "921kb": 16, "922kb": 16, "812kb": 16, "907kb": 16, "873kb": 16, "854kb": 16, "810kb": 16, "728kb": 16, "709kb": 16, "652kb": 16, "648kb": 16, "634kb": 16, "629kb": 16, "624kb": 16, "647kb": 16, "640kb": 16, "661kb": 16, "682kb": 16, "714kb": 16, "698kb": 16, "720kb": 16, "723kb": 16, "737kb": [16, 18, 27], "749kb": 16, "771kb": 16, "770kb": 16, "804kb": 16, "828kb": 16, "835kb": 16, "844kb": 16, "855kb": 16, "880kb": 16, "884kb": 16, "885kb": 16, "902kb": 16, "909kb": 16, "853kb": 16, "891kb": 16, "879kb": 16, "860kb": 16, "876kb": 16, "865kb": 16, "862kb": 16, "864kb": 16, "896kb": 16, "886kb": 16, "838kb": 16, "767kb": 16, "711kb": 16, "706kb": 16, "691kb": 16, "695kb": 16, "686kb": 16, "678kb": 16, "673kb": 16, "689kb": 16, "703kb": 16, "712kb": 16, "726kb": 16, "736kb": 16, "747kb": 16, "754kb": 16, "765kb": 16, "795kb": 16, "787kb": 16, "827kb": 16, "832kb": 16, "857kb": 16, "875kb": 16, "859kb": 16, "882kb": 16, "988kb": 16, "972kb": 16, "06mb": 16, "282gb": 16, "90k": 16, "6mb": [16, 27], "01m46": 16, "mne_data": [16, 17, 19, 27, 69], "sc4001e0": 16, "psg": 16, "detect": [16, 17, 19, 30, 73], "sc4011e0": 16, "2507000": 16, "25070": 16, "sec": [16, 17, 18, 19, 31], "contigu": [16, 52, 66], "fir": [16, 108], "phase": [16, 42, 60, 108], "causal": [16, 108], "firwin": [16, 108], "ham": [16, 108], "0194": 16, "passband": 16, "rippl": 16, "stopband": 16, "attenu": [16, 108], "edg": [16, 108], "transit": [16, 37, 55, 108], "bandwidth": [16, 37, 55], "450": 16, "tmp": [16, 18], "tmpt_l6o78i": 16, "3260000": 16, "32600": 16, "708": [16, 18], "subdirectori": [16, 18, 71, 119], "open": [16, 18, 136, 137, 139], "isotrak": 16, "2884000": 16, "5391000": 16, "28840": 16, "53910": 16, "1975000": 16, "5235000": 16, "19750": 16, "52350": 16, "700": [16, 18], "match": [16, 18, 19, 26, 30, 71, 84], "exist": [16, 18, 22, 29, 31, 69, 71, 72, 78, 112, 119], "encount": [16, 18, 136], "mix": [16, 18, 46, 63, 130], "i_d": [16, 18], "tmp0o04vg7v": 16, "tmpjydabw2": 16, "tmp2htbpkw5": 16, "sub_df": 16, "groupbi": 16, "mib": 16, "without": [16, 26, 27, 29, 30, 32, 68, 120, 130, 142], "circl": 16, "advantag": [16, 29, 89, 90], "togeth": [16, 27, 142], "724": [16, 23, 141], "plot_benchmark_preprocess": [16, 23, 141], "create_from_x_i": 17, "fetch": [17, 19, 20, 21, 70, 73, 74], "imagin": [17, 19], "hand": [17, 19, 24, 28, 30, 70, 73], "feet": [17, 18, 19, 21, 27, 28, 29, 30, 32, 70, 73], "event_cod": [17, 19], "yet": [17, 19, 92, 140], "physionet_path": [17, 19], "eegbci": [17, 19], "load_data": [17, 19], "update_path": [17, 19], "io": [17, 18, 19, 27, 72, 106, 108, 118], "read_raw_edf": [17, 19], "stim_channel": [17, 19], "eegmmidb": [17, 19], "s022": [17, 19], "s022r05": [17, 19], "19999": [17, 19], "994": [17, 19], "s022r06": [17, 19], "s022r09": [17, 19], "s022r10": [17, 19], "s022r13": [17, 19], "s022r14": [17, 19], "ani": [17, 18, 26, 27, 29, 32, 68, 100, 108, 112, 120, 140], "get_data": 17, "500": [17, 19, 28, 122, 142], "rawarrai": [17, 19, 31, 81], "float64": [17, 19, 31], "20000": 17, "manipul": 17, "x_i": 17, "y_i": 17, "window_ind": 17, "start_ind": 17, "stop_ind": 17, "002": [17, 23, 141], "plot_custom_dataset_exampl": [17, 23, 141], "load_concat_dataset": [18, 142], "urllib3": [18, 27], "connectionpool": [18, 27], "1061": [18, 27], "insecurerequestwarn": [18, 27], "unverifi": [18, 27], "request": [18, 27, 112, 136], "host": [18, 27], "lampx": [18, 27], "tugraz": [18, 27], "ad": [18, 19, 27, 71, 76, 77, 102, 104, 112, 142], "certif": [18, 27], "verif": [18, 27], "readthedoc": [18, 27], "en": [18, 27], "advanc": [18, 27, 138], "19k": [18, 27], "1kb": 18, "8k": [18, 27], "106kb": [18, 27], "3k": [18, 27], "230kb": [18, 27], "209k": [18, 27], "404kb": [18, 27], "432k": [18, 27], "864k": 18, "36mb": 18, "64mb": 18, "53m": 18, "16mb": 18, "25mb": 18, "0mb": 18, "9mb": [18, 27], "1mb": [18, 27], "2mb": [18, 27], "8mb": [18, 27], "3mb": [18, 27], "4mb": [18, 27], "7mb": [18, 27], "232gb": 18, "889k": [18, 27], "41mb": [18, 27], "72mb": [18, 27], "29mb": 18, "74m": [18, 27], "42mb": 18, "249gb": 18, "event": [18, 19, 20, 21, 26, 27, 28, 29, 30, 32, 75, 81, 113, 114], "skip": [18, 22, 29, 32, 91, 104], "fn": [18, 110], "0x7fe2249244c0": 18, "concat": [18, 71, 84, 113, 114, 119], "json": [18, 71, 82, 142], "hold": [18, 71, 72, 78, 113, 114], "due": [18, 32, 142], "tmpdir": 18, "temporari": [18, 142], "tmpnq6gzmqw": 18, "complianc": 18, "upon": [18, 26], "dataset_load": 18, "ids_to_load": [18, 82], "3868": 18, "386": 18, "left_hand": [18, 21, 27, 28, 29, 30, 32], "right_hand": [18, 21, 27, 28, 29, 30, 32], "tongu": [18, 21, 27, 28, 29, 30, 32, 70], "again": [18, 22, 29], "epo": [18, 71, 82], "windows_dataset_load": 18, "962": [18, 23, 141], "plot_load_save_dataset": [18, 23, 141], "create_from_mne_raw": 19, "create_from_mne_epoch": 19, "t0": 19, "t1": 19, "t2": 19, "point": [19, 20, 26, 70, 112, 116, 117], "beforehand": 19, "list_of_epoch": [19, 80], "baselin": [19, 26], "Not": [19, 26], "metadata": [19, 26, 71, 78, 113, 120, 121, 122, 123, 124], "correct": [19, 26, 32, 68, 88, 89, 90, 91, 93, 94, 120, 142], "381": [19, 23, 141], "plot_mne_dataset_exampl": [19, 23, 141], "daniel": [20, 35, 142], "wilson": [20, 142], "dan": [20, 142], "wil": 20, "break": [20, 70], "place": [20, 31, 92, 106, 118], "legaci": 20, "inst": [20, 107, 108, 109, 112], "criteria": [20, 68, 120], "subset_nam": 20, "232164": 20, "554": [20, 23, 141], "plot_moabb_dataset_exampl": [20, 23, 141], "aim": [21, 22], "dictionari": [21, 26, 68, 71, 74, 108, 120], "string": [21, 22, 26, 35, 40, 48, 49, 50, 68, 71, 108, 109, 110, 119, 120, 128], "entri": [21, 107], "0x7fe224cc15d0": 21, "0x7fe2214876d0": 21, "0x7fe221487790": 21, "0x7fe2ed0687f0": 21, "0x7fe2ed11fac0": 21, "0x7fe2ed11fa30": 21, "integ": [21, 22, 27, 28, 40, 52, 57, 66, 71, 108, 109], "0x7fe2214847f0": 21, "0x7fe2ed11c8b0": 21, "0x7fe2ed11d060": 21, "0x7fe2ed11cac0": 21, "0x7fe2ed11f3a0": 21, "0x7fe2ed11c520": 21, "0x7fe2ed11d240": 21, "similarli": [21, 32], "0x7fe221486980": 21, "0x7fe221486110": 21, "0x7fe2214878b0": 21, "0x7fe2ed11dcc0": 21, "519": [21, 23, 141], "plot_split_dataset": [21, 23, 141], "welcom": 22, "ll": 22, "guid": [22, 29, 139], "log": [22, 26, 27, 32, 68, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 106, 108, 109, 111, 112, 113, 114, 120, 142], "excess": 22, "v1": [22, 32], "02_tcp_le": 22, "00000058": 22, "s001": 22, "01_tcp_ar": 22, "099": 22, "00009932": 22, "s004": 22, "03_tcp_ar_a": 22, "123": 22, "00012331": 22, "s0": 22, "00000000": 22, "149": 22, "00014928": 22, "ndarrai": [22, 47, 64, 68, 111, 116, 117, 120, 124, 131, 132], "92922518": 22, "22477157": 22, "12493701": 22, "28417889": 22, "13578887": 22, "56835277": 22, "25153176": 22, "7638324": 22, "14345092": 22, "30167542": 22, "68056549": 22, "70380673": 22, "70052629": 22, "21543634": 22, "96330007": 22, "02736802": 22, "65902848": 22, "15756383": 22, "38658058": 22, "04194231": 22, "15447331": 22, "set_descript": [22, 32, 71, 72, 78], "ind": 22, "16017832": 22, "11754766": 22, "6515615": 22, "50407195": 22, "7429778": 22, "9292252": 22, "86039335": 22, "5169721": 22, "0308012": 22, "1209397": 22, "5210943": 22, "2247716": 22, "373041": 22, "14827406": 22, "25829056": 22, "1486133": 22, "15352039": 22, "30362263": 22, "939559": 22, "5686462": 22, "5503989": 22, "3299779": 22, "3865806": 22, "7443461": 22, "1792846": 22, "25878426": 22, "5670986": 22, "2997373": 22, "0537782": 22, "4429058": 22, "05458383": 22, "000525": 22, "66521484": 22, "15447332": 22, "dtype": [22, 30, 142], "float32": 22, "2600": 22, "3600": [22, 75], "dl": 22, "batch_i": 22, "batch_ind": 22, "simpli": [22, 26], "8024": 22, "4564": 22, "4433": 22, "7404": 22, "2522": [22, 30], "0508": 22, "4418": 22, "5201": 22, "2037": 22, "0273": 22, "0506": 22, "1677": 22, "1145": 22, "7075": 22, "1768": 22, "0260": 22, "7216": 22, "2742": 22, "3986": 22, "3912": 22, "8000": 22, "0593": 22, "8097": 22, "1729": 22, "6267": 22, "8419": 22, "3996": 22, "6685": 22, "9266": 22, "1319": 22, "1409": 22, "6246": 22, "6229": 22, "5953": 22, "3169": 22, "4604": 22, "2885": 22, "0168": 22, "6279": 22, "6533": 22, "7673": 22, "6671": 22, "0448": 22, "1422": 22, "5395": 22, "4664": 22, "1882": 22, "2031": 22, "6282": 22, "4535": 22, "8585": 22, "2657": 22, "9942": 22, "3878": 22, "1360": 22, "9132": 22, "9481": 22, "5033": 22, "3406": 22, "6089": 22, "9883": 22, "2919": 22, "3796": 22, "8036": 22, "7666": 22, "8174": 22, "3829": 22, "1508": 22, "8516": 22, "0426": 22, "1322": 22, "4122": 22, "2526": 22, "9711": 22, "6890": 22, "4660": 22, "5510": 22, "3613": 22, "0280": 22, "1350": 22, "2249": 22, "9406": 22, "7754": 22, "7664": 22, "1807": 22, "8206": 22, "1281": 22, "1607": 22, "9353": 22, "0165": [22, 29], "6509": 22, "7276": 22, "2137": 22, "5619": 22, "0408": 22, "9825": 22, "3648": 22, "6978": 22, "8943": 22, "2374": 22, "4398": 22, "8218": 22, "5172": 22, "2975": 22, "0311": 22, "1602": 22, "1175": 22, "6516": 22, "5041": 22, "7430": 22, "9292": 22, "8604": 22, "5170": 22, "0308": 22, "1209": 22, "2248": 22, "3730": 22, "1483": 22, "2583": 22, "1486": 22, "1535": 22, "1249": 22, "3036": 22, "9396": 22, "5686": 22, "5504": [22, 30], "3300": 22, "3866": 22, "7443": 22, "1793": 22, "2588": 22, "2997": 22, "0419": 22, "0538": 22, "4429": 22, "0546": 22, "6652": 22, "1545": 22, "plot_tuh_discrete_multitarget": [22, 23, 141], "244": 23, "datasets_io": [23, 141], "fundament": [24, 25], "tune": [24, 25, 32, 33, 71, 74, 87, 92, 97, 110, 114, 117, 119, 133, 141, 142], "fake": [24, 25, 26, 33, 71, 72, 85, 92, 97, 105, 113, 125, 133, 141, 142], "auto_examples_python": 24, "auto_examples_jupyt": 24, "develop": [26, 29, 32, 136, 140], "particular": 26, "pierr": [26, 142], "guetschel": [26, 142], "suppos": 26, "stumbl": 26, "schirrmeist": [26, 27, 28, 29, 30, 31, 35, 73, 85, 96, 97, 135, 142], "2017": [26, 27, 28, 29, 30, 31, 35, 47, 48, 49, 50, 64, 73, 85, 86, 96, 97, 135], "articl": [26, 35], "mention": [26, 29], "novel": [26, 89, 90], "shallowconvnet": [26, 31], "fortun": 26, "publish": 26, "what": [26, 29, 68, 84, 113, 114, 120], "exact": 26, "visit": [26, 29], "api": [26, 140], "models_dict": [26, 68, 120, 142], "atcnet": [26, 142], "deepsleepnet": [26, 142], "eegconform": [26, 142], "eegitnet": [26, 142], "eegincept": [26, 90, 142], "eeginceptionerp": [26, 89, 142], "eeginceptionmi": [26, 142], "eegnetv1": 26, "eegnetv4": 26, "eegresnet": [26, 142], "hybridnet": 26, "sleepstagerblanco2020": [26, 142], "tcn": [26, 84, 142], "tidnet": [26, 142], "investig": 26, "docstr": [26, 142], "__doc__": 26, "schirrmeister2017": [26, 73, 85, 96, 97], "conv_nonlin": [26, 97], "pool_mod": [26, 93, 94, 97], "pool_nonlin": [26, 97], "normalis": [26, 85, 97], "chs_info": [26, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 120], "fill": [26, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104], "ch": [26, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104], "detail": [26, 29, 32, 46, 63, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 112, 118, 119, 133, 140], "input_window_second": [26, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 120], "alia": [26, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104], "softmax": [26, 27, 31, 68, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 120], "doc": [26, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 133, 140, 142], "infer": [26, 29, 30, 68, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 114, 120, 128], "attempt": [26, 84, 85, 86, 92, 95, 96, 97, 98, 99, 100, 101, 104, 112], "springenberg": [26, 27, 28, 29, 30, 31, 35, 85, 96, 97, 135], "fieder": [26, 27, 28, 29, 30, 31, 35, 85, 96, 97, 135], "glasstett": [26, 27, 28, 29, 30, 31, 35, 85, 96, 97, 135], "eggensperg": [26, 27, 28, 29, 30, 31, 35, 85, 96, 97, 135], "tangermann": [26, 27, 28, 29, 30, 31, 35, 85, 96, 97, 135], "hutter": [26, 27, 28, 29, 30, 35, 85, 96, 97, 135], "ball": [26, 27, 28, 29, 30, 31, 35, 73, 85, 96, 97, 135], "aug": [26, 35, 85, 96, 97, 135], "dx": [26, 35, 85, 89, 90, 96, 97, 135], "1002": [26, 27, 28, 29, 30, 35, 85, 96, 97, 135], "hbm": [26, 27, 28, 29, 30, 35, 85, 96, 97, 135], "23730": [26, 27, 28, 29, 30, 35, 85, 96, 97, 135], "__str__": 26, "976": [26, 27], "882": 26, "202": 26, "quit": [26, 29], "popular": 26, "collect": [26, 68, 73, 120], "1024": 26, "simul": 26, "create_info": 26, "randn": 26, "256hz": 26, "epochsarrai": 26, "randint": [26, 31], "99609": 26, "off": [26, 29, 30, 108], "wrapper": [26, 28, 29], "form": [26, 46, 63, 70, 71, 72, 78], "facilit": [26, 142], "easiest": [26, 29], "former": [26, 68, 84, 87, 91, 120], "prefix": [26, 68, 120], "module__": 26, "validsplit": [26, 30, 68, 120], "module__final_conv_length": 26, "along": [26, 72, 78, 111, 139, 142], "6654": 26, "0132": 26, "0088": 26, "0076": 26, "0075": 26, "0074": 26, "0072": 26, "0073": 26, "0071": 26, "840": 26, "924": 26, "844": 26, "pre": [26, 79, 112, 142], "via": [26, 28, 29, 30, 104, 108, 138, 139, 142], "And": [26, 27], "nan": [26, 129], "unit_mul": 26, "fiff_unitm_non": 26, "cal": 26, "fiffv_eeg_ch": 26, "coil_typ": 26, "fiffv_coil_eeg": 26, "fiff_unit_v": 26, "coord_fram": 26, "fiffv_coord_head": 26, "scanno": 26, "logno": 26, "target_from": 26, "miss": [26, 32, 84, 87, 89, 91, 93, 94, 95, 96, 98, 104, 142], "manual": [26, 27, 29, 139], "893": [26, 33, 141], "plot_basic_training_epoch": [26, 33, 141], "push": [27, 68, 120], "produc": [27, 29, 32, 100], "neighbour": 27, "simultan": [27, 89, 90], "sub": [27, 142], "afterward": [27, 29, 84, 87, 91, 112], "implicitli": [27, 29, 32], "timestep": 27, "user": [27, 68, 120, 136, 138, 139, 142], "mostli": 27, "runtim": 27, "rule": [27, 68, 120], "mathemat": 27, "neighbourhood": 27, "At": [27, 70], "redund": 27, "lead": [27, 29, 68, 112, 120], "gradient": [27, 142], "likelihood": [27, 68], "typic": [27, 68, 106, 120], "locat": [27, 69], "anyth": [27, 68], "runtimewarn": 27, "config": [27, 69], "mne_datasets_bnci_path": 27, "set_config": 27, "get_config": 27, "4kb": 27, "107kb": 27, "231kb": 27, "30mb": 27, "73mb": 27, "255gb": 27, "0kb": 27, "31mb": 27, "44mb": 27, "212gb": 27, "0x7fe2247788e0": 27, "definit": [27, 68, 120], "torchinfo": [27, 28, 29, 32, 92, 142], "tabl": [27, 28, 29, 30, 32, 84, 92, 142], "804": 27, "dens": [27, 92, 98, 99], "explicit": [27, 128], "deep4": [27, 28, 142], "nll_loss": 27, "4632": 27, "9341": 27, "2539": 27, "2250": 27, "percent": [27, 28], "misclass": [27, 28], "assign": [27, 28, 132], "train_misclass": [27, 28], "valid_misclass": [27, 28], "misclassif": [27, 28], "get_ylim": [27, 28], "room": [27, 28], "matric": [27, 28, 48, 49, 50, 68, 120], "label_dict": [27, 28], "i_class": [27, 28], "window_kwarg": [27, 28, 71], "kv": [27, 28], "conf": [27, 28], "640x480": [27, 28], "m\u00fcller": [27, 28, 29, 30], "aertsen": [27, 28, 29, 30], "birbaum": [27, 28, 29, 30], "braun": [27, 28, 29, 30], "brunner": [27, 28, 29, 30], "leeb": [27, 28, 29, 30], "mehr": [27, 28, 29, 30], "mueller": [27, 28, 29, 30], "putz": [27, 28, 29, 30], "nolt": [27, 28, 29, 30], "2012": [27, 28, 29, 30], "review": [27, 28, 29, 30], "frontier": [27, 28, 29, 30, 35], "neurosci": [27, 28, 29, 30, 35], "burgard": [27, 28, 29, 30, 35], "hum": [27, 28, 29, 30], "5420": [27, 28, 29, 30, 31], "955": [27, 33, 141], "744": [27, 33, 141], "plot_bcic_iv_2a_moabb_crop": [27, 33, 141], "classic": 28, "0x7fe2249272e0": 28, "benefici": 28, "6001": [28, 29], "6724": 28, "5601": 28, "2570": 28, "9811": 28, "4583": 28, "2569": [28, 29], "1473": 28, "0235": 28, "4365": 28, "0680": 28, "2431": 28, "9948": 28, "5260": 28, "jayaram": [28, 29, 30], "vinai": [28, 29, 30], "alexandr": [28, 29, 30, 35], "barach": [28, 29, 30], "trustworthi": [28, 29, 30], "066011": [28, 29, 30], "441": [28, 32, 33, 141], "502": [28, 33, 141], "plot_bcic_iv_2a_moabb_tri": [28, 33, 141], "properli": [29, 108, 111, 112], "exclus": [29, 32], "elabor": [29, 32], "feel": [29, 32], "free": [29, 32], "distinguish": 29, "scheme": [29, 32, 112, 142], "answer": [29, 32], "reliabl": [29, 32], "sound": [29, 32], "divis": [29, 32, 98, 100, 117], "But": [29, 32], "stori": [29, 32], "learnabl": 29, "connect": [29, 30, 84, 87, 91, 98, 104], "bias": 29, "capac": [29, 30], "ml": [29, 32], "degre": [29, 32, 47, 48, 49, 50, 64], "freedom": [29, 32], "kept": [29, 32], "leakag": [29, 32], "memor": [29, 32], "longer": [29, 32, 68, 120], "independ": [29, 32, 42, 60, 108, 142], "never": [29, 32], "explicitli": [29, 32, 108, 109, 112], "recogn": [29, 32], "behind": [29, 32], "alwai": [29, 32, 35, 54, 68, 120], "readabl": [29, 32, 108], "reiniti": [29, 32], "rescal": [29, 30], "varianc": [29, 30, 117], "0x7fe224abe650": 29, "One": [29, 30, 70, 89, 90], "demarc": [29, 30], "stimulu": [29, 30], "trial_stop_offset_second": [29, 30], "0test": 29, "matter": [29, 32, 76, 77], "distinct": [29, 32], "previous": [29, 32], "credibl": [29, 32], "test_acc": [29, 32], "2260": 29, "2351": 29, "1201": 29, "patch": 29, "font_scal": 29, "plot_simple_train_test": 29, "all_dataset": 29, "bd_cmap": 29, "3a6190": 29, "683e00": 29, "ddf2ff": 29, "2196f3": 29, "ndataset": 29, "nsplit": 29, "invert_yaxi": 29, "ncol": 29, "bbox_to_anchor": 29, "set_xlim": 29, "risk": [29, 46, 63, 130], "tweak": 29, "until": [29, 70], "realli": 29, "unreli": 29, "ratio": 29, "leav": [29, 142], "empti": [29, 68, 108, 112], "x_train": 29, "train_indic": 29, "val_indic": 29, "indices_": 29, "train_subset": 29, "val_subset": 29, "meaning": 29, "3348": 29, "2877": 29, "3448": [29, 30], "0761": 29, "0116": 29, "3522": 29, "0681": 29, "3621": 29, "5752": 29, "9016": 29, "compact": [29, 93, 94], "plot_train_valid_test": 29, "n_train": 29, "n_val": 29, "n_test": 29, "suffici": 29, "compens": [29, 108], "unseen": 29, "holdout": 29, "highli": 29, "cross_val_scor": 29, "splitter": 29, "train_val_split": 29, "By": [29, 30, 31, 46, 68, 120], "processor": [29, 30], "cv_result": 29, "2565": 29, "2217": 29, "9456": 29, "2609": 29, "8475": 29, "2171": 29, "8493": 29, "2652": 29, "0127": 29, "8525": 29, "2870": [29, 30], "1441": 29, "8437": 29, "0173": 29, "8479": 29, "2641": 29, "1313": 29, "8470": 29, "2727": 29, "0366": 29, "8487": 29, "3853": 29, "0511": 29, "8435": 29, "9833": 29, "8340": 29, "plot_k_fold": 29, "fraction": [29, 31], "ii": 29, "tr_idx": 29, "val_idx": 29, "n_train2": 29, "rotat": [29, 47, 48, 49, 50, 64, 135], "verticalalign": 29, "horizontalalign": 29, "transax": 29, "earli": 29, "rough": 29, "quickli": 29, "messi": 29, "jointli": 29, "analog": [29, 128], "grid": [29, 30], "tupl": [29, 30, 46, 54, 63, 68, 72, 75, 92, 105, 111, 118, 120, 123, 135], "00625": [29, 30], "000625": 29, "best_paramet": 29, "3565": 29, "4721": 29, "0063": [29, 30], "9586": 29, "3913": [29, 30], "1627": 29, "8412": 29, "4000": 29, "8236": 29, "9486": 29, "8238": 29, "2016": [29, 93], "1386": 29, "2847": 29, "0208": 29, "1242": 29, "replac": [29, 52, 66, 142], "710": [29, 33, 87, 141], "453": [29, 33, 141], "plot_how_train_test_and_tun": [29, 33, 141], "sensit": [30, 70, 135], "hyeperparamet": 30, "signific": 30, "discrimin": 30, "pathologi": 30, "playbook": 30, "googl": 30, "0x7fe22455c880": 30, "functool": 30, "partial": 30, "analyz": 30, "initialis": [30, 120], "slice": [30, 108, 109, 113, 114], "fine": 30, "learning_r": 30, "0000625": 30, "module__drop_prob": 30, "got": 30, "3130": 30, "8104": 30, "3793": 30, "1239": 30, "5962": 30, "7925": 30, "5862": 30, "7020": 30, "5436": 30, "1558": 30, "0195": 30, "5424": 30, "4522": 30, "0370": 30, "4483": 30, "7048": 30, "5610": 30, "2348": 30, "6052": 30, "2759": 30, "2581": 30, "5581": 30, "5181": 30, "5275": 30, "5611": 30, "5301": 30, "3103": 30, "4240": 30, "5425": 30, "2916": 30, "5389": 30, "6926": 30, "6754": 30, "5401": 30, "4957": 30, "1572": 30, "4138": 30, "7131": 30, "5613": 30, "9938": 30, "1901": 30, "5616": 30, "3739": 30, "4401": 30, "4828": 30, "8599": 30, "5412": 30, "2174": 30, "0672": 30, "6373": 30, "8733": 30, "5582": 30, "2783": 30, "6966": 30, "2069": 30, "8291": 30, "5672": 30, "5263": 30, "3642": 30, "4261": 30, "3976": 30, "8938": 30, "5392": 30, "5304": 30, "6155": 30, "8008": 30, "2435": 30, "2416": 30, "7621": 30, "5462": 30, "6460": 30, "2773": 30, "5615": 30, "9100": 30, "9077": 30, "5599": 30, "0091": 30, "3657": 30, "5380": 30, "0078": 30, "5285": 30, "5414": 30, "7658": 30, "0842": 30, "5662": 30, "2957": 30, "2414": 30, "4293": 30, "0938": 30, "5000": 30, "9042": 30, "3966": 30, "0486": 30, "0945": 30, "pivot": 30, "heatmap": 30, "pivot_t": 30, "param_optimizer__lr": 30, "param_module__drop_prob": 30, "fmt": 30, "3f": 30, "cmap": 30, "ylgnbu": 30, "cbar": 30, "model_build": [30, 32, 33, 141], "plot_hyperparameter_tuning_with_scikit": [30, 33, 141], "332": 30, "constructor": 30, "numer": [30, 114], "sequenc": [30, 36, 41, 68, 101, 103, 120, 121, 124, 131, 139, 142], "varun": 30, "godbol": 30, "georg": 30, "dahl": 30, "justin": 30, "gilmer": 30, "christoph": 30, "shallu": 30, "zachari": 30, "nado": 30, "tuning_playbook": 30, "854": [30, 33, 141], "sara": [31, 142], "sedlar": [31, 142], "n_fake_rec": 31, "sinusoid": 31, "gaussian": [31, 44, 61], "nois": [31, 44, 61, 70], "n_fake_ch": 31, "fake_dur": 31, "fake_sfreq": 31, "basedataset": [31, 36, 71, 78, 82, 119, 142], "create_mne_dummy_raw": 31, "fake_regression_dataset": 31, "n_fake_target": 31, "fake_data_split": 31, "target_subset": 31, "sin": 31, "pi": [31, 42, 60], "_data": 31, "expand_dim": 31, "fake_descript": 31, "n_fake_chan": 31, "2999": 31, "990": 31, "model_nam": 31, "deepconvnet": 31, "unknown": [31, 128], "610": 31, "minim": [31, 46, 63, 130, 136], "mse": 31, "ground": [31, 70, 73], "truth": 31, "period": 31, "schedul": [31, 32], "optimizer_lr": 31, "optimizer_weight_decai": 31, "neg_root_mean_squared_error": 31, "train_neg_root_mean_squared_error": 31, "valid_neg_root_mean_squared_error": 31, "2505": 31, "1215": 31, "9371": 31, "9685": 31, "0010": 31, "9705": 31, "9601": 31, "1443": 31, "2920": 31, "5329": 31, "9372": 31, "3129": 31, "0412": 31, "2603": 31, "4996": 31, "9854": 31, "root": [31, 140], "squar": [31, 97, 120], "rmse": 31, "0x7fe224aded10": 31, "versu": 31, "trend": 31, "y_estim": 31, "ravel": 31, "y_gt": 31, "to_numpi": [31, 126, 127, 128], "polyfit": 31, "poly1d": 31, "kingma": 31, "diederik": 31, "jimmi": 31, "ba": 31, "stochast": 31, "1412": 31, "6980": 31, "2014": [31, 70], "reddi": 31, "sashank": 31, "satyen": 31, "kale": 31, "sanjiv": 31, "kumar": 31, "beyond": [31, 46, 63, 130], "1904": 31, "09237": 31, "860": [31, 33, 141], "plot_regress": [31, 33, 141], "goal": [32, 89, 90, 91], "percept": 32, "adjustmenty": 32, "third": 32, "0x7fe224b25600": 32, "real": 32, "world": 32, "updat": [32, 68, 69, 71, 72, 78, 81, 114, 118, 120, 139, 142], "tqdm": 32, "train_one_epoch": 32, "loss_fn": 32, "print_batch_stat": 32, "progress_bar": 32, "disabl": [32, 68, 108, 120], "batch_idx": 32, "argmax": 32, "sum": [32, 142], "6f": 32, "accumul": 32, "doesn": [32, 68, 69, 120], "test_model": 32, "n_batch": [32, 125, 129], "test_loss": 32, "batch_loss": 32, "nnloss": 32, "seamlessli": 32, "train_load": 32, "test_load": 32, "test_accuraci": 32, "590727": 32, "72it": 32, "602779": 32, "02it": 32, "717662": 32, "25it": 32, "489191": 32, "28it": 32, "812099": 32, "00it": 32, "56it": 32, "819803": 32, "713765": 32, "20it": 32, "059528": 32, "284172": 32, "19it": 32, "808160": 32, "337086": 32, "642491": 32, "217304": 32, "59it": 32, "259046": 32, "43it": 32, "252112": 32, "50it": 32, "289975": 32, "53it": 32, "948479": 32, "31it": 32, "91it": 32, "608116": 32, "350593": 32, "30it": 32, "812453": 32, "045583": 32, "29it": 32, "459187": 32, "52it": 32, "055186": 32, "193383": 32, "nice": 32, "interfac": [32, 35, 89, 90, 93, 94], "previou": [32, 142], "torchmetr": 32, "litmodul": 32, "lightningmodul": 32, "training_step": 32, "y_hat": 32, "test_step": 32, "multiclass": 32, "num_class": 32, "log_dict": 32, "configure_optim": 32, "trainer": 32, "lit_model": 32, "tpu": 32, "ipu": 32, "hpu": 32, "connector": 32, "logger_connector": 32, "tensorboardx": 32, "conflict": [32, 68, 120], "ecosystem": 32, "logger": 32, "csvlogger": 32, "unless": [32, 120], "tensorboard": 32, "pip": [32, 138, 139, 140, 142], "instal": [32, 68, 108, 111, 120, 142], "extra": [32, 142], "lightning_log": 32, "189": 32, "data_connector": 32, "train_dataload": 32, "fit_loop": 32, "293": 32, "interv": [32, 73, 114, 142], "log_every_n_step": 32, "81it": 32, "v_num": 32, "09it": 32, "21it": 32, "67it": 32, "27it": 32, "44it": 32, "85it": 32, "84it": 32, "checkpoint_connector": 32, "145": 32, "ckpt_path": 32, "silenc": 32, "restor": [32, 68], "state": [32, 121, 122, 123, 124], "version_0": 32, "ckpt": 32, "test_dataload": 32, "42it": 32, "82it": 32, "37it": 32, "75it": 32, "99it": 32, "2534722089767456": 32, "9936468601226807": 32, "691": [32, 33, 141], "174": 32, "plot_train_in_pure_pytorch_and_pytorch_lightn": [32, 33, 141], "404": 33, "173": [33, 141], "scientif": 35, "softwar": [35, 136], "canon": 35, "hbm23730": 35, "robin": [35, 142], "tibor": [35, 142], "jost": 35, "tobia": 35, "dominiqu": 35, "josef": 35, "martin": [35, 142], "katharina": 35, "michael": 35, "frank": 35, "wolfram": 35, "tonio": 35, "issn": 35, "1097": 35, "0193": 35, "url": 35, "keyword": [35, 36, 74, 106, 108, 109, 110, 111, 112, 118], "electroencephalographi": 35, "interpret": [35, 40, 57, 108, 109, 120], "built": [35, 136], "zenodo": 35, "ask": [35, 70], "3389": 35, "fnin": 35, "2013": 35, "00267": 35, "luessi": 35, "larson": 35, "eric": 35, "deni": [35, 142], "strohmeier": 35, "brodbeck": 35, "christian": 35, "goj": 35, "roman": 35, "ja": 35, "mainak": 35, "brook": 35, "teon": 35, "parkkonen": 35, "lauri": 35, "h\u00e4m\u00e4l\u00e4inen": 35, "matti": 35, "volum": 35, "267": 35, "frontiersin": 35, "453x": 35, "appropri": [35, 139], "kwarg": [36, 68, 92, 110, 120, 126, 127, 128], "max_freq": 37, "band": [37, 55, 108, 118, 142], "desir": [37, 47, 55, 64, 70, 106, 112], "suggest": [37, 40, 44, 47, 48, 49, 50, 52, 55, 57, 61, 64, 81, 114], "distanc": [37, 55, 70], "admiss": 37, "1hz": 37, "nyquist": 37, "cheng": [37, 44, 52, 55, 61, 66], "goh": [37, 44, 52, 55, 61, 66], "dogrusoz": [37, 44, 52, 55, 61, 66], "tuzel": [37, 44, 52, 55, 61, 66], "azemi": [37, 44, 52, 55, 61, 66], "awar": [37, 44, 52, 55, 61, 66], "biosign": [37, 44, 52, 55, 61, 66], "04871": [37, 44, 52, 55, 61, 66], "mohsenvand": [37, 44, 52, 55, 61, 66], "izadi": [37, 44, 52, 55, 61, 66], "mae": [37, 44, 52, 55, 61, 66], "electroencephalogram": [37, 44, 52, 55, 61, 66], "health": [37, 44, 52, 55, 61, 66], "238": [37, 44, 52, 55, 61, 66], "253": [37, 44, 52, 55, 61, 66], "pmlr": [37, 44, 52, 55, 61, 66], "get_augmentation_param": [37, 38, 39, 40, 42, 43, 44, 46, 47, 52, 54, 142], "freqs_to_notch": [37, 55], "greater": [37, 55], "static": [37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 51, 52, 53, 69], "cmsaugment": [38, 39, 56, 58], "polici": [38, 39, 56, 58], "proba_drop": 38, "eras": 38, "saeed": [38, 39, 56, 58], "grangier": [38, 39, 56, 58], "pietquin": [38, 39, 56, 58], "zeghidour": [38, 39, 56, 58], "heterogen": [38, 39, 56, 58], "differenti": [38, 39, 56, 58], "reorder": [38, 39, 56, 58], "2010": [38, 39, 56, 58, 73], "13694": [38, 39, 56, 58], "p_shuffl": [39, 58], "permut": [39, 40, 46, 57, 58, 63], "carri": [39, 58, 70], "ordered_ch_nam": [40, 48, 49, 50], "invert": 40, "side": [40, 108], "nomenclatur": 40, "deiss": [40, 57], "biswal": [40, 57], "jin": [40, 57], "sun": [40, 57], "westov": [40, 57], "hamlet": [40, 57], "co": [40, 57], "techniqu": [40, 57, 108, 112], "1803": [40, 57, 101], "09702": [40, 57], "accord": [40, 57, 112], "channel_indep": [42, 60], "ft": [42, 60, 84], "surrog": [42, 60], "perturb": [42, 60], "uniformli": [42, 46, 47, 48, 49, 50, 60, 121], "schwabed": [42, 60], "snyder": [42, 60], "cakmak": [42, 60], "nemati": [42, 60], "clifford": [42, 60], "address": [42, 60], "imbal": [42, 60, 75], "noisi": [42, 60], "fourier": [42, 60], "1806": [42, 60], "08675": [42, 60], "magnitud": [42, 52], "cliffordlab": [42, 60], "tf": [42, 60], "draw": [42, 60], "maximum": [43, 47, 48, 49, 50, 84, 113], "absolut": 43, "delta_freq": [43, 59], "amplitud": [43, 59, 113, 114, 142], "white": [44, 61], "deviat": [44, 61], "wang": [44, 61], "zhong": [44, 61], "jiang": [44, 61], "liu": [44, 61, 87], "emot": [44, 61], "recognit": [44, 61], "confer": [44, 46, 47, 48, 49, 50, 61, 63, 64], "multimedia": [44, 61], "beta_per_sampl": 46, "drawn": 46, "beta": 46, "hongyi": [46, 63, 130], "zhang": [46, 63, 91, 130], "moustapha": [46, 63, 130], "ciss": [46, 63, 130], "yann": [46, 63, 130], "dauphin": [46, 63, 130], "david": [46, 63, 130], "lopez": [46, 63, 130], "paz": [46, 63, 130], "empir": [46, 63, 101, 130], "iclr": [46, 63], "onlin": [46, 63, 85, 89, 90, 96, 97, 130, 135], "1710": [46, 63, 130], "09412": [46, 63, 130], "facebookresearch": [46, 63, 130], "cifar10": [46, 63, 130], "interpol": [46, 47, 48, 49, 50, 63, 64], "lam": [46, 63], "idx_perm": [46, 63], "sensors_positions_matrix": [47, 64], "max_degre": [47, 48, 49, 50], "spherical_splin": [47, 48, 49, 50, 64], "angl": [47, 48, 49, 50, 64, 135], "3d": [47, 64, 142], "cartesian": [47, 64], "coordin": [47, 64], "ten_twenty_montag": [47, 64], "make_standard_montag": [47, 64], "standard_1020": [47, 64], "get_posit": [47, 64], "ch_po": [47, 64], "spheric": [47, 48, 49, 50, 64], "spline": [47, 48, 49, 50, 64], "scipi": [47, 48, 49, 50, 64, 68, 108, 111, 120], "rbf": [47, 48, 49, 50, 64], "quadrat": [47, 48, 49, 50, 64], "krell": [47, 48, 49, 50, 64], "kim": [47, 48, 49, 50, 64, 91], "electroencephalograph": [47, 48, 49, 50, 64], "39th": [47, 48, 49, 50, 64], "annual": [47, 48, 49, 50, 64], "medicin": [47, 48, 49, 50, 64], "biologi": [47, 48, 49, 50, 64], "societi": [47, 48, 49, 50, 64], "embc": [47, 48, 49, 50, 64], "471": [47, 48, 49, 50, 64], "474": [47, 48, 49, 50, 64], "element": [47, 52, 64], "montag": [48, 49, 50, 70], "flip": [51, 53, 65, 67], "sign": [51, 65], "smoothli": [52, 66], "Will": 52, "mask_start_per_sampl": [52, 66], "resp": 54, "uniform": 54, "arg": [68, 92, 120], "iterator_train__drop_last": [68, 120, 142], "uninstanti": [68, 120], "get_loss": 68, "classes_": 68, "attributeerror": 68, "sgd": [68, 120], "outcom": [68, 120], "keyboard": [68, 120], "interrupt": [68, 120], "mini": [68, 120], "iterator_train__batch_s": [68, 120], "iterator_test__batch_s": [68, 120], "iterator_valid": [68, 120], "incom": [68, 120], "__len__": [68, 120], "deal": [68, 120], "box": [68, 120], "dataset__": [68, 120], "initialz": [68, 120], "dataset_train": [68, 120, 126, 127, 128], "dataset_valid": [68, 120, 126, 127, 128], "get_default_callback": [68, 120], "resolv": [68, 120], "suffix": [68, 120], "epochscoring_1": [68, 120], "print_log": [68, 120], "callbacks__print_log__keys_ignor": [68, 120], "predict_nonlinear": [68, 120], "pickleabl": [68, 120], "accept": [68, 81, 103, 114, 120], "predict_proba": [68, 120, 142], "whatev": [68, 120], "anywher": [68, 120], "notabl": [68, 120], "unaffect": [68, 120], "warm_start": [68, 120], "cold": [68, 120], "warm": [68, 120], "summari": [68, 92, 102, 120], "regardless": [68, 120], "acceler": [68, 120], "sent": [68, 120], "unmodifi": [68, 120], "compil": [68, 120], "volta": [68, 120], "amper": [68, 120], "dunder": [68, 120], "notat": [68, 120], "compile__dynam": [68, 120], "dynam": [68, 120], "use_cach": [68, 120, 126, 127], "overrid": [68, 69, 120], "cach": [68, 120], "batchscor": [68, 120], "certain": [68, 120], "situat": [68, 120], "tight": [68, 120], "cumbersom": [68, 120], "global": [68, 120, 128], "honor": [68, 120], "prefer": [68, 120], "model_evalu": [68, 120], "prefixes_": [68, 120], "special": [68, 120], "neuralnet": [68, 120], "optimizer__momentum": [68, 120], "popul": [68, 120, 142], "cuda_dependent_attributes_": [68, 120], "whose": [68, 81, 114, 120], "unpickl": [68, 120], "expand": [68, 104, 120], "initialized_": [68, 120], "criterion_": [68, 120], "callbacks_": [68, 120], "_modul": [68, 120], "_criteria": [68, 120], "_optim": [68, 120], "get_iter": [68, 120], "drop_index": [68, 120], "iterator_test": [68, 120], "spars": [68, 120], "csr": [68, 120], "y_proba": [68, 120], "trial_predict": [68, 120, 131], "n_trial": [68, 79, 120, 131], "n_predict": [68, 120, 125, 129, 131], "trial_label": [68, 120, 131], "n_target": [68, 120, 131], "bbci": 69, "de": 69, "desc_4": 69, "pdf": 69, "force_upd": 69, "mne_datasets_": 69, "_path": 69, "forc": 69, "iia": 70, "r382d436f3223": 70, "cue": [70, 73], "imag": [70, 89, 90], "inat": 70, "movement": [70, 73], "compris": 70, "288": [70, 142], "sit": 70, "comfort": 70, "armchair": 70, "front": 70, "screen": 70, "fixat": 70, "acoust": 70, "tone": 70, "arrow": [70, 73], "down": [70, 98, 104, 111, 133], "foot": 70, "prompt": [70, 136], "disappear": 70, "twenti": 70, "agcl": 70, "inter": [70, 73], "monopolarli": 70, "mastoid": [70, 112], "amplifi": 70, "\u03bcv": 70, "notch": 70, "suppress": [70, 108], "raw_preproc_kwarg": 71, "window_preproc_kwarg": 71, "old": [71, 119, 142], "datapoint": 71, "gamma": 73, "subj": 73, "500hz": 73, "r5e478952091a": 73, "cover": [73, 135], "cortex": 73, "healthi": [73, 75], "963": 73, "divid": [73, 79, 80, 81, 113], "rest": [73, 112], "approx": 73, "880": 73, "except": [73, 75], "acquir": 73, "lab": 73, "invas": 73, "2008": [73, 86], "darva": 73, "direct": [73, 136], "grai": 73, "back": 73, "had": [73, 89, 90, 92], "clench": 73, "toe": 73, "downward": 73, "tap": 73, "leftward": 73, "rightward": 73, "relax": 73, "upward": 73, "littl": 73, "proxim": 73, "muscular": 73, "volv": 73, "pace": 73, "maintain": 73, "pseudo": 73, "ideal": 73, "260": 73, "stimuli": 73, "bci2000": 73, "schalk": 73, "2004": 73, "approv": 73, "ethic": 73, "committe": 73, "freiburg": 73, "dataset_kwarg": 74, "load_eeg_onli": 75, "content": 75, "edfx": 75, "overnight": 75, "auto_tutori": 75, "plot_sleep": 75, "eog": [75, 104], "emg": 75, "temperatur": 75, "respir": 75, "3h": 75, "parent": [76, 77], "ascend": [76, 77], "preserv": [76, 77], "physician": [76, 77], "c_tuab": 77, "i_window_in_tri": [78, 122, 132], "i_start_in_tri": [78, 122], "i_stop_in_tri": [78, 122, 132], "applic": [78, 108], "drop_bad_window": [81, 114], "accepted_bads_ratio": [81, 114], "onset": [81, 114], "fall": [81, 114], "outsid": [81, 114], "proport": [81, 89, 90, 114], "withinconsist": 81, "exceed": [81, 114], "pathlib": 82, "concat_dataset": [82, 83], "conv_block_n_filt": 84, "conv_block_kernel_length_1": 84, "conv_block_kernel_length_2": 84, "conv_block_pool_size_1": 84, "conv_block_pool_size_2": 84, "conv_block_depth_mult": 84, "conv_block_dropout": 84, "att_head_dim": 84, "att_num_head": 84, "att_dropout": 84, "tcn_depth": 84, "tcn_kernel_s": 84, "tcn_n_filter": 84, "tcn_dropout": 84, "tcn_activ": 84, "max_norm_const": 84, "input_size_": [84, 98, 99, 100, 104], "offici": [84, 139], "tensorflow": 84, "block": [84, 89, 90, 91, 101, 104], "denot": 84, "kc": 84, "p2": 84, "depthwis": [84, 89, 90], "pc": 84, "head": [84, 87, 100, 122], "dh": 84, "1_": 84, "pa": 84, "residu": [84, 95], "kt": 84, "slid": 84, "feed": [84, 100], "logit": 84, "contrari": 84, "constraint": 84, "impos": 84, "altaheri": 84, "muhammad": 84, "alsulaiman": 84, "physic": 84, "industri": 84, "informat": 84, "tii": 84, "3197419": 84, "overridden": [84, 87, 91], "subclass": [84, 87, 91], "recip": [84, 87, 91], "care": [84, 87, 91], "regist": [84, 87, 91], "hook": [84, 87, 91, 142], "latter": [84, 87, 91], "silent": [84, 87, 91], "first_conv_nonlin": 85, "first_pool_nonlin": 85, "later_conv_nonlin": 85, "later_pool_nonlin": 85, "supratak": 86, "bidirect": 86, "supratak2017": 86, "dong": 86, "wu": 86, "guo": 86, "1998": 86, "att_depth": 87, "att_head": 87, "att_drop_prob": 87, "final_fc_length": 87, "2440": 87, "return_featur": 87, "conform": 87, "methodolog": 87, "song2022": 87, "conformercod": 87, "tradit": 87, "n_timestep": 87, "compos": 87, "patchembed": 87, "transformerencod": 87, "classificationhead": 87, "recombin": 87, "song": [87, 142], "zheng": 87, "q": 87, "gao": 87, "719": 87, "ieeexplor": 87, "9991178": 87, "eeyhsong": 87, "get_fc_siz": 87, "in_channel": [88, 89, 90, 91], "itnet": [88, 142], "incept": [88, 89, 90, 91, 142], "salami": 88, "salami2022": 88, "abbassalami": 88, "guarante": [88, 89, 90, 91, 93, 94], "reimplement": [88, 89, 90, 91, 93, 94], "andreu": 88, "perez": 88, "gillmeist": 88, "3161489": 88, "scales_samples_": [89, 90], "125": [89, 90, 99], "n_filter": [89, 90, 91, 101], "depth_multipli": [89, 90], "pooling_s": [89, 90], "erp": [89, 90], "AND": 89, "WILL": 89, "BE": 89, "IN": 89, "THE": 89, "OF": 89, "santamaria2020": [89, 90], "inceptionnet": [89, 90, 91], "largest": [89, 90], "associ": [89, 90], "winner": [89, 90], "beetl": [89, 90], "neurip": [89, 90], "r15fdf33b022f": 89, "santamaria": [89, 90], "vazquez": [89, 90], "martinez": [89, 90], "cagig": [89, 90], "vaquerizo": [89, 90], "villar": [89, 90], "hornero": [89, 90], "assist": [89, 90], "3048106": [89, 90], "grifcc": [89, 90], "r37c4761d4e92": 90, "n_conv": 91, "kernel_unit_": 91, "input_window_": 91, "vision": 91, "wide": 91, "branch": 91, "1d": 91, "bose": 91, "eskandarian": 91, "accur": 91, "robust": 91, "046014": 91, "mixin": 92, "output_shap": [92, 105], "get_torchinfo_statist": 92, "col_nam": 92, "input_s": 92, "num_param": 92, "row_set": 92, "modelstatist": 92, "load_state_dict": 92, "state_dict": 92, "intermedi": 92, "bug": 92, "second_kernel_s": 93, "third_kernel_s": [93, 94], "eegnet": [93, 94], "lawhern": [93, 94], "solon": [93, 94], "waytowich": [93, 94], "gordon": [93, 94], "hung": [93, 94], "lanc": [93, 94], "1611": [93, 94], "08024": [93, 94], "f2": 94, "kernel_length": 94, "v4": 94, "eegnet4": 94, "final_pool_length": [95, 142], "n_first_filt": 95, "n_layers_per_block": 95, "first_filter_length": 95, "batch_norm_epsilon": 95, "conv_weight_init_fn": 95, "hybrid": 96, "safe_log": 97, "n_conv_chan": 98, "n_group": 98, "max_pool_s": 98, "blanco": 98, "blanco2020": 98, "seven": 98, "group": 98, "fernandez": 98, "rivero": 98, "pazo": 98, "soft": 98, "4067": 98, "4079": 98, "1007": 98, "s00500": 98, "04174": 98, "time_conv_size_": [99, 104], "max_pool_size_": 99, "pad_size_": 99, "half": [99, 108], "n_tce": 100, "d_model": 100, "d_ff": 100, "n_attn_head": 100, "after_reduced_cnn_s": 100, "multi": 100, "resolut": 100, "mrcnn": 100, "recalibr": 100, "tce": 100, "mechan": [100, 142], "captur": 100, "among": 100, "100hz": 100, "125hz": 100, "shh": 100, "unintend": 100, "clone": [100, 142], "positionwisefeedforward": 100, "emadeldeen24": 100, "attnsleep": 100, "sleepdata": 100, "n_block": 101, "n_in_chan": 101, "bai": 101, "bai2018": 101, "locuslab": 101, "kolter": 101, "koltun": 101, "recurr": 101, "01271": 101, "s_growth": 102, "t_filter": 102, "temp_lay": 102, "spat_lay": 102, "temp_span": 102, "thinker": [102, 142], "invari": [102, 142], "densenet": 102, "kosta": 102, "growth": 102, "densefilt": 102, "percentag": 102, "temp_len": 102, "spoclab": 102, "ca": 102, "thinkerinvari": 102, "rudzicz": 102, "across": [102, 112, 121, 125], "peopl": 102, "eng": 102, "056008": 102, "1741": 102, "2552": 102, "abb7a7": 102, "stager": 103, "middl": 103, "seq_len": 103, "n_time_filt": 104, "complexity_factor": 104, "0703125": 104, "ensure_odd_conv_s": 104, "autoencod": 104, "shrink": 104, "fewer": [104, 108], "2x2": 104, "halv": 104, "ne": 104, "subsequ": 106, "time_as_index": 106, "first_samp": 106, "last_samp": 106, "exce": 106, "exclud": [106, 108, 109, 112], "on_miss": [107, 113, 114], "emit": 107, "evok": [107, 108, 109, 112], "reorder_channel": 107, "drop_channel": 107, "filter_length": 108, "l_trans_bandwidth": 108, "h_trans_bandwidth": 108, "iir_param": 108, "fir_window": 108, "fir_design": 108, "skip_by_annot": 108, "bad_acq_skip": 108, "reflect_limit": [108, 111], "iir": 108, "meg0111": [108, 109], "meg2623": [108, 109], "reciproc": 108, "shortest": 108, "firwin2": 108, "5500m": 108, "doubl": 108, "cupi": [108, 111], "filtfilt": 108, "4th": 108, "butterworth": 108, "construct_iir_filt": 108, "symmetr": 108, "construct": [108, 112], "delai": [108, 142], "twice": 108, "minimum": 108, "weaker": 108, "lfilter": 108, "hann": 108, "blackman": 108, "concatenate_raw": 108, "acquisit": 108, "reflect": [108, 111], "mirror": [108, 111], "create_filt": 108, "savgol_filt": 108, "notch_filt": 108, "filter_data": 108, "apply_funct": 110, "raw_or_epoch": 110, "npad": 111, "boxcar": 111, "joint": 112, "virtual": 112, "infin": 112, "footcit": 112, "yao2001": 112, "apply_proj": 112, "seeg": 112, "projector": 112, "set_bipolar_refer": 112, "bipolar": 112, "m1": 112, "m2": 112, "concatdataset": 113, "ie": 113, "winddow_size_sampl": 113, "exactli": 114, "inconsist": 114, "demeanin": 116, "exponent": [116, 117], "m_t": [116, 117], "mathrm": [116, 117], "factornew": [116, 117], "cdot": [116, 117], "x_t": [116, 117], "m_": [116, 117], "deman": 116, "_t": [116, 117], "demean": 116, "Then": 117, "v_t": 117, "v_": 117, "sqrt": 117, "stabil": 117, "frequency_band": 118, "drop_original_sign": 118, "order_by_frequency_band": 118, "mne_filter_kwarg": 118, "unfilt": 118, "cz_4": 118, "o1_4": 118, "cz_8": 118, "o1_8": 118, "fileexistserror": 119, "n_sequenc": [121, 124], "inspir": 121, "perslev2021": 121, "recordingsampl": [121, 123, 124], "randomst": [121, 122, 123, 124], "sample_class": 121, "rec_ind": [121, 122], "session_t": 122, "run_0": 122, "multiindex": 122, "sample_record": 122, "sample_window": 122, "tau_max": 123, "banville2020": 123, "file_id": 124, "ensembl": [124, 142], "loss_funct": [125, 129], "target_extractor": [126, 127, 128], "on_epoch_end": [126, 127, 128], "on_batch_end": 127, "recomput": 128, "slightli": 128, "scorer": 128, "signatur": 128, "scalar": 128, "wors": 128, "tri": 128, "timeseri": 129, "window_len": 129, "mixup": [130, 142], "duplic": [132, 142], "2darrai": 132, "preds_per_tri": 132, "lack": 133, "pythonhashse": 133, "forum": 133, "ai": 133, "solv": [133, 142], "31628": 133, "use_deterministic_algorithm": 133, "linearsegmentedcolormap": 135, "textcolor": 135, "vmin": 135, "vmax": 135, "fontweight": 135, "rotate_row_label": 135, "rotate_col_label": 135, "with_f1_scor": 135, "norm_ax": 135, "rotate_precis": 135, "class_names_fonts": 135, "font": 135, "bold": 135, "heavi": 135, "ultrabold": 135, "ultralight": 135, "hard": 136, "happen": [136, 142], "mistak": 136, "corrupt": 136, "irregular": 136, "chat": 136, "bear": 136, "tracker": 136, "sure": 136, "ve": 136, "shell": 136, "__version__": [136, 140], "latest": [136, 139, 140], "replic": 136, "link": [136, 142], "anonym": 136, "portion": 136, "persist": 136, "smallest": 136, "past": 136, "backtick": 136, "contributor": [136, 140], "snippet": 136, "toolbox": 137, "electrophysiolog": 137, "fetcher": 137, "neuroscientist": 137, "who": 137, "neurophysiolog": 137, "pypi": 138, "repositori": 138, "beginn": 138, "familiar": 138, "instruct": 138, "contribut": [138, 140], "braincod": 139, "command": [139, 140], "nvidia": 139, "driver": 139, "cuda_path": 139, "troubleshoot": 139, "thing": 140, "enter": 140, "git": 140, "cd": 140, "repo": 140, "zipbal": 140, "master": 140, "egg": 140, "edit": 140, "verifi": 140, "guidelin": 140, "866": 141, "whats_new": 142, "incompat": 142, "gh": 142, "561": 142, "429": 142, "431": 142, "mohammad": 142, "javad": 142, "oskar": 142, "st\u00f8rmer": 142, "417": 142, "454": 142, "yonghao": 142, "einop": 142, "466": 142, "467": 142, "marco": 142, "zamboni": 142, "468": 142, "refactor": 142, "470": 142, "conda": 142, "yml": 142, "ci": 142, "479": 142, "action": 142, "489": 142, "485": 142, "490": 142, "487": 142, "473": 142, "488": 142, "495": 142, "sylvain": 142, "chevalli": 142, "494": 142, "bruna": 142, "lope": 142, "491": 142, "enforc": 142, "497": 142, "env": 142, "friendli": 142, "\u015bliwowski": 142, "shallowfbcsp": 142, "503": 142, "sampler": 142, "504": 142, "th\u00e9o": 142, "dropchannel": 142, "seteegrefer": 142, "514": 142, "517": 142, "523": 142, "remi": 142, "delboui": 142, "524": 142, "535": 142, "529": 142, "528": 142, "539": 142, "541": 142, "hint": 142, "551": 142, "valentin": 142, "ioven": 142, "pyproject": 142, "toml": 142, "553": 142, "commit": 142, "556": 142, "461": 142, "e231": 142, "whitespac": 142, "untrac": 142, "flake8": 142, "transposit": 142, "_frequency_shift": 142, "446": 142, "matthieu": 142, "terri": 142, "451": 142, "465": 142, "wrong": 142, "538": 142, "546": 142, "397": 142, "flag": 142, "513": 142, "390": 142, "ghaith": 142, "bouallegu": 142, "371": 142, "389": 142, "exemplifi": 142, "349": 142, "unifi": 142, "378": 142, "wimpff": 142, "391": 142, "406": 142, "recoding_id": 142, "402": 142, "ft_surrog": 142, "409": 142, "get_param": 142, "388": 142, "alex": 142, "413": 142, "zscore": 142, "mnepreproc": 142, "numpypreproc": 142, "415": 142, "411": 142, "263": 142, "ann": 142, "kathrin": 142, "kiessner": 142, "henrik": 142, "bonsmann": 142, "vytauta": 142, "jankauska": 142, "274": 142, "254": 142, "thoma": 142, "287": 142, "aggregate_proba": 142, "294": 142, "312": 142, "balancedsequencesampl": 142, "295": 142, "277": 142, "318": 142, "261": 142, "cloneabl": 142, "347": 142, "353": 142, "333": 142, "365": 142, "367": 142, "mismatch": 142, "327": 142, "propag": 142, "269": 142, "favour": 142, "292": 142, "199": 142, "198": 142, "178": 142, "138": 142, "147": 142, "realiz": 142, "filterbank": 142, "158": 142, "159": 142, "timecrop": 142, "164": 142, "185": 142, "282": 142, "341": 142, "accident": 142, "167": 142, "compute_amplitude_gradi": 142, "4d": 142, "166": 142, "incorrect": 142, "146": 142, "169": 142, "window_s": 142, "148": 142, "171": 142, "155": 142, "favor": 142}, "objects": {"": [[0, 0, 0, "-", "braindecode"]], "braindecode.augmentation": [[36, 1, 1, "", "AugmentedDataLoader"], [37, 1, 1, "", "BandstopFilter"], [38, 1, 1, "", "ChannelsDropout"], [39, 1, 1, "", "ChannelsShuffle"], [40, 1, 1, "", "ChannelsSymmetry"], [41, 1, 1, "", "Compose"], [42, 1, 1, "", "FTSurrogate"], [43, 1, 1, "", "FrequencyShift"], [44, 1, 1, "", "GaussianNoise"], [45, 1, 1, "", "IdentityTransform"], [46, 1, 1, "", "Mixup"], [47, 1, 1, "", "SensorsRotation"], [48, 1, 1, "", "SensorsXRotation"], [49, 1, 1, "", "SensorsYRotation"], [50, 1, 1, "", "SensorsZRotation"], [51, 1, 1, "", "SignFlip"], [52, 1, 1, "", "SmoothTimeMask"], [53, 1, 1, "", "TimeReverse"], [54, 1, 1, "", "Transform"]], "braindecode.augmentation.BandstopFilter": [[37, 2, 1, "", "get_augmentation_params"], [37, 2, 1, "", "operation"]], "braindecode.augmentation.ChannelsDropout": [[38, 2, 1, "", "get_augmentation_params"], [38, 2, 1, "", "operation"]], "braindecode.augmentation.ChannelsShuffle": [[39, 2, 1, "", "get_augmentation_params"], [39, 2, 1, "", "operation"]], "braindecode.augmentation.ChannelsSymmetry": [[40, 2, 1, "", "get_augmentation_params"], [40, 2, 1, "", "operation"]], "braindecode.augmentation.Compose": [[41, 2, 1, "", "forward"]], "braindecode.augmentation.FTSurrogate": [[42, 2, 1, "", "get_augmentation_params"], [42, 2, 1, "", "operation"]], "braindecode.augmentation.FrequencyShift": [[43, 2, 1, "", "get_augmentation_params"], [43, 2, 1, "", "operation"]], "braindecode.augmentation.GaussianNoise": [[44, 2, 1, "", "get_augmentation_params"], [44, 2, 1, "", "operation"]], "braindecode.augmentation.IdentityTransform": [[45, 2, 1, "", "operation"]], "braindecode.augmentation.Mixup": [[46, 2, 1, "", "get_augmentation_params"], [46, 2, 1, "", "operation"]], "braindecode.augmentation.SensorsRotation": [[47, 2, 1, "", "get_augmentation_params"], [47, 2, 1, "", "operation"]], "braindecode.augmentation.SignFlip": [[51, 2, 1, "", "operation"]], "braindecode.augmentation.SmoothTimeMask": [[52, 2, 1, "", "get_augmentation_params"], [52, 2, 1, "", "operation"]], "braindecode.augmentation.TimeReverse": [[53, 2, 1, "", "operation"]], "braindecode.augmentation.Transform": [[54, 2, 1, "", "forward"], [54, 2, 1, "", "get_augmentation_params"]], "braindecode.augmentation.functional": [[55, 3, 1, "", "bandstop_filter"], [56, 3, 1, "", "channels_dropout"], [57, 3, 1, "", "channels_permute"], [58, 3, 1, "", "channels_shuffle"], [59, 3, 1, "", "frequency_shift"], [60, 3, 1, "", "ft_surrogate"], [61, 3, 1, "", "gaussian_noise"], [62, 3, 1, "", "identity"], [63, 3, 1, "", "mixup"], [64, 3, 1, "", "sensors_rotation"], [65, 3, 1, "", "sign_flip"], [66, 3, 1, "", "smooth_time_mask"], [67, 3, 1, "", "time_reverse"]], "braindecode.classifier": [[68, 1, 1, "", "EEGClassifier"]], "braindecode.classifier.EEGClassifier": [[68, 4, 1, "", "_criteria"], [68, 4, 1, "", "_modules"], [68, 4, 1, "", "_optimizers"], [68, 4, 1, "", "callbacks_"], [68, 4, 1, "", "classes_"], [68, 4, 1, "", "criterion_"], [68, 4, 1, "", "cuda_dependent_attributes_"], [68, 2, 1, "", "get_iterator"], [68, 2, 1, "", "get_loss"], [68, 4, 1, "", "initialized_"], [68, 4, 1, "", "module_"], [68, 2, 1, "", "predict"], [68, 2, 1, "", "predict_proba"], [68, 2, 1, "", "predict_trials"], [68, 4, 1, "", "prefixes_"]], "braindecode.datasets": [[69, 1, 1, "", "BCICompetitionIVDataset4"], [70, 1, 1, "", "BNCI2014001"], [71, 1, 1, "", "BaseConcatDataset"], [72, 1, 1, "", "BaseDataset"], [73, 1, 1, "", "HGD"], [74, 1, 1, "", "MOABBDataset"], [75, 1, 1, "", "SleepPhysionet"], [76, 1, 1, "", "TUH"], [77, 1, 1, "", "TUHAbnormal"], [78, 1, 1, "", "WindowsDataset"], [79, 3, 1, "", "create_from_X_y"], [80, 3, 1, "", "create_from_mne_epochs"], [81, 3, 1, "", "create_from_mne_raw"]], "braindecode.datasets.BCICompetitionIVDataset4": [[69, 2, 1, "", "download"]], "braindecode.datasets.BaseConcatDataset": [[71, 2, 1, "", "get_metadata"], [71, 2, 1, "", "save"], [71, 2, 1, "", "set_description"], [71, 2, 1, "", "split"]], "braindecode.datasets.BaseDataset": [[72, 2, 1, "", "set_description"]], "braindecode.datasets.WindowsDataset": [[78, 2, 1, "", "set_description"]], "braindecode.datautil": [[82, 3, 1, "", "load_concat_dataset"], [83, 3, 1, "", "save_concat_dataset"]], "braindecode.models": [[84, 1, 1, "", "ATCNet"], [85, 1, 1, "", "Deep4Net"], [86, 1, 1, "", "DeepSleepNet"], [87, 1, 1, "", "EEGConformer"], [88, 1, 1, "", "EEGITNet"], [89, 1, 1, "", "EEGInception"], [90, 1, 1, "", "EEGInceptionERP"], [91, 1, 1, "", "EEGInceptionMI"], [92, 1, 1, "", "EEGModuleMixin"], [93, 1, 1, "", "EEGNetv1"], [94, 1, 1, "", "EEGNetv4"], [95, 1, 1, "", "EEGResNet"], [96, 1, 1, "", "HybridNet"], [97, 1, 1, "", "ShallowFBCSPNet"], [98, 1, 1, "", "SleepStagerBlanco2020"], [99, 1, 1, "", "SleepStagerChambon2018"], [100, 1, 1, "", "SleepStagerEldele2021"], [101, 1, 1, "", "TCN"], [102, 1, 1, "", "TIDNet"], [103, 1, 1, "", "TimeDistributed"], [104, 1, 1, "", "USleep"], [105, 3, 1, "", "get_output_shape"]], "braindecode.models.ATCNet": [[84, 2, 1, "", "forward"]], "braindecode.models.DeepSleepNet": [[86, 2, 1, "", "forward"]], "braindecode.models.EEGConformer": [[87, 2, 1, "", "forward"], [87, 2, 1, "", "get_fc_size"]], "braindecode.models.EEGInceptionMI": [[91, 2, 1, "", "forward"]], "braindecode.models.EEGModuleMixin": [[92, 2, 1, "", "get_output_shape"], [92, 2, 1, "", "get_torchinfo_statistics"], [92, 2, 1, "", "load_state_dict"], [92, 2, 1, "", "to_dense_prediction_model"]], "braindecode.models.HybridNet": [[96, 2, 1, "", "forward"]], "braindecode.models.SleepStagerBlanco2020": [[98, 2, 1, "", "forward"]], "braindecode.models.SleepStagerChambon2018": [[99, 2, 1, "", "forward"]], "braindecode.models.SleepStagerEldele2021": [[100, 2, 1, "", "forward"]], "braindecode.models.TCN": [[101, 2, 1, "", "forward"]], "braindecode.models.TIDNet": [[102, 2, 1, "", "forward"]], "braindecode.models.TimeDistributed": [[103, 2, 1, "", "forward"]], "braindecode.models.USleep": [[104, 2, 1, "", "forward"]], "braindecode.preprocessing": [[106, 1, 1, "", "Crop"], [107, 1, 1, "", "DropChannels"], [108, 1, 1, "", "Filter"], [109, 1, 1, "", "Pick"], [110, 1, 1, "", "Preprocessor"], [111, 1, 1, "", "Resample"], [112, 1, 1, "", "SetEEGReference"], [113, 3, 1, "", "create_fixed_length_windows"], [114, 3, 1, "", "create_windows_from_events"], [115, 3, 1, "", "create_windows_from_target_channels"], [116, 3, 1, "", "exponential_moving_demean"], [117, 3, 1, "", "exponential_moving_standardize"], [118, 3, 1, "", "filterbank"], [119, 3, 1, "", "preprocess"]], "braindecode.preprocessing.Preprocessor": [[110, 2, 1, "", "apply"]], "braindecode.regressor": [[120, 1, 1, "", "EEGRegressor"]], "braindecode.regressor.EEGRegressor": [[120, 4, 1, "", "_criteria"], [120, 4, 1, "", "_modules"], [120, 4, 1, "", "_optimizers"], [120, 4, 1, "", "callbacks_"], [120, 4, 1, "", "criterion_"], [120, 4, 1, "", "cuda_dependent_attributes_"], [120, 2, 1, "", "fit"], [120, 2, 1, "", "get_iterator"], [120, 4, 1, "", "initialized_"], [120, 4, 1, "", "module_"], [120, 2, 1, "", "predict_proba"], [120, 2, 1, "", "predict_trials"], [120, 4, 1, "", "prefixes_"]], "braindecode.samplers": [[121, 1, 1, "", "BalancedSequenceSampler"], [122, 1, 1, "", "RecordingSampler"], [123, 1, 1, "", "RelativePositioningSampler"], [124, 1, 1, "", "SequenceSampler"]], "braindecode.samplers.BalancedSequenceSampler": [[121, 2, 1, "", "sample_class"]], "braindecode.samplers.RecordingSampler": [[122, 4, 1, "", "info"], [122, 4, 1, "", "n_recordings"], [122, 2, 1, "", "sample_recording"], [122, 2, 1, "", "sample_window"]], "braindecode.samplers.RelativePositioningSampler": [[123, 2, 1, "", "presample"]], "braindecode.samplers.SequenceSampler": [[124, 4, 1, "", "file_ids"], [124, 4, 1, "", "info"]], "braindecode.training": [[125, 1, 1, "", "CroppedLoss"], [126, 1, 1, "", "CroppedTimeSeriesEpochScoring"], [127, 1, 1, "", "CroppedTrialEpochScoring"], [128, 1, 1, "", "PostEpochTrainScoring"], [129, 1, 1, "", "TimeSeriesLoss"], [130, 3, 1, "", "mixup_criterion"], [131, 3, 1, "", "predict_trials"], [132, 3, 1, "", "trial_preds_from_window_preds"]], "braindecode.training.CroppedLoss": [[125, 2, 1, "", "forward"]], "braindecode.training.CroppedTimeSeriesEpochScoring": [[126, 2, 1, "", "on_epoch_end"]], "braindecode.training.CroppedTrialEpochScoring": [[127, 2, 1, "", "on_batch_end"], [127, 2, 1, "", "on_epoch_end"]], "braindecode.training.PostEpochTrainScoring": [[128, 2, 1, "", "on_epoch_end"]], "braindecode.training.TimeSeriesLoss": [[129, 2, 1, "", "forward"]], "braindecode.util": [[133, 3, 1, "", "set_random_seeds"]], "braindecode.visualization": [[134, 3, 1, "", "compute_amplitude_gradients"], [135, 3, 1, "", "plot_confusion_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": [0, 142], "refer": [0, 4, 5, 9, 10, 11, 26, 27, 28, 29, 30, 31, 136], "classifi": [0, 68], "regressor": [0, 120], "model": [0, 2, 3, 4, 5, 8, 9, 10, 11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "train": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 125, 126, 127, 128, 129, 130, 131, 132], "dataset": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "preprocess": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 32, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "data": [0, 3, 4, 12, 15, 22, 24, 26, 27, 28, 29, 31], "util": [0, 29, 133], "sampler": [0, 5, 9, 10, 11, 121, 122, 123, 124], "augment": [0, 3, 4, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "visual": [0, 3, 5, 29, 134, 135], "advanc": [1, 24], "neural": [1, 24, 30, 31], "network": [1, 9, 11, 24, 30, 31], "strategi": [1, 24], "finger": [2, 8], "flexion": [2, 8], "crop": [2, 27, 106], "decod": [2, 8, 27, 28], "bcic": [2, 3, 4, 8, 27], "iv": [2, 3, 4, 8, 27], "4": [2, 8], "ecog": [2, 8], "load": [2, 3, 4, 5, 8, 9, 10, 11, 14, 15, 18, 21, 24, 26, 27, 28, 29, 30, 32], "prepar": [2, 8, 28], "split": [2, 3, 4, 5, 8, 9, 10, 11, 21, 27, 28, 29, 30, 32], "test": [2, 5, 8, 29, 31, 32, 140], "creat": [2, 3, 4, 5, 8, 9, 10, 11, 12, 22, 27, 28, 29, 30, 32], "cut": [2, 8, 12, 27, 32], "comput": [2, 6, 8, 12, 13, 23, 27, 28, 30, 32, 33, 34, 141], "window": [2, 3, 4, 5, 8, 9, 10, 11, 12, 22, 27, 28, 29, 30, 31, 32], "plot": [2, 4, 8, 9, 10, 11, 27, 28, 30], "result": [2, 4, 5, 8, 9, 10, 11, 27, 28, 30], "2a": [3, 4, 27], "thi": [3, 4, 5, 12, 21, 26, 27, 28, 29, 30, 32], "exampl": [3, 4, 5, 7, 12, 17, 18, 19, 20, 21, 24, 26, 27, 28, 29, 30, 32, 36, 38, 41, 42, 43, 51, 52, 54, 69, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 85, 92, 97, 99, 100, 103, 104, 105, 110, 113, 114, 115, 117, 119, 122, 123, 124, 125, 126, 127, 129, 133, 135], "cover": [3, 4, 5, 12, 21, 26, 27, 28, 29, 30, 32], "extract": [3, 4, 5, 9, 10, 11, 28, 29, 30], "valid": [3, 4, 5, 8, 9, 10, 11, 28, 29, 30], "defin": [3, 4, 29, 31, 32], "transform": [3, 4, 32, 54], "manipul": 3, "one": 3, "session": 3, "an": [3, 4], "eegclassifi": [3, 4, 68], "desir": [3, 4], "manual": 3, "compos": [3, 41], "set": [3, 5, 28], "level": 3, "search": 4, "best": [4, 30], "list": 4, "analys": 4, "fit": 4, "self": 5, "supervis": 5, "learn": [5, 26, 30], "eeg": [5, 12, 22, 28], "rel": 5, "posit": 5, "raw": [5, 32], "record": [5, 12], "inspect": 5, "pretext": 5, "task": 5, "perform": 5, "us": [5, 9, 10, 11, 12, 36, 38, 41, 42, 43, 51, 52, 54, 69, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 85, 92, 97, 99, 100, 103, 104, 105, 110, 113, 114, 115, 117, 119, 122, 123, 124, 125, 126, 127, 129, 133, 135], "represent": 5, "sleep": [5, 9, 10, 11], "stage": [5, 9, 10, 11], "conclus": 5, "time": [6, 13, 23, 33, 34, 141], "appli": [7, 24], "real": [7, 24], "world": [7, 24], "physionet": [9, 10, 11], "chambon2018": 9, "sequenc": [9, 10, 11], "eldele2021": 10, "u": 11, "process": 12, "big": 12, "resourc": 12, "tuh": [12, 22, 76], "corpu": [12, 22], "tuhmock": 12, "select": 12, "combin": 12, "step": 12, "benchmark": [14, 16], "eager": 14, "lazi": 14, "organ": [15, 24], "parallel": 16, "serial": 16, "custom": 17, "save": 18, "mne": [19, 26, 35], "moabb": 20, "By": 21, "descript": 21, "inform": 21, "row": 21, "index": 21, "observ": 21, "multipl": 22, "discret": 22, "target": 22, "templ": 22, "univers": 22, "hospit": 22, "explor": [22, 26], "dataload": 22, "basic": [24, 25, 28], "build": [24, 25], "simpl": [26, 29], "epoch": 26, "find": 26, "you": [26, 30], "want": 26, "braindecod": [26, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140], "onlin": 26, "document": 26, "examin": 26, "your": [26, 29, 32, 140], "own": 26, "scikit": [26, 30], "compat": 26, "paramet": 27, "confus": [27, 28], "matrix": [27, 28], "brain": 28, "how": [29, 32, 35, 136], "tune": [29, 30], "why": [29, 30, 32], "should": [29, 32], "i": [29, 32, 136, 140], "care": [29, 32], "about": [29, 32], "evalu": [29, 31, 32], "etc": [29, 32], "option": [29, 32], "1": [29, 32, 142], "let": 29, "": [29, 142], "first": 29, "function": [29, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "2": [29, 32], "val": 29, "second": 29, "3": 29, "k": 29, "fold": 29, "cross": 29, "third": 29, "hyperparamet": [29, 30], "do": [30, 136], "need": 30, "get": [30, 136], "convolut": 31, "regress": 31, "fake": 31, "gener": 31, "cnn": 31, "choos": 31, "between": 31, "gpu": 31, "cpu": 31, "processor": 31, "pytorch": 32, "structur": 32, "offlin": 32, "pure": 32, "loop": 32, "lightn": 32, "cite": [35, 136], "other": 35, "algorithm": 35, "augmenteddataload": 36, "bandstopfilt": 37, "channelsdropout": 38, "channelsshuffl": 39, "channelssymmetri": 40, "ftsurrog": 42, "frequencyshift": 43, "gaussiannois": 44, "identitytransform": 45, "mixup": [46, 63], "sensorsrot": 47, "sensorsxrot": 48, "sensorsyrot": 49, "sensorszrot": 50, "signflip": 51, "smoothtimemask": 52, "timerevers": 53, "bandstop_filt": 55, "channels_dropout": 56, "channels_permut": 57, "channels_shuffl": 58, "frequency_shift": 59, "ft_surrog": 60, "gaussian_nois": 61, "ident": 62, "sensors_rot": 64, "sign_flip": 65, "smooth_time_mask": 66, "time_revers": 67, "bcicompetitionivdataset4": 69, "bnci2014001": 70, "summari": [70, 73], "baseconcatdataset": 71, "basedataset": 72, "hgd": 73, "moabbdataset": 74, "sleepphysionet": 75, "tuhabnorm": 77, "windowsdataset": 78, "create_from_x_i": 79, "create_from_mne_epoch": 80, "create_from_mne_raw": 81, "datautil": [82, 83], "load_concat_dataset": 82, "save_concat_dataset": 83, "atcnet": 84, "deep4net": 85, "deepsleepnet": 86, "eegconform": 87, "eegitnet": 88, "eegincept": 89, "eeginceptionerp": 90, "eeginceptionmi": 91, "eegmodulemixin": 92, "eegnetv1": 93, "eegnetv4": 94, "eegresnet": 95, "hybridnet": 96, "shallowfbcspnet": 97, "sleepstagerblanco2020": 98, "sleepstagerchambon2018": 99, "sleepstagereldele2021": 100, "tcn": 101, "tidnet": 102, "timedistribut": 103, "usleep": 104, "get_output_shap": 105, "dropchannel": 107, "filter": 108, "pick": 109, "preprocessor": 110, "resampl": 111, "seteegrefer": 112, "create_fixed_length_window": 113, "create_windows_from_ev": 114, "create_windows_from_target_channel": 115, "exponential_moving_demean": 116, "exponential_moving_standard": 117, "filterbank": 118, "eegregressor": 120, "balancedsequencesampl": 121, "recordingsampl": 122, "relativepositioningsampl": 123, "sequencesampl": 124, "croppedloss": 125, "croppedtimeseriesepochscor": 126, "croppedtrialepochscor": 127, "postepochtrainscor": 128, "timeseriesloss": 129, "mixup_criterion": 130, "predict_tri": 131, "trial_preds_from_window_pr": 132, "set_random_se": 133, "compute_amplitude_gradi": 134, "plot_confusion_matrix": 135, "frequent": 136, "ask": 136, "question": 136, "faq": 136, "help": 136, "can": 136, "t": 136, "python": 136, "work": [136, 140], "still": 136, "think": 136, "found": 136, "bug": [136, 142], "what": [136, 142], "homepag": 137, "instal": [138, 139, 140], "from": [139, 140], "pypi": 139, "sourc": 140, "clone": 140, "repositori": 140, "github": 140, "new": 142, "current": 142, "0": 142, "9": 142, "dev0": 142, "enhanc": 142, "chang": 142, "8": 142, "11": 142, "2022": 142, "7": 142, "10": 142, "version": 142, "6": 142, "2021": 142, "12": 142, "06": 142, "5": 142, "07": 142, "14": 142, "author": 142}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "Classifier": [[0, "classifier"]], "Regressor": [[0, "regressor"]], "Models": [[0, "models"]], "Training": [[0, "training"], [2, "training"], [5, "training"], [8, "training"], [9, "training"], [10, "training"], [11, "training"], [27, "training"], [30, "training"]], "Datasets": [[0, "datasets"]], "Preprocessing": [[0, "preprocessing"], [2, "preprocessing"], [3, "preprocessing"], [4, "preprocessing"], [5, "preprocessing"], [8, "preprocessing"], [9, "preprocessing"], [10, "preprocessing"], [11, "preprocessing"], [12, "preprocessing"], [28, "preprocessing"], [30, "preprocessing"]], "Data Utils": [[0, "data-utils"]], "Samplers": [[0, "samplers"]], "Augmentation": [[0, "augmentation"]], "Utils": [[0, "utils"]], "Visualization": [[0, "visualization"]], "Advanced neural network training strategies": [[1, "advanced-neural-network-training-strategies"], [24, "advanced-neural-network-training-strategies"]], "Fingers flexion cropped decoding on BCIC IV 4 ECoG Dataset": [[2, "fingers-flexion-cropped-decoding-on-bcic-iv-4-ecog-dataset"]], "Loading and preparing the dataset": [[2, "loading-and-preparing-the-dataset"], [8, "loading-and-preparing-the-dataset"]], "Loading": [[2, "loading"], [3, "loading"], [4, "loading"], [8, "loading"], [9, "loading"], [10, "loading"], [11, "loading"], [30, "loading"]], "Split dataset into train and test": [[2, "split-dataset-into-train-and-test"], [29, "split-dataset-into-train-and-test"], [32, "split-dataset-into-train-and-test"]], "Create model": [[2, "create-model"], [3, "create-model"], [4, "create-model"], [8, "create-model"], [9, "create-model"], [10, "create-model"], [11, "create-model"], [29, "create-model"], [30, "create-model"]], "Cut Compute Windows": [[2, "cut-compute-windows"], [8, "cut-compute-windows"], [12, "cut-compute-windows"], [32, "cut-compute-windows"]], "Plot Results": [[2, "plot-results"], [8, "plot-results"], [27, "plot-results"]], "Data Augmentation on BCIC IV 2a Dataset": [[3, "data-augmentation-on-bcic-iv-2a-dataset"]], "This example covers:": [[3, "this-example-covers"], [4, "this-example-covers"], [5, "this-example-covers"], [12, "this-example-covers"], [21, "this-example-covers"], [26, "this-example-covers"], [27, "this-example-covers"], [28, "this-example-covers"], [29, "this-example-covers"], [30, "this-example-covers"], [32, "this-example-covers"]], "Loading and preprocessing the dataset": [[3, "loading-and-preprocessing-the-dataset"], [4, "loading-and-preprocessing-the-dataset"], [5, "loading-and-preprocessing-the-dataset"], [9, "loading-and-preprocessing-the-dataset"], [10, "loading-and-preprocessing-the-dataset"], [11, "loading-and-preprocessing-the-dataset"], [27, "loading-and-preprocessing-the-dataset"], [30, "loading-and-preprocessing-the-dataset"]], "Extracting windows": [[3, "extracting-windows"], [4, "extracting-windows"], [5, "extracting-windows"]], "Split dataset into train and valid": [[3, "split-dataset-into-train-and-valid"], [4, "split-dataset-into-train-and-valid"], [9, "split-dataset-into-train-and-valid"], [10, "split-dataset-into-train-and-valid"], [11, "split-dataset-into-train-and-valid"], [30, "split-dataset-into-train-and-valid"]], "Defining a Transform": [[3, "defining-a-transform"]], "Manipulating one session and visualizing the transformed data": [[3, "manipulating-one-session-and-visualizing-the-transformed-data"]], "Training a model with data augmentation": [[3, "training-a-model-with-data-augmentation"], [4, "training-a-model-with-data-augmentation"]], "Create an EEGClassifier with the desired augmentation": [[3, "create-an-eegclassifier-with-the-desired-augmentation"], [4, "create-an-eegclassifier-with-the-desired-augmentation"]], "Manually composing Transforms": [[3, "manually-composing-transforms"]], "Setting the data augmentation at the Dataset level": [[3, "setting-the-data-augmentation-at-the-dataset-level"]], "Searching the best data augmentation on BCIC IV 2a Dataset": [[4, "searching-the-best-data-augmentation-on-bcic-iv-2a-dataset"]], "Data Augmentation": [[4, null]], "Defining a list of transforms": [[4, "defining-a-list-of-transforms"]], "Analysing the best fit": [[4, "analysing-the-best-fit"]], "Plot results": [[4, "plot-results"], [9, "plot-results"], [10, "plot-results"], [11, "plot-results"]], "References": [[4, "references"], [5, "references"], [9, "references"], [10, "references"], [11, "references"], [26, "references"], [27, "references"], [28, "references"], [29, "references"], [30, "references"], [31, "references"], [136, "references"]], "Self-supervised learning on EEG with relative positioning": [[5, "self-supervised-learning-on-eeg-with-relative-positioning"]], "Self-supervised learning": [[5, null]], "Loading the raw recordings": [[5, "loading-the-raw-recordings"]], "Preprocessing windows": [[5, "preprocessing-windows"]], "Splitting dataset into train, valid and test sets": [[5, "splitting-dataset-into-train-valid-and-test-sets"]], "Creating samplers": [[5, "creating-samplers"]], "Creating the model": [[5, "creating-the-model"]], "Visualizing the results": [[5, "visualizing-the-results"]], "Inspecting pretext task performance": [[5, "inspecting-pretext-task-performance"]], "Using the learned representation for sleep staging": [[5, "using-the-learned-representation-for-sleep-staging"]], "Conclusion": [[5, "conclusion"]], "Computation times": [[6, "computation-times"], [13, "computation-times"], [23, "computation-times"], [33, "computation-times"], [34, "computation-times"], [141, "computation-times"]], "Applied examples on real-world datasets": [[7, "applied-examples-on-real-world-datasets"], [24, "applied-examples-on-real-world-datasets"]], "Fingers flexion decoding on BCIC IV 4 ECoG Dataset": [[8, "fingers-flexion-decoding-on-bcic-iv-4-ecog-dataset"]], "Split dataset into train, valid, and test": [[8, "split-dataset-into-train-valid-and-test"]], "Sleep staging on the Sleep Physionet dataset using Chambon2018 network": [[9, "sleep-staging-on-the-sleep-physionet-dataset-using-chambon2018-network"]], "Extract windows": [[9, "extract-windows"], [10, "extract-windows"], [11, "extract-windows"]], "Window preprocessing": [[9, "window-preprocessing"], [10, "window-preprocessing"]], "Create sequence samplers": [[9, "create-sequence-samplers"], [10, "create-sequence-samplers"], [11, "create-sequence-samplers"]], "Sleep staging on the Sleep Physionet dataset using Eldele2021": [[10, "sleep-staging-on-the-sleep-physionet-dataset-using-eldele2021"]], "Sleep staging on the Sleep Physionet dataset using U-Sleep network": [[11, "sleep-staging-on-the-sleep-physionet-dataset-using-u-sleep-network"]], "Process a big data EEG resource (TUH EEG Corpus)": [[12, "process-a-big-data-eeg-resource-tuh-eeg-corpus"]], "Creating the dataset using TUHMock": [[12, "creating-the-dataset-using-tuhmock"]], "Selecting recordings": [[12, "selecting-recordings"]], "Combining preprocessing steps": [[12, "combining-preprocessing-steps"]], "Benchmarking eager and lazy loading": [[14, "benchmarking-eager-and-lazy-loading"]], "Loading and organizing data": [[15, "loading-and-organizing-data"], [24, "loading-and-organizing-data"]], "Benchmarking preprocessing with parallelization and serialization": [[16, "benchmarking-preprocessing-with-parallelization-and-serialization"]], "Custom Dataset Example": [[17, "custom-dataset-example"]], "Load and save dataset example": [[18, "load-and-save-dataset-example"]], "MNE Dataset Example": [[19, "mne-dataset-example"]], "MOABB Dataset Example": [[20, "moabb-dataset-example"]], "Split Dataset Example": [[21, "split-dataset-example"]], "Loading the dataset": [[21, "loading-the-dataset"], [28, "loading-the-dataset"]], "Splitting": [[21, "splitting"]], "By description information": [[21, "by-description-information"]], "By row index": [[21, "by-row-index"]], "Observation": [[21, "observation"]], "Multiple discrete targets with the TUH EEG Corpus": [[22, "multiple-discrete-targets-with-the-tuh-eeg-corpus"]], "Creating Temple University Hospital (TUH) EEG Corpus Dataset": [[22, "creating-temple-university-hospital-tuh-eeg-corpus-dataset"]], "Exploring Data": [[22, "exploring-data"]], "Creating Windows": [[22, "creating-windows"]], "Exploring Windows": [[22, "exploring-windows"]], "DataLoader for Model Training": [[22, "dataloader-for-model-training"]], "Exploring DataLoader": [[22, "exploring-dataloader"]], "Examples": [[24, "examples"]], "Basic model building and training": [[24, "basic-model-building-and-training"], [25, "basic-model-building-and-training"]], "Simple training on MNE epochs": [[26, "simple-training-on-mne-epochs"]], "Finding the model you want": [[26, "finding-the-model-you-want"]], "Exploring the braindecode online documentation": [[26, "exploring-the-braindecode-online-documentation"]], "Examining the model": [[26, "examining-the-model"]], "Loading your own data with MNE": [[26, "loading-your-own-data-with-mne"]], "Training your model (scikit-learn compatible)": [[26, "training-your-model-scikit-learn-compatible"]], "Cropped Decoding on BCIC IV 2a Dataset": [[27, "cropped-decoding-on-bcic-iv-2a-dataset"]], "Create model and compute windowing parameters": [[27, "create-model-and-compute-windowing-parameters"]], "Cut the data into windows": [[27, "cut-the-data-into-windows"]], "Split the dataset": [[27, "split-the-dataset"]], "Plot Confusion Matrix": [[27, "plot-confusion-matrix"]], "Basic Brain Decoding on EEG Data": [[28, "basic-brain-decoding-on-eeg-data"]], "Loading and preparing the data": [[28, "loading-and-preparing-the-data"]], "Extracting Compute Windows": [[28, "extracting-compute-windows"]], "Splitting the dataset into training and validation sets": [[28, "splitting-the-dataset-into-training-and-validation-sets"]], "Creating a model": [[28, "creating-a-model"]], "Model Training": [[28, "model-training"]], "Plotting Results": [[28, "plotting-results"]], "Plotting a  Confusion Matrix": [[28, "plotting-a-confusion-matrix"]], "How to train, test and tune your model?": [[29, "how-to-train-test-and-tune-your-model"]], "Why should I care about model evaluation?": [[29, "why-should-i-care-about-model-evaluation"], [32, "why-should-i-care-about-model-evaluation"]], "Loading and preprocessing of data, defining a model, etc.": [[29, "loading-and-preprocessing-of-data-defining-a-model-etc"]], "Loading data": [[29, "loading-data"]], "Preprocessing data": [[29, "preprocessing-data"]], "Extraction of the Windows": [[29, "extraction-of-the-windows"], [30, "extraction-of-the-windows"]], "How to train and evaluate your model": [[29, "how-to-train-and-evaluate-your-model"], [32, "how-to-train-and-evaluate-your-model"]], "Option 1: Simple Train-Test Split": [[29, "option-1-simple-train-test-split"]], "Let\u2019s visualize the first option with a util function.": [[29, "let-s-visualize-the-first-option-with-a-util-function"]], "Option 2: Train-Val-Test Split": [[29, "option-2-train-val-test-split"]], "Let\u2019s visualize the second option with a util function.": [[29, "let-s-visualize-the-second-option-with-a-util-function"]], "Option 3: k-Fold Cross Validation": [[29, "option-3-k-fold-cross-validation"]], "Let\u2019s visualize the third option with a util function.": [[29, "let-s-visualize-the-third-option-with-a-util-function"]], "How to tune your hyperparameters": [[29, "how-to-tune-your-hyperparameters"]], "Option 1: Train-Val-Test Split": [[29, "option-1-train-val-test-split"]], "Option 2: k-Fold Cross Validation": [[29, "option-2-k-fold-cross-validation"]], "Hyperparameter tuning with scikit-learn": [[30, "hyperparameter-tuning-with-scikit-learn"]], "Why do you need to tune the neural networks model?": [[30, null]], "Extraction of the Compute Windows": [[30, "extraction-of-the-compute-windows"]], "Plotting the results": [[30, "plotting-the-results"]], "Get the best hyperparameters": [[30, "get-the-best-hyperparameters"]], "Convolutional neural network regression model on fake data.": [[31, "convolutional-neural-network-regression-model-on-fake-data"]], "Fake regression data": [[31, "fake-regression-data"]], "Generating fake regression dataset": [[31, "generating-fake-regression-dataset"]], "Defining a CNN regression model": [[31, "defining-a-cnn-regression-model"]], "Choosing between GPU and CPU processors": [[31, "choosing-between-gpu-and-cpu-processors"]], "Data windowing": [[31, "data-windowing"]], "Model training": [[31, "model-training"]], "Model evaluation": [[31, "model-evaluation"]], "Model testing": [[31, "model-testing"]], "Training a Braindecode model in PyTorch": [[32, "training-a-braindecode-model-in-pytorch"]], "Loading, preprocessing, defining a model, etc.": [[32, "loading-preprocessing-defining-a-model-etc"]], "Loading the Dataset Structure": [[32, "loading-the-dataset-structure"]], "Preprocessing, the offline transformation of the raw dataset": [[32, "preprocessing-the-offline-transformation-of-the-raw-dataset"]], "Create Pytorch model": [[32, "create-pytorch-model"]], "Option 1: Pure PyTorch training loop": [[32, "option-1-pure-pytorch-training-loop"]], "Option 2: Train it with PyTorch Lightning": [[32, "option-2-train-it-with-pytorch-lightning"]], "How to cite Braindecode": [[35, "how-to-cite-braindecode"]], "Citing the Braindecode": [[35, "citing-the-braindecode"]], "Citing the MNE": [[35, "citing-the-mne"]], "Citing other algorithms": [[35, "citing-other-algorithms"]], "braindecode.augmentation.AugmentedDataLoader": [[36, "braindecode-augmentation-augmenteddataloader"]], "Examples using braindecode.augmentation.AugmentedDataLoader": [[36, "examples-using-braindecode-augmentation-augmenteddataloader"]], "braindecode.augmentation.BandstopFilter": [[37, "braindecode-augmentation-bandstopfilter"]], "braindecode.augmentation.ChannelsDropout": [[38, "braindecode-augmentation-channelsdropout"]], "Examples using braindecode.augmentation.ChannelsDropout": [[38, "examples-using-braindecode-augmentation-channelsdropout"]], "braindecode.augmentation.ChannelsShuffle": [[39, "braindecode-augmentation-channelsshuffle"]], "braindecode.augmentation.ChannelsSymmetry": [[40, "braindecode-augmentation-channelssymmetry"]], "braindecode.augmentation.Compose": [[41, "braindecode-augmentation-compose"]], "Examples using braindecode.augmentation.Compose": [[41, "examples-using-braindecode-augmentation-compose"]], "braindecode.augmentation.FTSurrogate": [[42, "braindecode-augmentation-ftsurrogate"]], "Examples using braindecode.augmentation.FTSurrogate": [[42, "examples-using-braindecode-augmentation-ftsurrogate"]], "braindecode.augmentation.FrequencyShift": [[43, "braindecode-augmentation-frequencyshift"]], "Examples using braindecode.augmentation.FrequencyShift": [[43, "examples-using-braindecode-augmentation-frequencyshift"]], "braindecode.augmentation.GaussianNoise": [[44, "braindecode-augmentation-gaussiannoise"]], "braindecode.augmentation.IdentityTransform": [[45, "braindecode-augmentation-identitytransform"]], "braindecode.augmentation.Mixup": [[46, "braindecode-augmentation-mixup"]], "braindecode.augmentation.SensorsRotation": [[47, "braindecode-augmentation-sensorsrotation"]], "braindecode.augmentation.SensorsXRotation": [[48, "braindecode-augmentation-sensorsxrotation"]], "braindecode.augmentation.SensorsYRotation": [[49, "braindecode-augmentation-sensorsyrotation"]], "braindecode.augmentation.SensorsZRotation": [[50, "braindecode-augmentation-sensorszrotation"]], "braindecode.augmentation.SignFlip": [[51, "braindecode-augmentation-signflip"]], "Examples using braindecode.augmentation.SignFlip": [[51, "examples-using-braindecode-augmentation-signflip"]], "braindecode.augmentation.SmoothTimeMask": [[52, "braindecode-augmentation-smoothtimemask"]], "Examples using braindecode.augmentation.SmoothTimeMask": [[52, "examples-using-braindecode-augmentation-smoothtimemask"]], "braindecode.augmentation.TimeReverse": [[53, "braindecode-augmentation-timereverse"]], "braindecode.augmentation.Transform": [[54, "braindecode-augmentation-transform"]], "Examples using braindecode.augmentation.Transform": [[54, "examples-using-braindecode-augmentation-transform"]], "braindecode.augmentation.functional.bandstop_filter": [[55, "braindecode-augmentation-functional-bandstop-filter"]], "braindecode.augmentation.functional.channels_dropout": [[56, "braindecode-augmentation-functional-channels-dropout"]], "braindecode.augmentation.functional.channels_permute": [[57, "braindecode-augmentation-functional-channels-permute"]], "braindecode.augmentation.functional.channels_shuffle": [[58, "braindecode-augmentation-functional-channels-shuffle"]], "braindecode.augmentation.functional.frequency_shift": [[59, "braindecode-augmentation-functional-frequency-shift"]], "braindecode.augmentation.functional.ft_surrogate": [[60, "braindecode-augmentation-functional-ft-surrogate"]], "braindecode.augmentation.functional.gaussian_noise": [[61, "braindecode-augmentation-functional-gaussian-noise"]], "braindecode.augmentation.functional.identity": [[62, "braindecode-augmentation-functional-identity"]], "braindecode.augmentation.functional.mixup": [[63, "braindecode-augmentation-functional-mixup"]], "braindecode.augmentation.functional.sensors_rotation": [[64, "braindecode-augmentation-functional-sensors-rotation"]], "braindecode.augmentation.functional.sign_flip": [[65, "braindecode-augmentation-functional-sign-flip"]], "braindecode.augmentation.functional.smooth_time_mask": [[66, "braindecode-augmentation-functional-smooth-time-mask"]], "braindecode.augmentation.functional.time_reverse": [[67, "braindecode-augmentation-functional-time-reverse"]], "braindecode.classifier.EEGClassifier": [[68, "braindecode-classifier-eegclassifier"]], "braindecode.datasets.BCICompetitionIVDataset4": [[69, "braindecode-datasets-bcicompetitionivdataset4"]], "Examples using braindecode.datasets.BCICompetitionIVDataset4": [[69, "examples-using-braindecode-datasets-bcicompetitionivdataset4"]], "braindecode.datasets.BNCI2014001": [[70, "braindecode-datasets-bnci2014001"]], "Dataset summary": [[70, null], [73, null]], "braindecode.datasets.BaseConcatDataset": [[71, "braindecode-datasets-baseconcatdataset"]], "Examples using braindecode.datasets.BaseConcatDataset": [[71, "examples-using-braindecode-datasets-baseconcatdataset"]], "braindecode.datasets.BaseDataset": [[72, "braindecode-datasets-basedataset"]], "Examples using braindecode.datasets.BaseDataset": [[72, "examples-using-braindecode-datasets-basedataset"]], "braindecode.datasets.HGD": [[73, "braindecode-datasets-hgd"]], "braindecode.datasets.MOABBDataset": [[74, "braindecode-datasets-moabbdataset"]], "Examples using braindecode.datasets.MOABBDataset": [[74, "examples-using-braindecode-datasets-moabbdataset"]], "braindecode.datasets.SleepPhysionet": [[75, "braindecode-datasets-sleepphysionet"]], "Examples using braindecode.datasets.SleepPhysionet": [[75, "examples-using-braindecode-datasets-sleepphysionet"]], "braindecode.datasets.TUH": [[76, "braindecode-datasets-tuh"]], "Examples using braindecode.datasets.TUH": [[76, "examples-using-braindecode-datasets-tuh"]], "braindecode.datasets.TUHAbnormal": [[77, "braindecode-datasets-tuhabnormal"]], "Examples using braindecode.datasets.TUHAbnormal": [[77, "examples-using-braindecode-datasets-tuhabnormal"]], "braindecode.datasets.WindowsDataset": [[78, "braindecode-datasets-windowsdataset"]], "braindecode.datasets.create_from_X_y": [[79, "braindecode-datasets-create-from-x-y"]], "Examples using braindecode.datasets.create_from_X_y": [[79, "examples-using-braindecode-datasets-create-from-x-y"]], "braindecode.datasets.create_from_mne_epochs": [[80, "braindecode-datasets-create-from-mne-epochs"]], "Examples using braindecode.datasets.create_from_mne_epochs": [[80, "examples-using-braindecode-datasets-create-from-mne-epochs"]], "braindecode.datasets.create_from_mne_raw": [[81, "braindecode-datasets-create-from-mne-raw"]], "Examples using braindecode.datasets.create_from_mne_raw": [[81, "examples-using-braindecode-datasets-create-from-mne-raw"]], "braindecode.datautil.load_concat_dataset": [[82, "braindecode-datautil-load-concat-dataset"]], "Examples using braindecode.datautil.load_concat_dataset": [[82, "examples-using-braindecode-datautil-load-concat-dataset"]], "braindecode.datautil.save_concat_dataset": [[83, "braindecode-datautil-save-concat-dataset"]], "braindecode.models.ATCNet": [[84, "braindecode-models-atcnet"]], "braindecode.models.Deep4Net": [[85, "braindecode-models-deep4net"]], "Examples using braindecode.models.Deep4Net": [[85, "examples-using-braindecode-models-deep4net"]], "braindecode.models.DeepSleepNet": [[86, "braindecode-models-deepsleepnet"]], "braindecode.models.EEGConformer": [[87, "braindecode-models-eegconformer"]], "braindecode.models.EEGITNet": [[88, "braindecode-models-eegitnet"]], "braindecode.models.EEGInception": [[89, "braindecode-models-eeginception"]], "braindecode.models.EEGInceptionERP": [[90, "braindecode-models-eeginceptionerp"]], "braindecode.models.EEGInceptionMI": [[91, "braindecode-models-eeginceptionmi"]], "braindecode.models.EEGModuleMixin": [[92, "braindecode-models-eegmodulemixin"]], "Examples using braindecode.models.EEGModuleMixin": [[92, "examples-using-braindecode-models-eegmodulemixin"]], "braindecode.models.EEGNetv1": [[93, "braindecode-models-eegnetv1"]], "braindecode.models.EEGNetv4": [[94, "braindecode-models-eegnetv4"]], "braindecode.models.EEGResNet": [[95, "braindecode-models-eegresnet"]], "braindecode.models.HybridNet": [[96, "braindecode-models-hybridnet"]], "braindecode.models.ShallowFBCSPNet": [[97, "braindecode-models-shallowfbcspnet"]], "Examples using braindecode.models.ShallowFBCSPNet": [[97, "examples-using-braindecode-models-shallowfbcspnet"]], "braindecode.models.SleepStagerBlanco2020": [[98, "braindecode-models-sleepstagerblanco2020"]], "braindecode.models.SleepStagerChambon2018": [[99, "braindecode-models-sleepstagerchambon2018"]], "Examples using braindecode.models.SleepStagerChambon2018": [[99, "examples-using-braindecode-models-sleepstagerchambon2018"]], "braindecode.models.SleepStagerEldele2021": [[100, "braindecode-models-sleepstagereldele2021"]], "Examples using braindecode.models.SleepStagerEldele2021": [[100, "examples-using-braindecode-models-sleepstagereldele2021"]], "braindecode.models.TCN": [[101, "braindecode-models-tcn"]], "braindecode.models.TIDNet": [[102, "braindecode-models-tidnet"]], "braindecode.models.TimeDistributed": [[103, "braindecode-models-timedistributed"]], "Examples using braindecode.models.TimeDistributed": [[103, "examples-using-braindecode-models-timedistributed"]], "braindecode.models.USleep": [[104, "braindecode-models-usleep"]], "Examples using braindecode.models.USleep": [[104, "examples-using-braindecode-models-usleep"]], "braindecode.models.get_output_shape": [[105, "braindecode-models-get-output-shape"]], "Examples using braindecode.models.get_output_shape": [[105, "examples-using-braindecode-models-get-output-shape"]], "braindecode.preprocessing.Crop": [[106, "braindecode-preprocessing-crop"]], "braindecode.preprocessing.DropChannels": [[107, "braindecode-preprocessing-dropchannels"]], "braindecode.preprocessing.Filter": [[108, "braindecode-preprocessing-filter"]], "braindecode.preprocessing.Pick": [[109, "braindecode-preprocessing-pick"]], "braindecode.preprocessing.Preprocessor": [[110, "braindecode-preprocessing-preprocessor"]], "Examples using braindecode.preprocessing.Preprocessor": [[110, "examples-using-braindecode-preprocessing-preprocessor"]], "braindecode.preprocessing.Resample": [[111, "braindecode-preprocessing-resample"]], "braindecode.preprocessing.SetEEGReference": [[112, "braindecode-preprocessing-seteegreference"]], "braindecode.preprocessing.create_fixed_length_windows": [[113, "braindecode-preprocessing-create-fixed-length-windows"]], "Examples using braindecode.preprocessing.create_fixed_length_windows": [[113, "examples-using-braindecode-preprocessing-create-fixed-length-windows"]], "braindecode.preprocessing.create_windows_from_events": [[114, "braindecode-preprocessing-create-windows-from-events"]], "Examples using braindecode.preprocessing.create_windows_from_events": [[114, "examples-using-braindecode-preprocessing-create-windows-from-events"]], "braindecode.preprocessing.create_windows_from_target_channels": [[115, "braindecode-preprocessing-create-windows-from-target-channels"]], "Examples using braindecode.preprocessing.create_windows_from_target_channels": [[115, "examples-using-braindecode-preprocessing-create-windows-from-target-channels"]], "braindecode.preprocessing.exponential_moving_demean": [[116, "braindecode-preprocessing-exponential-moving-demean"]], "braindecode.preprocessing.exponential_moving_standardize": [[117, "braindecode-preprocessing-exponential-moving-standardize"]], "Examples using braindecode.preprocessing.exponential_moving_standardize": [[117, "examples-using-braindecode-preprocessing-exponential-moving-standardize"]], "braindecode.preprocessing.filterbank": [[118, "braindecode-preprocessing-filterbank"]], "braindecode.preprocessing.preprocess": [[119, "braindecode-preprocessing-preprocess"]], "Examples using braindecode.preprocessing.preprocess": [[119, "examples-using-braindecode-preprocessing-preprocess"]], "braindecode.regressor.EEGRegressor": [[120, "braindecode-regressor-eegregressor"]], "braindecode.samplers.BalancedSequenceSampler": [[121, "braindecode-samplers-balancedsequencesampler"]], "braindecode.samplers.RecordingSampler": [[122, "braindecode-samplers-recordingsampler"]], "Examples using braindecode.samplers.RecordingSampler": [[122, "examples-using-braindecode-samplers-recordingsampler"]], "braindecode.samplers.RelativePositioningSampler": [[123, "braindecode-samplers-relativepositioningsampler"]], "Examples using braindecode.samplers.RelativePositioningSampler": [[123, "examples-using-braindecode-samplers-relativepositioningsampler"]], "braindecode.samplers.SequenceSampler": [[124, "braindecode-samplers-sequencesampler"]], "Examples using braindecode.samplers.SequenceSampler": [[124, "examples-using-braindecode-samplers-sequencesampler"]], "braindecode.training.CroppedLoss": [[125, "braindecode-training-croppedloss"]], "Examples using braindecode.training.CroppedLoss": [[125, "examples-using-braindecode-training-croppedloss"]], "braindecode.training.CroppedTimeSeriesEpochScoring": [[126, "braindecode-training-croppedtimeseriesepochscoring"]], "Examples using braindecode.training.CroppedTimeSeriesEpochScoring": [[126, "examples-using-braindecode-training-croppedtimeseriesepochscoring"]], "braindecode.training.CroppedTrialEpochScoring": [[127, "braindecode-training-croppedtrialepochscoring"]], "Examples using braindecode.training.CroppedTrialEpochScoring": [[127, "examples-using-braindecode-training-croppedtrialepochscoring"]], "braindecode.training.PostEpochTrainScoring": [[128, "braindecode-training-postepochtrainscoring"]], "braindecode.training.TimeSeriesLoss": [[129, "braindecode-training-timeseriesloss"]], "Examples using braindecode.training.TimeSeriesLoss": [[129, "examples-using-braindecode-training-timeseriesloss"]], "braindecode.training.mixup_criterion": [[130, "braindecode-training-mixup-criterion"]], "braindecode.training.predict_trials": [[131, "braindecode-training-predict-trials"]], "braindecode.training.trial_preds_from_window_preds": [[132, "braindecode-training-trial-preds-from-window-preds"]], "braindecode.util.set_random_seeds": [[133, "braindecode-util-set-random-seeds"]], "Examples using braindecode.util.set_random_seeds": [[133, "examples-using-braindecode-util-set-random-seeds"]], "braindecode.visualization.compute_amplitude_gradients": [[134, "braindecode-visualization-compute-amplitude-gradients"]], "braindecode.visualization.plot_confusion_matrix": [[135, "braindecode-visualization-plot-confusion-matrix"]], "Examples using braindecode.visualization.plot_confusion_matrix": [[135, "examples-using-braindecode-visualization-plot-confusion-matrix"]], "Frequently Asked Questions (FAQ)": [[136, "frequently-asked-questions-faq"]], "How do I cite Braindecode?": [[136, "how-do-i-cite-braindecode"]], "Help! I can\u2019t get Python and Braindecode working!": [[136, "help-i-can-t-get-python-and-braindecode-working"]], "I still can\u2019t get it to work!": [[136, "i-still-can-t-get-it-to-work"]], "I think I found a bug, what do I do?": [[136, "i-think-i-found-a-bug-what-do-i-do"]], "Braindecode Homepage": [[137, "braindecode-homepage"]], "Installation": [[138, "installation"]], "Installing from PyPI": [[139, "installing-from-pypi"]], "Installing from sources": [[140, "installing-from-sources"]], "Clone the repository from GitHub": [[140, "clone-the-repository-from-github"]], "Installing Braindecode from the source": [[140, "installing-braindecode-from-the-source"]], "Testing if your installation is working": [[140, "testing-if-your-installation-is-working"]], "What\u2019s new": [[142, "what-s-new"]], "Current 0.9 (dev0)": [[142, "current-0-9-dev0"]], "Enhancements": [[142, "enhancements"], [142, "id1"], [142, "id8"], [142, "id11"], [142, "id14"]], "Bugs": [[142, "bugs"], [142, "id6"], [142, "id9"], [142, "id12"], [142, "id15"]], "API changes": [[142, "api-changes"], [142, "id7"], [142, "id10"], [142, "id13"], [142, "id16"]], "Current 0.8 (11-2022)": [[142, "current-0-8-11-2022"]], "Current 0.7 (10-2022)": [[142, "current-0-7-10-2022"]], "Version 0.6 (2021-12-06)": [[142, "version-0-6-2021-12-06"]], "Version 0.5.1 (2021-07-14)": [[142, "version-0-5-1-2021-07-14"]], "Authors": [[142, "authors"]]}, "indexentries": {"braindecode": [[0, "module-braindecode"]], "module": [[0, "module-braindecode"]], "augmenteddataloader (class in braindecode.augmentation)": [[36, "braindecode.augmentation.AugmentedDataLoader"]], "bandstopfilter (class in braindecode.augmentation)": [[37, "braindecode.augmentation.BandstopFilter"]], "get_augmentation_params() (braindecode.augmentation.bandstopfilter method)": [[37, "braindecode.augmentation.BandstopFilter.get_augmentation_params"]], "operation() (braindecode.augmentation.bandstopfilter static method)": [[37, "braindecode.augmentation.BandstopFilter.operation"]], "channelsdropout (class in braindecode.augmentation)": [[38, "braindecode.augmentation.ChannelsDropout"]], "get_augmentation_params() (braindecode.augmentation.channelsdropout method)": [[38, "braindecode.augmentation.ChannelsDropout.get_augmentation_params"]], "operation() (braindecode.augmentation.channelsdropout static method)": [[38, "braindecode.augmentation.ChannelsDropout.operation"]], "channelsshuffle (class in braindecode.augmentation)": [[39, "braindecode.augmentation.ChannelsShuffle"]], "get_augmentation_params() (braindecode.augmentation.channelsshuffle method)": [[39, "braindecode.augmentation.ChannelsShuffle.get_augmentation_params"]], "operation() (braindecode.augmentation.channelsshuffle static method)": [[39, "braindecode.augmentation.ChannelsShuffle.operation"]], "channelssymmetry (class in braindecode.augmentation)": [[40, "braindecode.augmentation.ChannelsSymmetry"]], "get_augmentation_params() (braindecode.augmentation.channelssymmetry method)": [[40, "braindecode.augmentation.ChannelsSymmetry.get_augmentation_params"]], "operation() (braindecode.augmentation.channelssymmetry static method)": [[40, "braindecode.augmentation.ChannelsSymmetry.operation"]], "compose (class in braindecode.augmentation)": [[41, "braindecode.augmentation.Compose"]], "forward() (braindecode.augmentation.compose method)": [[41, "braindecode.augmentation.Compose.forward"]], "ftsurrogate (class in braindecode.augmentation)": [[42, "braindecode.augmentation.FTSurrogate"]], "get_augmentation_params() (braindecode.augmentation.ftsurrogate method)": [[42, "braindecode.augmentation.FTSurrogate.get_augmentation_params"]], "operation() (braindecode.augmentation.ftsurrogate static method)": [[42, "braindecode.augmentation.FTSurrogate.operation"]], "frequencyshift (class in braindecode.augmentation)": [[43, "braindecode.augmentation.FrequencyShift"]], "get_augmentation_params() (braindecode.augmentation.frequencyshift method)": [[43, "braindecode.augmentation.FrequencyShift.get_augmentation_params"]], "operation() (braindecode.augmentation.frequencyshift static method)": [[43, "braindecode.augmentation.FrequencyShift.operation"]], "gaussiannoise (class in braindecode.augmentation)": [[44, "braindecode.augmentation.GaussianNoise"]], "get_augmentation_params() (braindecode.augmentation.gaussiannoise method)": [[44, "braindecode.augmentation.GaussianNoise.get_augmentation_params"]], "operation() (braindecode.augmentation.gaussiannoise static method)": [[44, "braindecode.augmentation.GaussianNoise.operation"]], "identitytransform (class in braindecode.augmentation)": [[45, "braindecode.augmentation.IdentityTransform"]], "operation() (braindecode.augmentation.identitytransform static method)": [[45, "braindecode.augmentation.IdentityTransform.operation"]], "mixup (class in braindecode.augmentation)": [[46, "braindecode.augmentation.Mixup"]], "get_augmentation_params() (braindecode.augmentation.mixup method)": [[46, "braindecode.augmentation.Mixup.get_augmentation_params"]], "operation() (braindecode.augmentation.mixup static method)": [[46, "braindecode.augmentation.Mixup.operation"]], "sensorsrotation (class in braindecode.augmentation)": [[47, "braindecode.augmentation.SensorsRotation"]], "get_augmentation_params() (braindecode.augmentation.sensorsrotation method)": [[47, "braindecode.augmentation.SensorsRotation.get_augmentation_params"]], "operation() (braindecode.augmentation.sensorsrotation static method)": [[47, "braindecode.augmentation.SensorsRotation.operation"]], "sensorsxrotation (class in braindecode.augmentation)": [[48, "braindecode.augmentation.SensorsXRotation"]], "sensorsyrotation (class in braindecode.augmentation)": [[49, "braindecode.augmentation.SensorsYRotation"]], "sensorszrotation (class in braindecode.augmentation)": [[50, "braindecode.augmentation.SensorsZRotation"]], "signflip (class in braindecode.augmentation)": [[51, "braindecode.augmentation.SignFlip"]], "operation() (braindecode.augmentation.signflip static method)": [[51, "braindecode.augmentation.SignFlip.operation"]], "smoothtimemask (class in braindecode.augmentation)": [[52, "braindecode.augmentation.SmoothTimeMask"]], "get_augmentation_params() (braindecode.augmentation.smoothtimemask method)": [[52, "braindecode.augmentation.SmoothTimeMask.get_augmentation_params"]], "operation() (braindecode.augmentation.smoothtimemask static method)": [[52, "braindecode.augmentation.SmoothTimeMask.operation"]], "timereverse (class in braindecode.augmentation)": [[53, "braindecode.augmentation.TimeReverse"]], "operation() (braindecode.augmentation.timereverse static method)": [[53, "braindecode.augmentation.TimeReverse.operation"]], "transform (class in braindecode.augmentation)": [[54, "braindecode.augmentation.Transform"]], "forward() (braindecode.augmentation.transform method)": [[54, "braindecode.augmentation.Transform.forward"]], "get_augmentation_params() (braindecode.augmentation.transform method)": [[54, "braindecode.augmentation.Transform.get_augmentation_params"]], "bandstop_filter() (in module braindecode.augmentation.functional)": [[55, "braindecode.augmentation.functional.bandstop_filter"]], "channels_dropout() (in module braindecode.augmentation.functional)": [[56, "braindecode.augmentation.functional.channels_dropout"]], "channels_permute() (in module braindecode.augmentation.functional)": [[57, "braindecode.augmentation.functional.channels_permute"]], "channels_shuffle() (in module braindecode.augmentation.functional)": [[58, "braindecode.augmentation.functional.channels_shuffle"]], "frequency_shift() (in module braindecode.augmentation.functional)": [[59, "braindecode.augmentation.functional.frequency_shift"]], "ft_surrogate() (in module braindecode.augmentation.functional)": [[60, "braindecode.augmentation.functional.ft_surrogate"]], "gaussian_noise() (in module braindecode.augmentation.functional)": [[61, "braindecode.augmentation.functional.gaussian_noise"]], "identity() (in module braindecode.augmentation.functional)": [[62, "braindecode.augmentation.functional.identity"]], "mixup() (in module braindecode.augmentation.functional)": [[63, "braindecode.augmentation.functional.mixup"]], "sensors_rotation() (in module braindecode.augmentation.functional)": [[64, "braindecode.augmentation.functional.sensors_rotation"]], "sign_flip() (in module braindecode.augmentation.functional)": [[65, "braindecode.augmentation.functional.sign_flip"]], "smooth_time_mask() (in module braindecode.augmentation.functional)": [[66, "braindecode.augmentation.functional.smooth_time_mask"]], "time_reverse() (in module braindecode.augmentation.functional)": [[67, "braindecode.augmentation.functional.time_reverse"]], "eegclassifier (class in braindecode.classifier)": [[68, "braindecode.classifier.EEGClassifier"]], "_criteria (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier._criteria"]], "_modules (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier._modules"]], "_optimizers (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier._optimizers"]], "callbacks_ (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier.callbacks_"]], "classes_ (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier.classes_"]], "criterion_ (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier.criterion_"]], "cuda_dependent_attributes_ (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier.cuda_dependent_attributes_"]], "get_iterator() (braindecode.classifier.eegclassifier method)": [[68, "braindecode.classifier.EEGClassifier.get_iterator"]], "get_loss() (braindecode.classifier.eegclassifier method)": [[68, "braindecode.classifier.EEGClassifier.get_loss"]], "initialized_ (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier.initialized_"]], "module_ (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier.module_"]], "predict() (braindecode.classifier.eegclassifier method)": [[68, "braindecode.classifier.EEGClassifier.predict"]], "predict_proba() (braindecode.classifier.eegclassifier method)": [[68, "braindecode.classifier.EEGClassifier.predict_proba"]], "predict_trials() (braindecode.classifier.eegclassifier method)": [[68, "braindecode.classifier.EEGClassifier.predict_trials"]], "prefixes_ (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier.prefixes_"]], "bcicompetitionivdataset4 (class in braindecode.datasets)": [[69, "braindecode.datasets.BCICompetitionIVDataset4"]], "download() (braindecode.datasets.bcicompetitionivdataset4 static method)": [[69, "braindecode.datasets.BCICompetitionIVDataset4.download"]], "bnci2014001 (class in braindecode.datasets)": [[70, "braindecode.datasets.BNCI2014001"]], "baseconcatdataset (class in braindecode.datasets)": [[71, "braindecode.datasets.BaseConcatDataset"]], "get_metadata() (braindecode.datasets.baseconcatdataset method)": [[71, "braindecode.datasets.BaseConcatDataset.get_metadata"]], "save() (braindecode.datasets.baseconcatdataset method)": [[71, "braindecode.datasets.BaseConcatDataset.save"]], "set_description() (braindecode.datasets.baseconcatdataset method)": [[71, "braindecode.datasets.BaseConcatDataset.set_description"]], "split() (braindecode.datasets.baseconcatdataset method)": [[71, "braindecode.datasets.BaseConcatDataset.split"]], "basedataset (class in braindecode.datasets)": [[72, "braindecode.datasets.BaseDataset"]], "set_description() (braindecode.datasets.basedataset method)": [[72, "braindecode.datasets.BaseDataset.set_description"]], "hgd (class in braindecode.datasets)": [[73, "braindecode.datasets.HGD"]], "moabbdataset (class in braindecode.datasets)": [[74, "braindecode.datasets.MOABBDataset"]], "sleepphysionet (class in braindecode.datasets)": [[75, "braindecode.datasets.SleepPhysionet"]], "tuh (class in braindecode.datasets)": [[76, "braindecode.datasets.TUH"]], "tuhabnormal (class in braindecode.datasets)": [[77, "braindecode.datasets.TUHAbnormal"]], "windowsdataset (class in braindecode.datasets)": [[78, "braindecode.datasets.WindowsDataset"]], "set_description() (braindecode.datasets.windowsdataset method)": [[78, "braindecode.datasets.WindowsDataset.set_description"]], "create_from_x_y() (in module braindecode.datasets)": [[79, "braindecode.datasets.create_from_X_y"]], "create_from_mne_epochs() (in module braindecode.datasets)": [[80, "braindecode.datasets.create_from_mne_epochs"]], "create_from_mne_raw() (in module braindecode.datasets)": [[81, "braindecode.datasets.create_from_mne_raw"]], "load_concat_dataset() (in module braindecode.datautil)": [[82, "braindecode.datautil.load_concat_dataset"]], "save_concat_dataset() (in module braindecode.datautil)": [[83, "braindecode.datautil.save_concat_dataset"]], "atcnet (class in braindecode.models)": [[84, "braindecode.models.ATCNet"]], "forward() (braindecode.models.atcnet method)": [[84, "braindecode.models.ATCNet.forward"]], "deep4net (class in braindecode.models)": [[85, "braindecode.models.Deep4Net"]], "deepsleepnet (class in braindecode.models)": [[86, "braindecode.models.DeepSleepNet"]], "forward() (braindecode.models.deepsleepnet method)": [[86, "braindecode.models.DeepSleepNet.forward"]], "eegconformer (class in braindecode.models)": [[87, "braindecode.models.EEGConformer"]], "forward() (braindecode.models.eegconformer method)": [[87, "braindecode.models.EEGConformer.forward"]], "get_fc_size() (braindecode.models.eegconformer method)": [[87, "braindecode.models.EEGConformer.get_fc_size"]], "eegitnet (class in braindecode.models)": [[88, "braindecode.models.EEGITNet"]], "eeginception (class in braindecode.models)": [[89, "braindecode.models.EEGInception"]], "eeginceptionerp (class in braindecode.models)": [[90, "braindecode.models.EEGInceptionERP"]], "eeginceptionmi (class in braindecode.models)": [[91, "braindecode.models.EEGInceptionMI"]], "forward() (braindecode.models.eeginceptionmi method)": [[91, "braindecode.models.EEGInceptionMI.forward"]], "eegmodulemixin (class in braindecode.models)": [[92, "braindecode.models.EEGModuleMixin"]], "get_output_shape() (braindecode.models.eegmodulemixin method)": [[92, "braindecode.models.EEGModuleMixin.get_output_shape"]], "get_torchinfo_statistics() (braindecode.models.eegmodulemixin method)": [[92, "braindecode.models.EEGModuleMixin.get_torchinfo_statistics"]], "load_state_dict() (braindecode.models.eegmodulemixin method)": [[92, "braindecode.models.EEGModuleMixin.load_state_dict"]], "to_dense_prediction_model() (braindecode.models.eegmodulemixin method)": [[92, "braindecode.models.EEGModuleMixin.to_dense_prediction_model"]], "eegnetv1 (class in braindecode.models)": [[93, "braindecode.models.EEGNetv1"]], "eegnetv4 (class in braindecode.models)": [[94, "braindecode.models.EEGNetv4"]], "eegresnet (class in braindecode.models)": [[95, "braindecode.models.EEGResNet"]], "hybridnet (class in braindecode.models)": [[96, "braindecode.models.HybridNet"]], "forward() (braindecode.models.hybridnet method)": [[96, "braindecode.models.HybridNet.forward"]], "shallowfbcspnet (class in braindecode.models)": [[97, "braindecode.models.ShallowFBCSPNet"]], "sleepstagerblanco2020 (class in braindecode.models)": [[98, "braindecode.models.SleepStagerBlanco2020"]], "forward() (braindecode.models.sleepstagerblanco2020 method)": [[98, "braindecode.models.SleepStagerBlanco2020.forward"]], "sleepstagerchambon2018 (class in braindecode.models)": [[99, "braindecode.models.SleepStagerChambon2018"]], "forward() (braindecode.models.sleepstagerchambon2018 method)": [[99, "braindecode.models.SleepStagerChambon2018.forward"]], "sleepstagereldele2021 (class in braindecode.models)": [[100, "braindecode.models.SleepStagerEldele2021"]], "forward() (braindecode.models.sleepstagereldele2021 method)": [[100, "braindecode.models.SleepStagerEldele2021.forward"]], "tcn (class in braindecode.models)": [[101, "braindecode.models.TCN"]], "forward() (braindecode.models.tcn method)": [[101, "braindecode.models.TCN.forward"]], "tidnet (class in braindecode.models)": [[102, "braindecode.models.TIDNet"]], "forward() (braindecode.models.tidnet method)": [[102, "braindecode.models.TIDNet.forward"]], "timedistributed (class in braindecode.models)": [[103, "braindecode.models.TimeDistributed"]], "forward() (braindecode.models.timedistributed method)": [[103, "braindecode.models.TimeDistributed.forward"]], "usleep (class in braindecode.models)": [[104, "braindecode.models.USleep"]], "forward() (braindecode.models.usleep method)": [[104, "braindecode.models.USleep.forward"]], "get_output_shape() (in module braindecode.models)": [[105, "braindecode.models.get_output_shape"]], "crop (class in braindecode.preprocessing)": [[106, "braindecode.preprocessing.Crop"]], "dropchannels (class in braindecode.preprocessing)": [[107, "braindecode.preprocessing.DropChannels"]], "filter (class in braindecode.preprocessing)": [[108, "braindecode.preprocessing.Filter"]], "pick (class in braindecode.preprocessing)": [[109, "braindecode.preprocessing.Pick"]], "preprocessor (class in braindecode.preprocessing)": [[110, "braindecode.preprocessing.Preprocessor"]], "apply() (braindecode.preprocessing.preprocessor method)": [[110, "braindecode.preprocessing.Preprocessor.apply"]], "resample (class in braindecode.preprocessing)": [[111, "braindecode.preprocessing.Resample"]], "seteegreference (class in braindecode.preprocessing)": [[112, "braindecode.preprocessing.SetEEGReference"]], "create_fixed_length_windows() (in module braindecode.preprocessing)": [[113, "braindecode.preprocessing.create_fixed_length_windows"]], "create_windows_from_events() (in module braindecode.preprocessing)": [[114, "braindecode.preprocessing.create_windows_from_events"]], "create_windows_from_target_channels() (in module braindecode.preprocessing)": [[115, "braindecode.preprocessing.create_windows_from_target_channels"]], "exponential_moving_demean() (in module braindecode.preprocessing)": [[116, "braindecode.preprocessing.exponential_moving_demean"]], "exponential_moving_standardize() (in module braindecode.preprocessing)": [[117, "braindecode.preprocessing.exponential_moving_standardize"]], "filterbank() (in module braindecode.preprocessing)": [[118, "braindecode.preprocessing.filterbank"]], "preprocess() (in module braindecode.preprocessing)": [[119, "braindecode.preprocessing.preprocess"]], "eegregressor (class in braindecode.regressor)": [[120, "braindecode.regressor.EEGRegressor"]], "_criteria (braindecode.regressor.eegregressor attribute)": [[120, "braindecode.regressor.EEGRegressor._criteria"]], "_modules (braindecode.regressor.eegregressor attribute)": [[120, "braindecode.regressor.EEGRegressor._modules"]], "_optimizers (braindecode.regressor.eegregressor attribute)": [[120, "braindecode.regressor.EEGRegressor._optimizers"]], "callbacks_ (braindecode.regressor.eegregressor attribute)": [[120, "braindecode.regressor.EEGRegressor.callbacks_"]], "criterion_ (braindecode.regressor.eegregressor attribute)": [[120, "braindecode.regressor.EEGRegressor.criterion_"]], "cuda_dependent_attributes_ (braindecode.regressor.eegregressor attribute)": [[120, "braindecode.regressor.EEGRegressor.cuda_dependent_attributes_"]], "fit() (braindecode.regressor.eegregressor method)": [[120, "braindecode.regressor.EEGRegressor.fit"]], "get_iterator() (braindecode.regressor.eegregressor method)": [[120, "braindecode.regressor.EEGRegressor.get_iterator"]], "initialized_ (braindecode.regressor.eegregressor attribute)": [[120, "braindecode.regressor.EEGRegressor.initialized_"]], "module_ (braindecode.regressor.eegregressor attribute)": [[120, "braindecode.regressor.EEGRegressor.module_"]], "predict_proba() (braindecode.regressor.eegregressor method)": [[120, "braindecode.regressor.EEGRegressor.predict_proba"]], "predict_trials() (braindecode.regressor.eegregressor method)": [[120, "braindecode.regressor.EEGRegressor.predict_trials"]], "prefixes_ (braindecode.regressor.eegregressor attribute)": [[120, "braindecode.regressor.EEGRegressor.prefixes_"]], "balancedsequencesampler (class in braindecode.samplers)": [[121, "braindecode.samplers.BalancedSequenceSampler"]], "sample_class() (braindecode.samplers.balancedsequencesampler method)": [[121, "braindecode.samplers.BalancedSequenceSampler.sample_class"]], "recordingsampler (class in braindecode.samplers)": [[122, "braindecode.samplers.RecordingSampler"]], "info (braindecode.samplers.recordingsampler attribute)": [[122, "braindecode.samplers.RecordingSampler.info"]], "n_recordings (braindecode.samplers.recordingsampler attribute)": [[122, "braindecode.samplers.RecordingSampler.n_recordings"]], "sample_recording() (braindecode.samplers.recordingsampler method)": [[122, "braindecode.samplers.RecordingSampler.sample_recording"]], "sample_window() (braindecode.samplers.recordingsampler method)": [[122, "braindecode.samplers.RecordingSampler.sample_window"]], "relativepositioningsampler (class in braindecode.samplers)": [[123, "braindecode.samplers.RelativePositioningSampler"]], "presample() (braindecode.samplers.relativepositioningsampler method)": [[123, "braindecode.samplers.RelativePositioningSampler.presample"]], "sequencesampler (class in braindecode.samplers)": [[124, "braindecode.samplers.SequenceSampler"]], "file_ids (braindecode.samplers.sequencesampler attribute)": [[124, "braindecode.samplers.SequenceSampler.file_ids"]], "info (braindecode.samplers.sequencesampler attribute)": [[124, "braindecode.samplers.SequenceSampler.info"]], "croppedloss (class in braindecode.training)": [[125, "braindecode.training.CroppedLoss"]], "forward() (braindecode.training.croppedloss method)": [[125, "braindecode.training.CroppedLoss.forward"]], "croppedtimeseriesepochscoring (class in braindecode.training)": [[126, "braindecode.training.CroppedTimeSeriesEpochScoring"]], "on_epoch_end() (braindecode.training.croppedtimeseriesepochscoring method)": [[126, "braindecode.training.CroppedTimeSeriesEpochScoring.on_epoch_end"]], "croppedtrialepochscoring (class in braindecode.training)": [[127, "braindecode.training.CroppedTrialEpochScoring"]], "on_batch_end() (braindecode.training.croppedtrialepochscoring method)": [[127, "braindecode.training.CroppedTrialEpochScoring.on_batch_end"]], "on_epoch_end() (braindecode.training.croppedtrialepochscoring method)": [[127, "braindecode.training.CroppedTrialEpochScoring.on_epoch_end"]], "postepochtrainscoring (class in braindecode.training)": [[128, "braindecode.training.PostEpochTrainScoring"]], "on_epoch_end() (braindecode.training.postepochtrainscoring method)": [[128, "braindecode.training.PostEpochTrainScoring.on_epoch_end"]], "timeseriesloss (class in braindecode.training)": [[129, "braindecode.training.TimeSeriesLoss"]], "forward() (braindecode.training.timeseriesloss method)": [[129, "braindecode.training.TimeSeriesLoss.forward"]], "mixup_criterion() (in module braindecode.training)": [[130, "braindecode.training.mixup_criterion"]], "predict_trials() (in module braindecode.training)": [[131, "braindecode.training.predict_trials"]], "trial_preds_from_window_preds() (in module braindecode.training)": [[132, "braindecode.training.trial_preds_from_window_preds"]], "set_random_seeds() (in module braindecode.util)": [[133, "braindecode.util.set_random_seeds"]], "compute_amplitude_gradients() (in module braindecode.visualization)": [[134, "braindecode.visualization.compute_amplitude_gradients"]], "plot_confusion_matrix() (in module braindecode.visualization)": [[135, "braindecode.visualization.plot_confusion_matrix"]]}})