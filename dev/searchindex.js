Search.setIndex({"alltitles": {"API Reference": [[0, "api-reference"]], "API changes": [[147, "api-changes"], [147, "id9"], [147, "id12"], [147, "id15"], [147, "id18"]], "Advanced neural network training strategies": [[1, "advanced-neural-network-training-strategies"], [24, "advanced-neural-network-training-strategies"]], "Analysing the best fit": [[4, "analysing-the-best-fit"]], "Applied examples on real-world datasets": [[7, "applied-examples-on-real-world-datasets"], [24, "applied-examples-on-real-world-datasets"]], "Augmentation": [[0, "augmentation"]], "Authors": [[147, "authors"]], "Basic Brain Decoding on EEG Data": [[28, "basic-brain-decoding-on-eeg-data"]], "Basic model building and training": [[24, "basic-model-building-and-training"], [25, "basic-model-building-and-training"]], "Benchmarking eager and lazy loading": [[14, "benchmarking-eager-and-lazy-loading"]], "Benchmarking preprocessing with parallelization and serialization": [[16, "benchmarking-preprocessing-with-parallelization-and-serialization"]], "Braindecode Homepage": [[142, "braindecode-homepage"]], "Bugs": [[147, "bugs"], [147, "id8"], [147, "id11"], [147, "id14"], [147, "id17"]], "By description information": [[21, "by-description-information"]], "By row index": [[21, "by-row-index"]], "Choosing between GPU and CPU processors": [[31, "choosing-between-gpu-and-cpu-processors"]], "Citing other algorithms": [[35, "citing-other-algorithms"]], "Citing the Braindecode": [[35, "citing-the-braindecode"]], "Citing the MNE": [[35, "citing-the-mne"]], "Classifier": [[0, "classifier"]], "Clone the repository from GitHub": [[145, "clone-the-repository-from-github"]], "Combining preprocessing steps": [[12, "combining-preprocessing-steps"]], "Computation times": [[6, "computation-times"], [13, "computation-times"], [23, "computation-times"], [33, "computation-times"], [34, "computation-times"], [146, "computation-times"]], "Conclusion": [[5, "conclusion"]], "Convolutional neural network regression model on fake data.": [[31, "convolutional-neural-network-regression-model-on-fake-data"]], "Create Pytorch model": [[32, "create-pytorch-model"]], "Create an EEGClassifier with the desired augmentation": [[3, "create-an-eegclassifier-with-the-desired-augmentation"], [4, "create-an-eegclassifier-with-the-desired-augmentation"]], "Create model": [[2, "create-model"], [3, "create-model"], [4, "create-model"], [8, "create-model"], [9, "create-model"], [10, "create-model"], [11, "create-model"], [29, "create-model"], [30, "create-model"]], "Create model and compute windowing parameters": [[27, "create-model-and-compute-windowing-parameters"]], "Create sequence samplers": [[9, "create-sequence-samplers"], [10, "create-sequence-samplers"], [11, "create-sequence-samplers"]], "Creating Temple University Hospital (TUH) EEG Corpus Dataset": [[22, "creating-temple-university-hospital-tuh-eeg-corpus-dataset"]], "Creating Windows": [[22, "creating-windows"]], "Creating a model": [[28, "creating-a-model"]], "Creating samplers": [[5, "creating-samplers"]], "Creating the dataset using TUHMock": [[12, "creating-the-dataset-using-tuhmock"]], "Creating the model": [[5, "creating-the-model"]], "Cropped Decoding on BCIC IV 2a Dataset": [[27, "cropped-decoding-on-bcic-iv-2a-dataset"]], "Current 0.7 (10-2022)": [[147, "current-0-7-10-2022"]], "Current 0.8 (11-2022)": [[147, "current-0-8-11-2022"]], "Current 0.9 (dev0)": [[147, "current-0-9-dev0"]], "Custom Dataset Example": [[17, "custom-dataset-example"]], "Cut Compute Windows": [[2, "cut-compute-windows"], [8, "cut-compute-windows"], [12, "cut-compute-windows"], [32, "cut-compute-windows"]], "Cut the data into windows": [[27, "cut-the-data-into-windows"]], "Data Augmentation": [[4, null]], "Data Augmentation on BCIC IV 2a Dataset": [[3, "data-augmentation-on-bcic-iv-2a-dataset"]], "Data Utils": [[0, "data-utils"]], "Data windowing": [[31, "data-windowing"]], "DataLoader for Model Training": [[22, "dataloader-for-model-training"]], "Dataset summary": [[70, null], [73, null]], "Datasets": [[0, "datasets"]], "Defining a CNN regression model": [[31, "defining-a-cnn-regression-model"]], "Defining a Transform": [[3, "defining-a-transform"]], "Defining a list of transforms": [[4, "defining-a-list-of-transforms"]], "Enhancements": [[147, "enhancements"], [147, "id3"], [147, "id10"], [147, "id13"], [147, "id16"]], "Examining the model": [[26, "examining-the-model"]], "Examples": [[24, "examples"]], "Examples using braindecode.augmentation.AugmentedDataLoader": [[36, "examples-using-braindecode-augmentation-augmenteddataloader"]], "Examples using braindecode.augmentation.ChannelsDropout": [[38, "examples-using-braindecode-augmentation-channelsdropout"]], "Examples using braindecode.augmentation.Compose": [[41, "examples-using-braindecode-augmentation-compose"]], "Examples using braindecode.augmentation.FTSurrogate": [[42, "examples-using-braindecode-augmentation-ftsurrogate"]], "Examples using braindecode.augmentation.FrequencyShift": [[43, "examples-using-braindecode-augmentation-frequencyshift"]], "Examples using braindecode.augmentation.SignFlip": [[51, "examples-using-braindecode-augmentation-signflip"]], "Examples using braindecode.augmentation.SmoothTimeMask": [[52, "examples-using-braindecode-augmentation-smoothtimemask"]], "Examples using braindecode.augmentation.Transform": [[54, "examples-using-braindecode-augmentation-transform"]], "Examples using braindecode.datasets.BCICompetitionIVDataset4": [[69, "examples-using-braindecode-datasets-bcicompetitionivdataset4"]], "Examples using braindecode.datasets.BaseConcatDataset": [[71, "examples-using-braindecode-datasets-baseconcatdataset"]], "Examples using braindecode.datasets.BaseDataset": [[72, "examples-using-braindecode-datasets-basedataset"]], "Examples using braindecode.datasets.MOABBDataset": [[74, "examples-using-braindecode-datasets-moabbdataset"]], "Examples using braindecode.datasets.SleepPhysionet": [[76, "examples-using-braindecode-datasets-sleepphysionet"]], "Examples using braindecode.datasets.TUH": [[77, "examples-using-braindecode-datasets-tuh"]], "Examples using braindecode.datasets.TUHAbnormal": [[78, "examples-using-braindecode-datasets-tuhabnormal"]], "Examples using braindecode.datasets.create_from_X_y": [[80, "examples-using-braindecode-datasets-create-from-x-y"]], "Examples using braindecode.datasets.create_from_mne_epochs": [[81, "examples-using-braindecode-datasets-create-from-mne-epochs"]], "Examples using braindecode.datasets.create_from_mne_raw": [[82, "examples-using-braindecode-datasets-create-from-mne-raw"]], "Examples using braindecode.datautil.load_concat_dataset": [[83, "examples-using-braindecode-datautil-load-concat-dataset"]], "Examples using braindecode.models.Deep4Net": [[88, "examples-using-braindecode-models-deep4net"]], "Examples using braindecode.models.EEGModuleMixin": [[95, "examples-using-braindecode-models-eegmodulemixin"]], "Examples using braindecode.models.ShallowFBCSPNet": [[102, "examples-using-braindecode-models-shallowfbcspnet"]], "Examples using braindecode.models.SleepStagerChambon2018": [[104, "examples-using-braindecode-models-sleepstagerchambon2018"]], "Examples using braindecode.models.SleepStagerEldele2021": [[105, "examples-using-braindecode-models-sleepstagereldele2021"]], "Examples using braindecode.models.TimeDistributed": [[108, "examples-using-braindecode-models-timedistributed"]], "Examples using braindecode.models.USleep": [[109, "examples-using-braindecode-models-usleep"]], "Examples using braindecode.models.get_output_shape": [[110, "examples-using-braindecode-models-get-output-shape"]], "Examples using braindecode.preprocessing.Preprocessor": [[115, "examples-using-braindecode-preprocessing-preprocessor"]], "Examples using braindecode.preprocessing.create_fixed_length_windows": [[118, "examples-using-braindecode-preprocessing-create-fixed-length-windows"]], "Examples using braindecode.preprocessing.create_windows_from_events": [[119, "examples-using-braindecode-preprocessing-create-windows-from-events"]], "Examples using braindecode.preprocessing.create_windows_from_target_channels": [[120, "examples-using-braindecode-preprocessing-create-windows-from-target-channels"]], "Examples using braindecode.preprocessing.exponential_moving_standardize": [[122, "examples-using-braindecode-preprocessing-exponential-moving-standardize"]], "Examples using braindecode.preprocessing.preprocess": [[124, "examples-using-braindecode-preprocessing-preprocess"]], "Examples using braindecode.samplers.RecordingSampler": [[127, "examples-using-braindecode-samplers-recordingsampler"]], "Examples using braindecode.samplers.RelativePositioningSampler": [[128, "examples-using-braindecode-samplers-relativepositioningsampler"]], "Examples using braindecode.samplers.SequenceSampler": [[129, "examples-using-braindecode-samplers-sequencesampler"]], "Examples using braindecode.training.CroppedLoss": [[130, "examples-using-braindecode-training-croppedloss"]], "Examples using braindecode.training.CroppedTimeSeriesEpochScoring": [[131, "examples-using-braindecode-training-croppedtimeseriesepochscoring"]], "Examples using braindecode.training.CroppedTrialEpochScoring": [[132, "examples-using-braindecode-training-croppedtrialepochscoring"]], "Examples using braindecode.training.TimeSeriesLoss": [[134, "examples-using-braindecode-training-timeseriesloss"]], "Examples using braindecode.util.set_random_seeds": [[138, "examples-using-braindecode-util-set-random-seeds"]], "Examples using braindecode.visualization.plot_confusion_matrix": [[140, "examples-using-braindecode-visualization-plot-confusion-matrix"]], "Exploring Data": [[22, "exploring-data"]], "Exploring DataLoader": [[22, "exploring-dataloader"]], "Exploring Windows": [[22, "exploring-windows"]], "Exploring the braindecode online documentation": [[26, "exploring-the-braindecode-online-documentation"]], "Extract windows": [[9, "extract-windows"], [10, "extract-windows"], [11, "extract-windows"]], "Extracting Compute Windows": [[28, "extracting-compute-windows"]], "Extracting windows": [[3, "extracting-windows"], [4, "extracting-windows"], [5, "extracting-windows"]], "Extraction of the Compute Windows": [[30, "extraction-of-the-compute-windows"]], "Extraction of the Windows": [[29, "extraction-of-the-windows"], [30, "extraction-of-the-windows"]], "Fake regression data": [[31, "fake-regression-data"]], "Finding the model you want": [[26, "finding-the-model-you-want"]], "Fingers flexion cropped decoding on BCIC IV 4 ECoG Dataset": [[2, "fingers-flexion-cropped-decoding-on-bcic-iv-4-ecog-dataset"]], "Fingers flexion decoding on BCIC IV 4 ECoG Dataset": [[8, "fingers-flexion-decoding-on-bcic-iv-4-ecog-dataset"]], "Frequently Asked Questions (FAQ)": [[141, "frequently-asked-questions-faq"]], "Generating fake regression dataset": [[31, "generating-fake-regression-dataset"]], "Get the best hyperparameters": [[30, "get-the-best-hyperparameters"]], "Help! I can\u2019t get Python and Braindecode working!": [[141, "help-i-can-t-get-python-and-braindecode-working"]], "How do I cite Braindecode?": [[141, "how-do-i-cite-braindecode"]], "How to cite Braindecode": [[35, "how-to-cite-braindecode"]], "How to train and evaluate your model": [[29, "how-to-train-and-evaluate-your-model"], [32, "how-to-train-and-evaluate-your-model"]], "How to train, test and tune your model?": [[29, "how-to-train-test-and-tune-your-model"]], "How to tune your hyperparameters": [[29, "how-to-tune-your-hyperparameters"]], "Hyperparameter tuning with scikit-learn": [[30, "hyperparameter-tuning-with-scikit-learn"]], "I still can\u2019t get it to work!": [[141, "i-still-can-t-get-it-to-work"]], "I think I found a bug, what do I do?": [[141, "i-think-i-found-a-bug-what-do-i-do"]], "Inspecting pretext task performance": [[5, "inspecting-pretext-task-performance"]], "Installation": [[143, "installation"]], "Installing Braindecode from the source": [[145, "installing-braindecode-from-the-source"]], "Installing from PyPI": [[144, "installing-from-pypi"]], "Installing from sources": [[145, "installing-from-sources"]], "Let\u2019s visualize the first option with a util function.": [[29, "let-s-visualize-the-first-option-with-a-util-function"]], "Let\u2019s visualize the second option with a util function.": [[29, "let-s-visualize-the-second-option-with-a-util-function"]], "Let\u2019s visualize the third option with a util function.": [[29, "let-s-visualize-the-third-option-with-a-util-function"]], "Load and save dataset example": [[18, "load-and-save-dataset-example"]], "Loading": [[2, "loading"], [3, "loading"], [4, "loading"], [8, "loading"], [9, "loading"], [10, "loading"], [11, "loading"], [30, "loading"]], "Loading and organizing data": [[15, "loading-and-organizing-data"], [24, "loading-and-organizing-data"]], "Loading and preparing the data": [[28, "loading-and-preparing-the-data"]], "Loading and preparing the dataset": [[2, "loading-and-preparing-the-dataset"], [8, "loading-and-preparing-the-dataset"]], "Loading and preprocessing of data, defining a model, etc.": [[29, "loading-and-preprocessing-of-data-defining-a-model-etc"]], "Loading and preprocessing the dataset": [[3, "loading-and-preprocessing-the-dataset"], [4, "loading-and-preprocessing-the-dataset"], [5, "loading-and-preprocessing-the-dataset"], [9, "loading-and-preprocessing-the-dataset"], [10, "loading-and-preprocessing-the-dataset"], [11, "loading-and-preprocessing-the-dataset"], [27, "loading-and-preprocessing-the-dataset"], [30, "loading-and-preprocessing-the-dataset"]], "Loading data": [[29, "loading-data"]], "Loading the Dataset Structure": [[32, "loading-the-dataset-structure"]], "Loading the dataset": [[21, "loading-the-dataset"], [28, "loading-the-dataset"]], "Loading the raw recordings": [[5, "loading-the-raw-recordings"]], "Loading your own data with MNE": [[26, "loading-your-own-data-with-mne"]], "Loading, preprocessing, defining a model, etc.": [[32, "loading-preprocessing-defining-a-model-etc"]], "MNE Dataset Example": [[19, "mne-dataset-example"]], "MOABB Dataset Example": [[20, "moabb-dataset-example"]], "Manipulating one session and visualizing the transformed data": [[3, "manipulating-one-session-and-visualizing-the-transformed-data"]], "Manually composing Transforms": [[3, "manually-composing-transforms"]], "Model Training": [[28, "model-training"]], "Model evaluation": [[31, "model-evaluation"]], "Model testing": [[31, "model-testing"]], "Model training": [[31, "model-training"]], "Models": [[0, "models"]], "Multiple discrete targets with the TUH EEG Corpus": [[22, "multiple-discrete-targets-with-the-tuh-eeg-corpus"]], "Observation": [[21, "observation"]], "Option 1: Pure PyTorch training loop": [[32, "option-1-pure-pytorch-training-loop"]], "Option 1: Simple Train-Test Split": [[29, "option-1-simple-train-test-split"]], "Option 1: Train-Val-Test Split": [[29, "option-1-train-val-test-split"]], "Option 2: Train it with PyTorch Lightning": [[32, "option-2-train-it-with-pytorch-lightning"]], "Option 2: Train-Val-Test Split": [[29, "option-2-train-val-test-split"]], "Option 2: k-Fold Cross Validation": [[29, "option-2-k-fold-cross-validation"]], "Option 3: k-Fold Cross Validation": [[29, "option-3-k-fold-cross-validation"]], "Plot Confusion Matrix": [[27, "plot-confusion-matrix"]], "Plot Results": [[2, "plot-results"], [8, "plot-results"], [27, "plot-results"]], "Plot results": [[4, "plot-results"], [9, "plot-results"], [10, "plot-results"], [11, "plot-results"]], "Plotting Results": [[28, "plotting-results"]], "Plotting a  Confusion Matrix": [[28, "plotting-a-confusion-matrix"]], "Plotting the results": [[30, "plotting-the-results"]], "Preprocessing": [[0, "preprocessing"], [2, "preprocessing"], [3, "preprocessing"], [4, "preprocessing"], [5, "preprocessing"], [8, "preprocessing"], [9, "preprocessing"], [10, "preprocessing"], [11, "preprocessing"], [12, "preprocessing"], [28, "preprocessing"], [30, "preprocessing"]], "Preprocessing data": [[29, "preprocessing-data"]], "Preprocessing windows": [[5, "preprocessing-windows"]], "Preprocessing, the offline transformation of the raw dataset": [[32, "preprocessing-the-offline-transformation-of-the-raw-dataset"]], "Process a big data EEG resource (TUH EEG Corpus)": [[12, "process-a-big-data-eeg-resource-tuh-eeg-corpus"]], "References": [[4, "references"], [5, "references"], [9, "references"], [10, "references"], [11, "references"], [26, "references"], [27, "references"], [28, "references"], [29, "references"], [30, "references"], [31, "references"], [141, "references"]], "Regressor": [[0, "regressor"]], "Samplers": [[0, "samplers"]], "Searching the best data augmentation on BCIC IV 2a Dataset": [[4, "searching-the-best-data-augmentation-on-bcic-iv-2a-dataset"]], "Selecting recordings": [[12, "selecting-recordings"]], "Self-supervised learning": [[5, null]], "Self-supervised learning on EEG with relative positioning": [[5, "self-supervised-learning-on-eeg-with-relative-positioning"]], "Setting the data augmentation at the Dataset level": [[3, "setting-the-data-augmentation-at-the-dataset-level"]], "Simple training on MNE epochs": [[26, "simple-training-on-mne-epochs"]], "Sleep staging on the Sleep Physionet dataset using Chambon2018 network": [[9, "sleep-staging-on-the-sleep-physionet-dataset-using-chambon2018-network"]], "Sleep staging on the Sleep Physionet dataset using Eldele2021": [[10, "sleep-staging-on-the-sleep-physionet-dataset-using-eldele2021"]], "Sleep staging on the Sleep Physionet dataset using U-Sleep network": [[11, "sleep-staging-on-the-sleep-physionet-dataset-using-u-sleep-network"]], "Split Dataset Example": [[21, "split-dataset-example"]], "Split dataset into train and test": [[2, "split-dataset-into-train-and-test"], [29, "split-dataset-into-train-and-test"], [32, "split-dataset-into-train-and-test"]], "Split dataset into train and valid": [[3, "split-dataset-into-train-and-valid"], [4, "split-dataset-into-train-and-valid"], [9, "split-dataset-into-train-and-valid"], [10, "split-dataset-into-train-and-valid"], [11, "split-dataset-into-train-and-valid"], [30, "split-dataset-into-train-and-valid"]], "Split dataset into train, valid, and test": [[8, "split-dataset-into-train-valid-and-test"]], "Split the dataset": [[27, "split-the-dataset"]], "Splitting": [[21, "splitting"]], "Splitting dataset into train, valid and test sets": [[5, "splitting-dataset-into-train-valid-and-test-sets"]], "Splitting the dataset into training and validation sets": [[28, "splitting-the-dataset-into-training-and-validation-sets"]], "Testing if your installation is working": [[145, "testing-if-your-installation-is-working"]], "This example covers:": [[3, "this-example-covers"], [4, "this-example-covers"], [5, "this-example-covers"], [12, "this-example-covers"], [21, "this-example-covers"], [26, "this-example-covers"], [27, "this-example-covers"], [28, "this-example-covers"], [29, "this-example-covers"], [30, "this-example-covers"], [32, "this-example-covers"]], "Training": [[0, "training"], [2, "training"], [5, "training"], [8, "training"], [9, "training"], [10, "training"], [11, "training"], [27, "training"], [30, "training"]], "Training a Braindecode model in PyTorch": [[32, "training-a-braindecode-model-in-pytorch"]], "Training a model with data augmentation": [[3, "training-a-model-with-data-augmentation"], [4, "training-a-model-with-data-augmentation"]], "Training your model (scikit-learn compatible)": [[26, "training-your-model-scikit-learn-compatible"]], "Using the learned representation for sleep staging": [[5, "using-the-learned-representation-for-sleep-staging"]], "Utils": [[0, "utils"]], "Version 0.5.1 (2021-07-14)": [[147, "version-0-5-1-2021-07-14"]], "Version 0.6 (2021-12-06)": [[147, "version-0-6-2021-12-06"]], "Visualization": [[0, "visualization"]], "Visualizing the results": [[5, "visualizing-the-results"]], "What\u2019s new": [[147, "what-s-new"]], "Why do you need to tune the neural networks model?": [[30, null]], "Why should I care about model evaluation?": [[29, "why-should-i-care-about-model-evaluation"], [32, "why-should-i-care-about-model-evaluation"]], "Window preprocessing": [[9, "window-preprocessing"], [10, "window-preprocessing"]], "braindecode.augmentation.AugmentedDataLoader": [[36, "braindecode-augmentation-augmenteddataloader"]], "braindecode.augmentation.BandstopFilter": [[37, "braindecode-augmentation-bandstopfilter"]], "braindecode.augmentation.ChannelsDropout": [[38, "braindecode-augmentation-channelsdropout"]], "braindecode.augmentation.ChannelsShuffle": [[39, "braindecode-augmentation-channelsshuffle"]], "braindecode.augmentation.ChannelsSymmetry": [[40, "braindecode-augmentation-channelssymmetry"]], "braindecode.augmentation.Compose": [[41, "braindecode-augmentation-compose"]], "braindecode.augmentation.FTSurrogate": [[42, "braindecode-augmentation-ftsurrogate"]], "braindecode.augmentation.FrequencyShift": [[43, "braindecode-augmentation-frequencyshift"]], "braindecode.augmentation.GaussianNoise": [[44, "braindecode-augmentation-gaussiannoise"]], "braindecode.augmentation.IdentityTransform": [[45, "braindecode-augmentation-identitytransform"]], "braindecode.augmentation.Mixup": [[46, "braindecode-augmentation-mixup"]], "braindecode.augmentation.SensorsRotation": [[47, "braindecode-augmentation-sensorsrotation"]], "braindecode.augmentation.SensorsXRotation": [[48, "braindecode-augmentation-sensorsxrotation"]], "braindecode.augmentation.SensorsYRotation": [[49, "braindecode-augmentation-sensorsyrotation"]], "braindecode.augmentation.SensorsZRotation": [[50, "braindecode-augmentation-sensorszrotation"]], "braindecode.augmentation.SignFlip": [[51, "braindecode-augmentation-signflip"]], "braindecode.augmentation.SmoothTimeMask": [[52, "braindecode-augmentation-smoothtimemask"]], "braindecode.augmentation.TimeReverse": [[53, "braindecode-augmentation-timereverse"]], "braindecode.augmentation.Transform": [[54, "braindecode-augmentation-transform"]], "braindecode.augmentation.functional.bandstop_filter": [[55, "braindecode-augmentation-functional-bandstop-filter"]], "braindecode.augmentation.functional.channels_dropout": [[56, "braindecode-augmentation-functional-channels-dropout"]], "braindecode.augmentation.functional.channels_permute": [[57, "braindecode-augmentation-functional-channels-permute"]], "braindecode.augmentation.functional.channels_shuffle": [[58, "braindecode-augmentation-functional-channels-shuffle"]], "braindecode.augmentation.functional.frequency_shift": [[59, "braindecode-augmentation-functional-frequency-shift"]], "braindecode.augmentation.functional.ft_surrogate": [[60, "braindecode-augmentation-functional-ft-surrogate"]], "braindecode.augmentation.functional.gaussian_noise": [[61, "braindecode-augmentation-functional-gaussian-noise"]], "braindecode.augmentation.functional.identity": [[62, "braindecode-augmentation-functional-identity"]], "braindecode.augmentation.functional.mixup": [[63, "braindecode-augmentation-functional-mixup"]], "braindecode.augmentation.functional.sensors_rotation": [[64, "braindecode-augmentation-functional-sensors-rotation"]], "braindecode.augmentation.functional.sign_flip": [[65, "braindecode-augmentation-functional-sign-flip"]], "braindecode.augmentation.functional.smooth_time_mask": [[66, "braindecode-augmentation-functional-smooth-time-mask"]], "braindecode.augmentation.functional.time_reverse": [[67, "braindecode-augmentation-functional-time-reverse"]], "braindecode.classifier.EEGClassifier": [[68, "braindecode-classifier-eegclassifier"]], "braindecode.datasets.BCICompetitionIVDataset4": [[69, "braindecode-datasets-bcicompetitionivdataset4"]], "braindecode.datasets.BNCI2014001": [[70, "braindecode-datasets-bnci2014001"]], "braindecode.datasets.BaseConcatDataset": [[71, "braindecode-datasets-baseconcatdataset"]], "braindecode.datasets.BaseDataset": [[72, "braindecode-datasets-basedataset"]], "braindecode.datasets.HGD": [[73, "braindecode-datasets-hgd"]], "braindecode.datasets.MOABBDataset": [[74, "braindecode-datasets-moabbdataset"]], "braindecode.datasets.NMT": [[75, "braindecode-datasets-nmt"]], "braindecode.datasets.SleepPhysionet": [[76, "braindecode-datasets-sleepphysionet"]], "braindecode.datasets.TUH": [[77, "braindecode-datasets-tuh"]], "braindecode.datasets.TUHAbnormal": [[78, "braindecode-datasets-tuhabnormal"]], "braindecode.datasets.WindowsDataset": [[79, "braindecode-datasets-windowsdataset"]], "braindecode.datasets.create_from_X_y": [[80, "braindecode-datasets-create-from-x-y"]], "braindecode.datasets.create_from_mne_epochs": [[81, "braindecode-datasets-create-from-mne-epochs"]], "braindecode.datasets.create_from_mne_raw": [[82, "braindecode-datasets-create-from-mne-raw"]], "braindecode.datautil.load_concat_dataset": [[83, "braindecode-datautil-load-concat-dataset"]], "braindecode.datautil.save_concat_dataset": [[84, "braindecode-datautil-save-concat-dataset"]], "braindecode.models.ATCNet": [[85, "braindecode-models-atcnet"]], "braindecode.models.AttentionBaseNet": [[86, "braindecode-models-attentionbasenet"]], "braindecode.models.BIOT": [[87, "braindecode-models-biot"]], "braindecode.models.Deep4Net": [[88, "braindecode-models-deep4net"]], "braindecode.models.DeepSleepNet": [[89, "braindecode-models-deepsleepnet"]], "braindecode.models.EEGConformer": [[90, "braindecode-models-eegconformer"]], "braindecode.models.EEGITNet": [[91, "braindecode-models-eegitnet"]], "braindecode.models.EEGInception": [[92, "braindecode-models-eeginception"]], "braindecode.models.EEGInceptionERP": [[93, "braindecode-models-eeginceptionerp"]], "braindecode.models.EEGInceptionMI": [[94, "braindecode-models-eeginceptionmi"]], "braindecode.models.EEGModuleMixin": [[95, "braindecode-models-eegmodulemixin"]], "braindecode.models.EEGNetv1": [[96, "braindecode-models-eegnetv1"]], "braindecode.models.EEGNetv4": [[97, "braindecode-models-eegnetv4"]], "braindecode.models.EEGResNet": [[98, "braindecode-models-eegresnet"]], "braindecode.models.EEGSimpleConv": [[99, "braindecode-models-eegsimpleconv"]], "braindecode.models.HybridNet": [[100, "braindecode-models-hybridnet"]], "braindecode.models.Labram": [[101, "braindecode-models-labram"]], "braindecode.models.ShallowFBCSPNet": [[102, "braindecode-models-shallowfbcspnet"]], "braindecode.models.SleepStagerBlanco2020": [[103, "braindecode-models-sleepstagerblanco2020"]], "braindecode.models.SleepStagerChambon2018": [[104, "braindecode-models-sleepstagerchambon2018"]], "braindecode.models.SleepStagerEldele2021": [[105, "braindecode-models-sleepstagereldele2021"]], "braindecode.models.TCN": [[106, "braindecode-models-tcn"]], "braindecode.models.TIDNet": [[107, "braindecode-models-tidnet"]], "braindecode.models.TimeDistributed": [[108, "braindecode-models-timedistributed"]], "braindecode.models.USleep": [[109, "braindecode-models-usleep"]], "braindecode.models.get_output_shape": [[110, "braindecode-models-get-output-shape"]], "braindecode.preprocessing.Crop": [[111, "braindecode-preprocessing-crop"]], "braindecode.preprocessing.DropChannels": [[112, "braindecode-preprocessing-dropchannels"]], "braindecode.preprocessing.Filter": [[113, "braindecode-preprocessing-filter"]], "braindecode.preprocessing.Pick": [[114, "braindecode-preprocessing-pick"]], "braindecode.preprocessing.Preprocessor": [[115, "braindecode-preprocessing-preprocessor"]], "braindecode.preprocessing.Resample": [[116, "braindecode-preprocessing-resample"]], "braindecode.preprocessing.SetEEGReference": [[117, "braindecode-preprocessing-seteegreference"]], "braindecode.preprocessing.create_fixed_length_windows": [[118, "braindecode-preprocessing-create-fixed-length-windows"]], "braindecode.preprocessing.create_windows_from_events": [[119, "braindecode-preprocessing-create-windows-from-events"]], "braindecode.preprocessing.create_windows_from_target_channels": [[120, "braindecode-preprocessing-create-windows-from-target-channels"]], "braindecode.preprocessing.exponential_moving_demean": [[121, "braindecode-preprocessing-exponential-moving-demean"]], "braindecode.preprocessing.exponential_moving_standardize": [[122, "braindecode-preprocessing-exponential-moving-standardize"]], "braindecode.preprocessing.filterbank": [[123, "braindecode-preprocessing-filterbank"]], "braindecode.preprocessing.preprocess": [[124, "braindecode-preprocessing-preprocess"]], "braindecode.regressor.EEGRegressor": [[125, "braindecode-regressor-eegregressor"]], "braindecode.samplers.BalancedSequenceSampler": [[126, "braindecode-samplers-balancedsequencesampler"]], "braindecode.samplers.RecordingSampler": [[127, "braindecode-samplers-recordingsampler"]], "braindecode.samplers.RelativePositioningSampler": [[128, "braindecode-samplers-relativepositioningsampler"]], "braindecode.samplers.SequenceSampler": [[129, "braindecode-samplers-sequencesampler"]], "braindecode.training.CroppedLoss": [[130, "braindecode-training-croppedloss"]], "braindecode.training.CroppedTimeSeriesEpochScoring": [[131, "braindecode-training-croppedtimeseriesepochscoring"]], "braindecode.training.CroppedTrialEpochScoring": [[132, "braindecode-training-croppedtrialepochscoring"]], "braindecode.training.PostEpochTrainScoring": [[133, "braindecode-training-postepochtrainscoring"]], "braindecode.training.TimeSeriesLoss": [[134, "braindecode-training-timeseriesloss"]], "braindecode.training.mixup_criterion": [[135, "braindecode-training-mixup-criterion"]], "braindecode.training.predict_trials": [[136, "braindecode-training-predict-trials"]], "braindecode.training.trial_preds_from_window_preds": [[137, "braindecode-training-trial-preds-from-window-preds"]], "braindecode.util.set_random_seeds": [[138, "braindecode-util-set-random-seeds"]], "braindecode.visualization.compute_amplitude_gradients": [[139, "braindecode-visualization-compute-amplitude-gradients"]], "braindecode.visualization.plot_confusion_matrix": [[140, "braindecode-visualization-plot-confusion-matrix"]]}, "docnames": ["api", "auto_examples/advanced_training/index", "auto_examples/advanced_training/plot_bcic_iv_4_ecog_cropped", "auto_examples/advanced_training/plot_data_augmentation", "auto_examples/advanced_training/plot_data_augmentation_search", "auto_examples/advanced_training/plot_relative_positioning", "auto_examples/advanced_training/sg_execution_times", "auto_examples/applied_examples/index", "auto_examples/applied_examples/plot_bcic_iv_4_ecog_trial", "auto_examples/applied_examples/plot_sleep_staging_chambon2018", "auto_examples/applied_examples/plot_sleep_staging_eldele2021", "auto_examples/applied_examples/plot_sleep_staging_usleep", "auto_examples/applied_examples/plot_tuh_eeg_corpus", "auto_examples/applied_examples/sg_execution_times", "auto_examples/datasets_io/benchmark_lazy_eager_loading", "auto_examples/datasets_io/index", "auto_examples/datasets_io/plot_benchmark_preprocessing", "auto_examples/datasets_io/plot_custom_dataset_example", "auto_examples/datasets_io/plot_load_save_datasets", "auto_examples/datasets_io/plot_mne_dataset_example", "auto_examples/datasets_io/plot_moabb_dataset_example", "auto_examples/datasets_io/plot_split_dataset", "auto_examples/datasets_io/plot_tuh_discrete_multitarget", "auto_examples/datasets_io/sg_execution_times", "auto_examples/index", "auto_examples/model_building/index", "auto_examples/model_building/plot_basic_training_epochs", "auto_examples/model_building/plot_bcic_iv_2a_moabb_cropped", "auto_examples/model_building/plot_bcic_iv_2a_moabb_trial", "auto_examples/model_building/plot_how_train_test_and_tune", "auto_examples/model_building/plot_hyperparameter_tuning_with_scikit-learn", "auto_examples/model_building/plot_regression", "auto_examples/model_building/plot_train_in_pure_pytorch_and_pytorch_lightning", "auto_examples/model_building/sg_execution_times", "auto_examples/sg_execution_times", "cite", "generated/braindecode.augmentation.AugmentedDataLoader", "generated/braindecode.augmentation.BandstopFilter", "generated/braindecode.augmentation.ChannelsDropout", "generated/braindecode.augmentation.ChannelsShuffle", "generated/braindecode.augmentation.ChannelsSymmetry", "generated/braindecode.augmentation.Compose", "generated/braindecode.augmentation.FTSurrogate", "generated/braindecode.augmentation.FrequencyShift", "generated/braindecode.augmentation.GaussianNoise", "generated/braindecode.augmentation.IdentityTransform", "generated/braindecode.augmentation.Mixup", "generated/braindecode.augmentation.SensorsRotation", "generated/braindecode.augmentation.SensorsXRotation", "generated/braindecode.augmentation.SensorsYRotation", "generated/braindecode.augmentation.SensorsZRotation", "generated/braindecode.augmentation.SignFlip", "generated/braindecode.augmentation.SmoothTimeMask", "generated/braindecode.augmentation.TimeReverse", "generated/braindecode.augmentation.Transform", "generated/braindecode.augmentation.functional.bandstop_filter", "generated/braindecode.augmentation.functional.channels_dropout", "generated/braindecode.augmentation.functional.channels_permute", "generated/braindecode.augmentation.functional.channels_shuffle", "generated/braindecode.augmentation.functional.frequency_shift", "generated/braindecode.augmentation.functional.ft_surrogate", "generated/braindecode.augmentation.functional.gaussian_noise", "generated/braindecode.augmentation.functional.identity", "generated/braindecode.augmentation.functional.mixup", "generated/braindecode.augmentation.functional.sensors_rotation", "generated/braindecode.augmentation.functional.sign_flip", "generated/braindecode.augmentation.functional.smooth_time_mask", "generated/braindecode.augmentation.functional.time_reverse", "generated/braindecode.classifier.EEGClassifier", "generated/braindecode.datasets.BCICompetitionIVDataset4", "generated/braindecode.datasets.BNCI2014001", "generated/braindecode.datasets.BaseConcatDataset", "generated/braindecode.datasets.BaseDataset", "generated/braindecode.datasets.HGD", "generated/braindecode.datasets.MOABBDataset", "generated/braindecode.datasets.NMT", "generated/braindecode.datasets.SleepPhysionet", "generated/braindecode.datasets.TUH", "generated/braindecode.datasets.TUHAbnormal", "generated/braindecode.datasets.WindowsDataset", "generated/braindecode.datasets.create_from_X_y", "generated/braindecode.datasets.create_from_mne_epochs", "generated/braindecode.datasets.create_from_mne_raw", "generated/braindecode.datautil.load_concat_dataset", "generated/braindecode.datautil.save_concat_dataset", "generated/braindecode.models.ATCNet", "generated/braindecode.models.AttentionBaseNet", "generated/braindecode.models.BIOT", "generated/braindecode.models.Deep4Net", "generated/braindecode.models.DeepSleepNet", "generated/braindecode.models.EEGConformer", "generated/braindecode.models.EEGITNet", "generated/braindecode.models.EEGInception", "generated/braindecode.models.EEGInceptionERP", "generated/braindecode.models.EEGInceptionMI", "generated/braindecode.models.EEGModuleMixin", "generated/braindecode.models.EEGNetv1", "generated/braindecode.models.EEGNetv4", "generated/braindecode.models.EEGResNet", "generated/braindecode.models.EEGSimpleConv", "generated/braindecode.models.HybridNet", "generated/braindecode.models.Labram", "generated/braindecode.models.ShallowFBCSPNet", "generated/braindecode.models.SleepStagerBlanco2020", "generated/braindecode.models.SleepStagerChambon2018", "generated/braindecode.models.SleepStagerEldele2021", "generated/braindecode.models.TCN", "generated/braindecode.models.TIDNet", "generated/braindecode.models.TimeDistributed", "generated/braindecode.models.USleep", "generated/braindecode.models.get_output_shape", "generated/braindecode.preprocessing.Crop", "generated/braindecode.preprocessing.DropChannels", "generated/braindecode.preprocessing.Filter", "generated/braindecode.preprocessing.Pick", "generated/braindecode.preprocessing.Preprocessor", "generated/braindecode.preprocessing.Resample", "generated/braindecode.preprocessing.SetEEGReference", "generated/braindecode.preprocessing.create_fixed_length_windows", "generated/braindecode.preprocessing.create_windows_from_events", "generated/braindecode.preprocessing.create_windows_from_target_channels", "generated/braindecode.preprocessing.exponential_moving_demean", "generated/braindecode.preprocessing.exponential_moving_standardize", "generated/braindecode.preprocessing.filterbank", "generated/braindecode.preprocessing.preprocess", "generated/braindecode.regressor.EEGRegressor", "generated/braindecode.samplers.BalancedSequenceSampler", "generated/braindecode.samplers.RecordingSampler", "generated/braindecode.samplers.RelativePositioningSampler", "generated/braindecode.samplers.SequenceSampler", "generated/braindecode.training.CroppedLoss", "generated/braindecode.training.CroppedTimeSeriesEpochScoring", "generated/braindecode.training.CroppedTrialEpochScoring", "generated/braindecode.training.PostEpochTrainScoring", "generated/braindecode.training.TimeSeriesLoss", "generated/braindecode.training.mixup_criterion", "generated/braindecode.training.predict_trials", "generated/braindecode.training.trial_preds_from_window_preds", "generated/braindecode.util.set_random_seeds", "generated/braindecode.visualization.compute_amplitude_gradients", "generated/braindecode.visualization.plot_confusion_matrix", "help", "index", "install/install", "install/install_pip", "install/install_source", "sg_execution_times", "whats_new"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["api.rst", "auto_examples/advanced_training/index.rst", "auto_examples/advanced_training/plot_bcic_iv_4_ecog_cropped.rst", "auto_examples/advanced_training/plot_data_augmentation.rst", "auto_examples/advanced_training/plot_data_augmentation_search.rst", "auto_examples/advanced_training/plot_relative_positioning.rst", "auto_examples/advanced_training/sg_execution_times.rst", "auto_examples/applied_examples/index.rst", "auto_examples/applied_examples/plot_bcic_iv_4_ecog_trial.rst", "auto_examples/applied_examples/plot_sleep_staging_chambon2018.rst", "auto_examples/applied_examples/plot_sleep_staging_eldele2021.rst", "auto_examples/applied_examples/plot_sleep_staging_usleep.rst", "auto_examples/applied_examples/plot_tuh_eeg_corpus.rst", "auto_examples/applied_examples/sg_execution_times.rst", "auto_examples/datasets_io/benchmark_lazy_eager_loading.rst", "auto_examples/datasets_io/index.rst", "auto_examples/datasets_io/plot_benchmark_preprocessing.rst", "auto_examples/datasets_io/plot_custom_dataset_example.rst", "auto_examples/datasets_io/plot_load_save_datasets.rst", "auto_examples/datasets_io/plot_mne_dataset_example.rst", "auto_examples/datasets_io/plot_moabb_dataset_example.rst", "auto_examples/datasets_io/plot_split_dataset.rst", "auto_examples/datasets_io/plot_tuh_discrete_multitarget.rst", "auto_examples/datasets_io/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/model_building/index.rst", "auto_examples/model_building/plot_basic_training_epochs.rst", "auto_examples/model_building/plot_bcic_iv_2a_moabb_cropped.rst", "auto_examples/model_building/plot_bcic_iv_2a_moabb_trial.rst", "auto_examples/model_building/plot_how_train_test_and_tune.rst", "auto_examples/model_building/plot_hyperparameter_tuning_with_scikit-learn.rst", "auto_examples/model_building/plot_regression.rst", "auto_examples/model_building/plot_train_in_pure_pytorch_and_pytorch_lightning.rst", "auto_examples/model_building/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "cite.rst", "generated/braindecode.augmentation.AugmentedDataLoader.rst", "generated/braindecode.augmentation.BandstopFilter.rst", "generated/braindecode.augmentation.ChannelsDropout.rst", "generated/braindecode.augmentation.ChannelsShuffle.rst", "generated/braindecode.augmentation.ChannelsSymmetry.rst", "generated/braindecode.augmentation.Compose.rst", "generated/braindecode.augmentation.FTSurrogate.rst", "generated/braindecode.augmentation.FrequencyShift.rst", "generated/braindecode.augmentation.GaussianNoise.rst", "generated/braindecode.augmentation.IdentityTransform.rst", "generated/braindecode.augmentation.Mixup.rst", "generated/braindecode.augmentation.SensorsRotation.rst", "generated/braindecode.augmentation.SensorsXRotation.rst", "generated/braindecode.augmentation.SensorsYRotation.rst", "generated/braindecode.augmentation.SensorsZRotation.rst", "generated/braindecode.augmentation.SignFlip.rst", "generated/braindecode.augmentation.SmoothTimeMask.rst", "generated/braindecode.augmentation.TimeReverse.rst", "generated/braindecode.augmentation.Transform.rst", "generated/braindecode.augmentation.functional.bandstop_filter.rst", "generated/braindecode.augmentation.functional.channels_dropout.rst", "generated/braindecode.augmentation.functional.channels_permute.rst", "generated/braindecode.augmentation.functional.channels_shuffle.rst", "generated/braindecode.augmentation.functional.frequency_shift.rst", "generated/braindecode.augmentation.functional.ft_surrogate.rst", "generated/braindecode.augmentation.functional.gaussian_noise.rst", "generated/braindecode.augmentation.functional.identity.rst", "generated/braindecode.augmentation.functional.mixup.rst", "generated/braindecode.augmentation.functional.sensors_rotation.rst", "generated/braindecode.augmentation.functional.sign_flip.rst", "generated/braindecode.augmentation.functional.smooth_time_mask.rst", "generated/braindecode.augmentation.functional.time_reverse.rst", "generated/braindecode.classifier.EEGClassifier.rst", "generated/braindecode.datasets.BCICompetitionIVDataset4.rst", "generated/braindecode.datasets.BNCI2014001.rst", "generated/braindecode.datasets.BaseConcatDataset.rst", "generated/braindecode.datasets.BaseDataset.rst", "generated/braindecode.datasets.HGD.rst", "generated/braindecode.datasets.MOABBDataset.rst", "generated/braindecode.datasets.NMT.rst", "generated/braindecode.datasets.SleepPhysionet.rst", "generated/braindecode.datasets.TUH.rst", "generated/braindecode.datasets.TUHAbnormal.rst", "generated/braindecode.datasets.WindowsDataset.rst", "generated/braindecode.datasets.create_from_X_y.rst", "generated/braindecode.datasets.create_from_mne_epochs.rst", "generated/braindecode.datasets.create_from_mne_raw.rst", "generated/braindecode.datautil.load_concat_dataset.rst", "generated/braindecode.datautil.save_concat_dataset.rst", "generated/braindecode.models.ATCNet.rst", "generated/braindecode.models.AttentionBaseNet.rst", "generated/braindecode.models.BIOT.rst", "generated/braindecode.models.Deep4Net.rst", "generated/braindecode.models.DeepSleepNet.rst", "generated/braindecode.models.EEGConformer.rst", "generated/braindecode.models.EEGITNet.rst", "generated/braindecode.models.EEGInception.rst", "generated/braindecode.models.EEGInceptionERP.rst", "generated/braindecode.models.EEGInceptionMI.rst", "generated/braindecode.models.EEGModuleMixin.rst", "generated/braindecode.models.EEGNetv1.rst", "generated/braindecode.models.EEGNetv4.rst", "generated/braindecode.models.EEGResNet.rst", "generated/braindecode.models.EEGSimpleConv.rst", "generated/braindecode.models.HybridNet.rst", "generated/braindecode.models.Labram.rst", "generated/braindecode.models.ShallowFBCSPNet.rst", "generated/braindecode.models.SleepStagerBlanco2020.rst", "generated/braindecode.models.SleepStagerChambon2018.rst", "generated/braindecode.models.SleepStagerEldele2021.rst", "generated/braindecode.models.TCN.rst", "generated/braindecode.models.TIDNet.rst", "generated/braindecode.models.TimeDistributed.rst", "generated/braindecode.models.USleep.rst", "generated/braindecode.models.get_output_shape.rst", "generated/braindecode.preprocessing.Crop.rst", "generated/braindecode.preprocessing.DropChannels.rst", "generated/braindecode.preprocessing.Filter.rst", "generated/braindecode.preprocessing.Pick.rst", "generated/braindecode.preprocessing.Preprocessor.rst", "generated/braindecode.preprocessing.Resample.rst", "generated/braindecode.preprocessing.SetEEGReference.rst", "generated/braindecode.preprocessing.create_fixed_length_windows.rst", "generated/braindecode.preprocessing.create_windows_from_events.rst", "generated/braindecode.preprocessing.create_windows_from_target_channels.rst", "generated/braindecode.preprocessing.exponential_moving_demean.rst", "generated/braindecode.preprocessing.exponential_moving_standardize.rst", "generated/braindecode.preprocessing.filterbank.rst", "generated/braindecode.preprocessing.preprocess.rst", "generated/braindecode.regressor.EEGRegressor.rst", "generated/braindecode.samplers.BalancedSequenceSampler.rst", "generated/braindecode.samplers.RecordingSampler.rst", "generated/braindecode.samplers.RelativePositioningSampler.rst", "generated/braindecode.samplers.SequenceSampler.rst", "generated/braindecode.training.CroppedLoss.rst", "generated/braindecode.training.CroppedTimeSeriesEpochScoring.rst", "generated/braindecode.training.CroppedTrialEpochScoring.rst", "generated/braindecode.training.PostEpochTrainScoring.rst", "generated/braindecode.training.TimeSeriesLoss.rst", "generated/braindecode.training.mixup_criterion.rst", "generated/braindecode.training.predict_trials.rst", "generated/braindecode.training.trial_preds_from_window_preds.rst", "generated/braindecode.util.set_random_seeds.rst", "generated/braindecode.visualization.compute_amplitude_gradients.rst", "generated/braindecode.visualization.plot_confusion_matrix.rst", "help.rst", "index.rst", "install/install.rst", "install/install_pip.rst", "install/install_source.rst", "sg_execution_times.rst", "whats_new.rst"], "indexentries": {"_criteria (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier._criteria", false]], "_criteria (braindecode.regressor.eegregressor attribute)": [[125, "braindecode.regressor.EEGRegressor._criteria", false]], "_modules (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier._modules", false]], "_modules (braindecode.regressor.eegregressor attribute)": [[125, "braindecode.regressor.EEGRegressor._modules", false]], "_optimizers (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier._optimizers", false]], "_optimizers (braindecode.regressor.eegregressor attribute)": [[125, "braindecode.regressor.EEGRegressor._optimizers", false]], "apply() (braindecode.preprocessing.preprocessor method)": [[115, "braindecode.preprocessing.Preprocessor.apply", false]], "atcnet (class in braindecode.models)": [[85, "braindecode.models.ATCNet", false]], "attentionbasenet (class in braindecode.models)": [[86, "braindecode.models.AttentionBaseNet", false]], "augmenteddataloader (class in braindecode.augmentation)": [[36, "braindecode.augmentation.AugmentedDataLoader", false]], "balancedsequencesampler (class in braindecode.samplers)": [[126, "braindecode.samplers.BalancedSequenceSampler", false]], "bandstop_filter() (in module braindecode.augmentation.functional)": [[55, "braindecode.augmentation.functional.bandstop_filter", false]], "bandstopfilter (class in braindecode.augmentation)": [[37, "braindecode.augmentation.BandstopFilter", false]], "baseconcatdataset (class in braindecode.datasets)": [[71, "braindecode.datasets.BaseConcatDataset", false]], "basedataset (class in braindecode.datasets)": [[72, "braindecode.datasets.BaseDataset", false]], "bcicompetitionivdataset4 (class in braindecode.datasets)": [[69, "braindecode.datasets.BCICompetitionIVDataset4", false]], "biot (class in braindecode.models)": [[87, "braindecode.models.BIOT", false]], "bnci2014001 (class in braindecode.datasets)": [[70, "braindecode.datasets.BNCI2014001", false]], "braindecode": [[0, "module-braindecode", false]], "callbacks_ (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier.callbacks_", false]], "callbacks_ (braindecode.regressor.eegregressor attribute)": [[125, "braindecode.regressor.EEGRegressor.callbacks_", false]], "channels_dropout() (in module braindecode.augmentation.functional)": [[56, "braindecode.augmentation.functional.channels_dropout", false]], "channels_permute() (in module braindecode.augmentation.functional)": [[57, "braindecode.augmentation.functional.channels_permute", false]], "channels_shuffle() (in module braindecode.augmentation.functional)": [[58, "braindecode.augmentation.functional.channels_shuffle", false]], "channelsdropout (class in braindecode.augmentation)": [[38, "braindecode.augmentation.ChannelsDropout", false]], "channelsshuffle (class in braindecode.augmentation)": [[39, "braindecode.augmentation.ChannelsShuffle", false]], "channelssymmetry (class in braindecode.augmentation)": [[40, "braindecode.augmentation.ChannelsSymmetry", false]], "classes_ (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier.classes_", false]], "compose (class in braindecode.augmentation)": [[41, "braindecode.augmentation.Compose", false]], "compute_amplitude_gradients() (in module braindecode.visualization)": [[139, "braindecode.visualization.compute_amplitude_gradients", false]], "create_fixed_length_windows() (in module braindecode.preprocessing)": [[118, "braindecode.preprocessing.create_fixed_length_windows", false]], "create_from_mne_epochs() (in module braindecode.datasets)": [[81, "braindecode.datasets.create_from_mne_epochs", false]], "create_from_mne_raw() (in module braindecode.datasets)": [[82, "braindecode.datasets.create_from_mne_raw", false]], "create_from_x_y() (in module braindecode.datasets)": [[80, "braindecode.datasets.create_from_X_y", false]], "create_windows_from_events() (in module braindecode.preprocessing)": [[119, "braindecode.preprocessing.create_windows_from_events", false]], "create_windows_from_target_channels() (in module braindecode.preprocessing)": [[120, "braindecode.preprocessing.create_windows_from_target_channels", false]], "criterion_ (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier.criterion_", false]], "criterion_ (braindecode.regressor.eegregressor attribute)": [[125, "braindecode.regressor.EEGRegressor.criterion_", false]], "crop (class in braindecode.preprocessing)": [[111, "braindecode.preprocessing.Crop", false]], "croppedloss (class in braindecode.training)": [[130, "braindecode.training.CroppedLoss", false]], "croppedtimeseriesepochscoring (class in braindecode.training)": [[131, "braindecode.training.CroppedTimeSeriesEpochScoring", false]], "croppedtrialepochscoring (class in braindecode.training)": [[132, "braindecode.training.CroppedTrialEpochScoring", false]], "cuda_dependent_attributes_ (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier.cuda_dependent_attributes_", false]], "cuda_dependent_attributes_ (braindecode.regressor.eegregressor attribute)": [[125, "braindecode.regressor.EEGRegressor.cuda_dependent_attributes_", false]], "deep4net (class in braindecode.models)": [[88, "braindecode.models.Deep4Net", false]], "deepsleepnet (class in braindecode.models)": [[89, "braindecode.models.DeepSleepNet", false]], "download() (braindecode.datasets.bcicompetitionivdataset4 static method)": [[69, "braindecode.datasets.BCICompetitionIVDataset4.download", false]], "dropchannels (class in braindecode.preprocessing)": [[112, "braindecode.preprocessing.DropChannels", false]], "eegclassifier (class in braindecode.classifier)": [[68, "braindecode.classifier.EEGClassifier", false]], "eegconformer (class in braindecode.models)": [[90, "braindecode.models.EEGConformer", false]], "eeginception (class in braindecode.models)": [[92, "braindecode.models.EEGInception", false]], "eeginceptionerp (class in braindecode.models)": [[93, "braindecode.models.EEGInceptionERP", false]], "eeginceptionmi (class in braindecode.models)": [[94, "braindecode.models.EEGInceptionMI", false]], "eegitnet (class in braindecode.models)": [[91, "braindecode.models.EEGITNet", false]], "eegmodulemixin (class in braindecode.models)": [[95, "braindecode.models.EEGModuleMixin", false]], "eegnetv1 (class in braindecode.models)": [[96, "braindecode.models.EEGNetv1", false]], "eegnetv4 (class in braindecode.models)": [[97, "braindecode.models.EEGNetv4", false]], "eegregressor (class in braindecode.regressor)": [[125, "braindecode.regressor.EEGRegressor", false]], "eegresnet (class in braindecode.models)": [[98, "braindecode.models.EEGResNet", false]], "eegsimpleconv (class in braindecode.models)": [[99, "braindecode.models.EEGSimpleConv", false]], "exponential_moving_demean() (in module braindecode.preprocessing)": [[121, "braindecode.preprocessing.exponential_moving_demean", false]], "exponential_moving_standardize() (in module braindecode.preprocessing)": [[122, "braindecode.preprocessing.exponential_moving_standardize", false]], "file_ids (braindecode.samplers.sequencesampler attribute)": [[129, "braindecode.samplers.SequenceSampler.file_ids", false]], "filter (class in braindecode.preprocessing)": [[113, "braindecode.preprocessing.Filter", false]], "filterbank() (in module braindecode.preprocessing)": [[123, "braindecode.preprocessing.filterbank", false]], "fit() (braindecode.regressor.eegregressor method)": [[125, "braindecode.regressor.EEGRegressor.fit", false]], "fix_init_weight_and_init_embedding() (braindecode.models.labram method)": [[101, "braindecode.models.Labram.fix_init_weight_and_init_embedding", false]], "forward() (braindecode.augmentation.compose method)": [[41, "braindecode.augmentation.Compose.forward", false]], "forward() (braindecode.augmentation.transform method)": [[54, "braindecode.augmentation.Transform.forward", false]], "forward() (braindecode.models.atcnet method)": [[85, "braindecode.models.ATCNet.forward", false]], "forward() (braindecode.models.attentionbasenet method)": [[86, "braindecode.models.AttentionBaseNet.forward", false]], "forward() (braindecode.models.biot method)": [[87, "braindecode.models.BIOT.forward", false]], "forward() (braindecode.models.deepsleepnet method)": [[89, "braindecode.models.DeepSleepNet.forward", false]], "forward() (braindecode.models.eegconformer method)": [[90, "braindecode.models.EEGConformer.forward", false]], "forward() (braindecode.models.eeginceptionmi method)": [[94, "braindecode.models.EEGInceptionMI.forward", false]], "forward() (braindecode.models.eegsimpleconv method)": [[99, "braindecode.models.EEGSimpleConv.forward", false]], "forward() (braindecode.models.hybridnet method)": [[100, "braindecode.models.HybridNet.forward", false]], "forward() (braindecode.models.labram method)": [[101, "braindecode.models.Labram.forward", false]], "forward() (braindecode.models.sleepstagerblanco2020 method)": [[103, "braindecode.models.SleepStagerBlanco2020.forward", false]], "forward() (braindecode.models.sleepstagerchambon2018 method)": [[104, "braindecode.models.SleepStagerChambon2018.forward", false]], "forward() (braindecode.models.sleepstagereldele2021 method)": [[105, "braindecode.models.SleepStagerEldele2021.forward", false]], "forward() (braindecode.models.tcn method)": [[106, "braindecode.models.TCN.forward", false]], "forward() (braindecode.models.tidnet method)": [[107, "braindecode.models.TIDNet.forward", false]], "forward() (braindecode.models.timedistributed method)": [[108, "braindecode.models.TimeDistributed.forward", false]], "forward() (braindecode.models.usleep method)": [[109, "braindecode.models.USleep.forward", false]], "forward() (braindecode.training.croppedloss method)": [[130, "braindecode.training.CroppedLoss.forward", false]], "forward() (braindecode.training.timeseriesloss method)": [[134, "braindecode.training.TimeSeriesLoss.forward", false]], "forward_features() (braindecode.models.labram method)": [[101, "braindecode.models.Labram.forward_features", false]], "frequency_shift() (in module braindecode.augmentation.functional)": [[59, "braindecode.augmentation.functional.frequency_shift", false]], "frequencyshift (class in braindecode.augmentation)": [[43, "braindecode.augmentation.FrequencyShift", false]], "ft_surrogate() (in module braindecode.augmentation.functional)": [[60, "braindecode.augmentation.functional.ft_surrogate", false]], "ftsurrogate (class in braindecode.augmentation)": [[42, "braindecode.augmentation.FTSurrogate", false]], "gaussian_noise() (in module braindecode.augmentation.functional)": [[61, "braindecode.augmentation.functional.gaussian_noise", false]], "gaussiannoise (class in braindecode.augmentation)": [[44, "braindecode.augmentation.GaussianNoise", false]], "get_augmentation_params() (braindecode.augmentation.bandstopfilter method)": [[37, "braindecode.augmentation.BandstopFilter.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.channelsdropout method)": [[38, "braindecode.augmentation.ChannelsDropout.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.channelsshuffle method)": [[39, "braindecode.augmentation.ChannelsShuffle.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.channelssymmetry method)": [[40, "braindecode.augmentation.ChannelsSymmetry.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.frequencyshift method)": [[43, "braindecode.augmentation.FrequencyShift.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.ftsurrogate method)": [[42, "braindecode.augmentation.FTSurrogate.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.gaussiannoise method)": [[44, "braindecode.augmentation.GaussianNoise.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.mixup method)": [[46, "braindecode.augmentation.Mixup.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.sensorsrotation method)": [[47, "braindecode.augmentation.SensorsRotation.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.smoothtimemask method)": [[52, "braindecode.augmentation.SmoothTimeMask.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.transform method)": [[54, "braindecode.augmentation.Transform.get_augmentation_params", false]], "get_classifier() (braindecode.models.labram method)": [[101, "braindecode.models.Labram.get_classifier", false]], "get_fc_size() (braindecode.models.eegconformer method)": [[90, "braindecode.models.EEGConformer.get_fc_size", false]], "get_iterator() (braindecode.classifier.eegclassifier method)": [[68, "braindecode.classifier.EEGClassifier.get_iterator", false]], "get_iterator() (braindecode.regressor.eegregressor method)": [[125, "braindecode.regressor.EEGRegressor.get_iterator", false]], "get_loss() (braindecode.classifier.eegclassifier method)": [[68, "braindecode.classifier.EEGClassifier.get_loss", false]], "get_metadata() (braindecode.datasets.baseconcatdataset method)": [[71, "braindecode.datasets.BaseConcatDataset.get_metadata", false]], "get_num_layers() (braindecode.models.labram method)": [[101, "braindecode.models.Labram.get_num_layers", false]], "get_output_shape() (braindecode.models.eegmodulemixin method)": [[95, "braindecode.models.EEGModuleMixin.get_output_shape", false]], "get_output_shape() (in module braindecode.models)": [[110, "braindecode.models.get_output_shape", false]], "get_torchinfo_statistics() (braindecode.models.eegmodulemixin method)": [[95, "braindecode.models.EEGModuleMixin.get_torchinfo_statistics", false]], "hgd (class in braindecode.datasets)": [[73, "braindecode.datasets.HGD", false]], "hybridnet (class in braindecode.models)": [[100, "braindecode.models.HybridNet", false]], "identity() (in module braindecode.augmentation.functional)": [[62, "braindecode.augmentation.functional.identity", false]], "identitytransform (class in braindecode.augmentation)": [[45, "braindecode.augmentation.IdentityTransform", false]], "info (braindecode.samplers.recordingsampler attribute)": [[127, "braindecode.samplers.RecordingSampler.info", false]], "info (braindecode.samplers.sequencesampler attribute)": [[129, "braindecode.samplers.SequenceSampler.info", false]], "initialized_ (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier.initialized_", false]], "initialized_ (braindecode.regressor.eegregressor attribute)": [[125, "braindecode.regressor.EEGRegressor.initialized_", false]], "labram (class in braindecode.models)": [[101, "braindecode.models.Labram", false]], "load_concat_dataset() (in module braindecode.datautil)": [[83, "braindecode.datautil.load_concat_dataset", false]], "load_state_dict() (braindecode.models.eegmodulemixin method)": [[95, "braindecode.models.EEGModuleMixin.load_state_dict", false]], "mixup (class in braindecode.augmentation)": [[46, "braindecode.augmentation.Mixup", false]], "mixup() (in module braindecode.augmentation.functional)": [[63, "braindecode.augmentation.functional.mixup", false]], "mixup_criterion() (in module braindecode.training)": [[135, "braindecode.training.mixup_criterion", false]], "moabbdataset (class in braindecode.datasets)": [[74, "braindecode.datasets.MOABBDataset", false]], "module": [[0, "module-braindecode", false]], "module_ (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier.module_", false]], "module_ (braindecode.regressor.eegregressor attribute)": [[125, "braindecode.regressor.EEGRegressor.module_", false]], "n_recordings (braindecode.samplers.recordingsampler attribute)": [[127, "braindecode.samplers.RecordingSampler.n_recordings", false]], "nmt (class in braindecode.datasets)": [[75, "braindecode.datasets.NMT", false]], "on_batch_end() (braindecode.training.croppedtrialepochscoring method)": [[132, "braindecode.training.CroppedTrialEpochScoring.on_batch_end", false]], "on_epoch_end() (braindecode.training.croppedtimeseriesepochscoring method)": [[131, "braindecode.training.CroppedTimeSeriesEpochScoring.on_epoch_end", false]], "on_epoch_end() (braindecode.training.croppedtrialepochscoring method)": [[132, "braindecode.training.CroppedTrialEpochScoring.on_epoch_end", false]], "on_epoch_end() (braindecode.training.postepochtrainscoring method)": [[133, "braindecode.training.PostEpochTrainScoring.on_epoch_end", false]], "operation() (braindecode.augmentation.bandstopfilter static method)": [[37, "braindecode.augmentation.BandstopFilter.operation", false]], "operation() (braindecode.augmentation.channelsdropout static method)": [[38, "braindecode.augmentation.ChannelsDropout.operation", false]], "operation() (braindecode.augmentation.channelsshuffle static method)": [[39, "braindecode.augmentation.ChannelsShuffle.operation", false]], "operation() (braindecode.augmentation.channelssymmetry static method)": [[40, "braindecode.augmentation.ChannelsSymmetry.operation", false]], "operation() (braindecode.augmentation.frequencyshift static method)": [[43, "braindecode.augmentation.FrequencyShift.operation", false]], "operation() (braindecode.augmentation.ftsurrogate static method)": [[42, "braindecode.augmentation.FTSurrogate.operation", false]], "operation() (braindecode.augmentation.gaussiannoise static method)": [[44, "braindecode.augmentation.GaussianNoise.operation", false]], "operation() (braindecode.augmentation.identitytransform static method)": [[45, "braindecode.augmentation.IdentityTransform.operation", false]], "operation() (braindecode.augmentation.mixup static method)": [[46, "braindecode.augmentation.Mixup.operation", false]], "operation() (braindecode.augmentation.sensorsrotation static method)": [[47, "braindecode.augmentation.SensorsRotation.operation", false]], "operation() (braindecode.augmentation.signflip static method)": [[51, "braindecode.augmentation.SignFlip.operation", false]], "operation() (braindecode.augmentation.smoothtimemask static method)": [[52, "braindecode.augmentation.SmoothTimeMask.operation", false]], "operation() (braindecode.augmentation.timereverse static method)": [[53, "braindecode.augmentation.TimeReverse.operation", false]], "pick (class in braindecode.preprocessing)": [[114, "braindecode.preprocessing.Pick", false]], "plot_confusion_matrix() (in module braindecode.visualization)": [[140, "braindecode.visualization.plot_confusion_matrix", false]], "postepochtrainscoring (class in braindecode.training)": [[133, "braindecode.training.PostEpochTrainScoring", false]], "predict() (braindecode.classifier.eegclassifier method)": [[68, "braindecode.classifier.EEGClassifier.predict", false]], "predict_proba() (braindecode.classifier.eegclassifier method)": [[68, "braindecode.classifier.EEGClassifier.predict_proba", false]], "predict_proba() (braindecode.regressor.eegregressor method)": [[125, "braindecode.regressor.EEGRegressor.predict_proba", false]], "predict_trials() (braindecode.classifier.eegclassifier method)": [[68, "braindecode.classifier.EEGClassifier.predict_trials", false]], "predict_trials() (braindecode.regressor.eegregressor method)": [[125, "braindecode.regressor.EEGRegressor.predict_trials", false]], "predict_trials() (in module braindecode.training)": [[136, "braindecode.training.predict_trials", false]], "prefixes_ (braindecode.classifier.eegclassifier attribute)": [[68, "braindecode.classifier.EEGClassifier.prefixes_", false]], "prefixes_ (braindecode.regressor.eegregressor attribute)": [[125, "braindecode.regressor.EEGRegressor.prefixes_", false]], "preprocess() (in module braindecode.preprocessing)": [[124, "braindecode.preprocessing.preprocess", false]], "preprocessor (class in braindecode.preprocessing)": [[115, "braindecode.preprocessing.Preprocessor", false]], "presample() (braindecode.samplers.relativepositioningsampler method)": [[128, "braindecode.samplers.RelativePositioningSampler.presample", false]], "recordingsampler (class in braindecode.samplers)": [[127, "braindecode.samplers.RecordingSampler", false]], "relativepositioningsampler (class in braindecode.samplers)": [[128, "braindecode.samplers.RelativePositioningSampler", false]], "resample (class in braindecode.preprocessing)": [[116, "braindecode.preprocessing.Resample", false]], "reset_classifier() (braindecode.models.labram method)": [[101, "braindecode.models.Labram.reset_classifier", false]], "sample_class() (braindecode.samplers.balancedsequencesampler method)": [[126, "braindecode.samplers.BalancedSequenceSampler.sample_class", false]], "sample_recording() (braindecode.samplers.recordingsampler method)": [[127, "braindecode.samplers.RecordingSampler.sample_recording", false]], "sample_window() (braindecode.samplers.recordingsampler method)": [[127, "braindecode.samplers.RecordingSampler.sample_window", false]], "save() (braindecode.datasets.baseconcatdataset method)": [[71, "braindecode.datasets.BaseConcatDataset.save", false]], "save_concat_dataset() (in module braindecode.datautil)": [[84, "braindecode.datautil.save_concat_dataset", false]], "sensors_rotation() (in module braindecode.augmentation.functional)": [[64, "braindecode.augmentation.functional.sensors_rotation", false]], "sensorsrotation (class in braindecode.augmentation)": [[47, "braindecode.augmentation.SensorsRotation", false]], "sensorsxrotation (class in braindecode.augmentation)": [[48, "braindecode.augmentation.SensorsXRotation", false]], "sensorsyrotation (class in braindecode.augmentation)": [[49, "braindecode.augmentation.SensorsYRotation", false]], "sensorszrotation (class in braindecode.augmentation)": [[50, "braindecode.augmentation.SensorsZRotation", false]], "sequencesampler (class in braindecode.samplers)": [[129, "braindecode.samplers.SequenceSampler", false]], "set_description() (braindecode.datasets.baseconcatdataset method)": [[71, "braindecode.datasets.BaseConcatDataset.set_description", false]], "set_description() (braindecode.datasets.basedataset method)": [[72, "braindecode.datasets.BaseDataset.set_description", false]], "set_description() (braindecode.datasets.windowsdataset method)": [[79, "braindecode.datasets.WindowsDataset.set_description", false]], "set_random_seeds() (in module braindecode.util)": [[138, "braindecode.util.set_random_seeds", false]], "seteegreference (class in braindecode.preprocessing)": [[117, "braindecode.preprocessing.SetEEGReference", false]], "shallowfbcspnet (class in braindecode.models)": [[102, "braindecode.models.ShallowFBCSPNet", false]], "sign_flip() (in module braindecode.augmentation.functional)": [[65, "braindecode.augmentation.functional.sign_flip", false]], "signflip (class in braindecode.augmentation)": [[51, "braindecode.augmentation.SignFlip", false]], "sleepphysionet (class in braindecode.datasets)": [[76, "braindecode.datasets.SleepPhysionet", false]], "sleepstagerblanco2020 (class in braindecode.models)": [[103, "braindecode.models.SleepStagerBlanco2020", false]], "sleepstagerchambon2018 (class in braindecode.models)": [[104, "braindecode.models.SleepStagerChambon2018", false]], "sleepstagereldele2021 (class in braindecode.models)": [[105, "braindecode.models.SleepStagerEldele2021", false]], "smooth_time_mask() (in module braindecode.augmentation.functional)": [[66, "braindecode.augmentation.functional.smooth_time_mask", false]], "smoothtimemask (class in braindecode.augmentation)": [[52, "braindecode.augmentation.SmoothTimeMask", false]], "split() (braindecode.datasets.baseconcatdataset method)": [[71, "braindecode.datasets.BaseConcatDataset.split", false]], "tcn (class in braindecode.models)": [[106, "braindecode.models.TCN", false]], "tidnet (class in braindecode.models)": [[107, "braindecode.models.TIDNet", false]], "time_reverse() (in module braindecode.augmentation.functional)": [[67, "braindecode.augmentation.functional.time_reverse", false]], "timedistributed (class in braindecode.models)": [[108, "braindecode.models.TimeDistributed", false]], "timereverse (class in braindecode.augmentation)": [[53, "braindecode.augmentation.TimeReverse", false]], "timeseriesloss (class in braindecode.training)": [[134, "braindecode.training.TimeSeriesLoss", false]], "to_dense_prediction_model() (braindecode.models.eegmodulemixin method)": [[95, "braindecode.models.EEGModuleMixin.to_dense_prediction_model", false]], "transform (class in braindecode.augmentation)": [[54, "braindecode.augmentation.Transform", false]], "trial_preds_from_window_preds() (in module braindecode.training)": [[137, "braindecode.training.trial_preds_from_window_preds", false]], "tuh (class in braindecode.datasets)": [[77, "braindecode.datasets.TUH", false]], "tuhabnormal (class in braindecode.datasets)": [[78, "braindecode.datasets.TUHAbnormal", false]], "usleep (class in braindecode.models)": [[109, "braindecode.models.USleep", false]], "windowsdataset (class in braindecode.datasets)": [[79, "braindecode.datasets.WindowsDataset", false]]}, "objects": {"": [[0, 0, 0, "-", "braindecode"]], "braindecode.augmentation": [[36, 1, 1, "", "AugmentedDataLoader"], [37, 1, 1, "", "BandstopFilter"], [38, 1, 1, "", "ChannelsDropout"], [39, 1, 1, "", "ChannelsShuffle"], [40, 1, 1, "", "ChannelsSymmetry"], [41, 1, 1, "", "Compose"], [42, 1, 1, "", "FTSurrogate"], [43, 1, 1, "", "FrequencyShift"], [44, 1, 1, "", "GaussianNoise"], [45, 1, 1, "", "IdentityTransform"], [46, 1, 1, "", "Mixup"], [47, 1, 1, "", "SensorsRotation"], [48, 1, 1, "", "SensorsXRotation"], [49, 1, 1, "", "SensorsYRotation"], [50, 1, 1, "", "SensorsZRotation"], [51, 1, 1, "", "SignFlip"], [52, 1, 1, "", "SmoothTimeMask"], [53, 1, 1, "", "TimeReverse"], [54, 1, 1, "", "Transform"]], "braindecode.augmentation.BandstopFilter": [[37, 2, 1, "", "get_augmentation_params"], [37, 2, 1, "", "operation"]], "braindecode.augmentation.ChannelsDropout": [[38, 2, 1, "", "get_augmentation_params"], [38, 2, 1, "", "operation"]], "braindecode.augmentation.ChannelsShuffle": [[39, 2, 1, "", "get_augmentation_params"], [39, 2, 1, "", "operation"]], "braindecode.augmentation.ChannelsSymmetry": [[40, 2, 1, "", "get_augmentation_params"], [40, 2, 1, "", "operation"]], "braindecode.augmentation.Compose": [[41, 2, 1, "", "forward"]], "braindecode.augmentation.FTSurrogate": [[42, 2, 1, "", "get_augmentation_params"], [42, 2, 1, "", "operation"]], "braindecode.augmentation.FrequencyShift": [[43, 2, 1, "", "get_augmentation_params"], [43, 2, 1, "", "operation"]], "braindecode.augmentation.GaussianNoise": [[44, 2, 1, "", "get_augmentation_params"], [44, 2, 1, "", "operation"]], "braindecode.augmentation.IdentityTransform": [[45, 2, 1, "", "operation"]], "braindecode.augmentation.Mixup": [[46, 2, 1, "", "get_augmentation_params"], [46, 2, 1, "", "operation"]], "braindecode.augmentation.SensorsRotation": [[47, 2, 1, "", "get_augmentation_params"], [47, 2, 1, "", "operation"]], "braindecode.augmentation.SignFlip": [[51, 2, 1, "", "operation"]], "braindecode.augmentation.SmoothTimeMask": [[52, 2, 1, "", "get_augmentation_params"], [52, 2, 1, "", "operation"]], "braindecode.augmentation.TimeReverse": [[53, 2, 1, "", "operation"]], "braindecode.augmentation.Transform": [[54, 2, 1, "", "forward"], [54, 2, 1, "", "get_augmentation_params"]], "braindecode.augmentation.functional": [[55, 3, 1, "", "bandstop_filter"], [56, 3, 1, "", "channels_dropout"], [57, 3, 1, "", "channels_permute"], [58, 3, 1, "", "channels_shuffle"], [59, 3, 1, "", "frequency_shift"], [60, 3, 1, "", "ft_surrogate"], [61, 3, 1, "", "gaussian_noise"], [62, 3, 1, "", "identity"], [63, 3, 1, "", "mixup"], [64, 3, 1, "", "sensors_rotation"], [65, 3, 1, "", "sign_flip"], [66, 3, 1, "", "smooth_time_mask"], [67, 3, 1, "", "time_reverse"]], "braindecode.classifier": [[68, 1, 1, "", "EEGClassifier"]], "braindecode.classifier.EEGClassifier": [[68, 4, 1, "", "_criteria"], [68, 4, 1, "", "_modules"], [68, 4, 1, "", "_optimizers"], [68, 4, 1, "", "callbacks_"], [68, 4, 1, "", "classes_"], [68, 4, 1, "", "criterion_"], [68, 4, 1, "", "cuda_dependent_attributes_"], [68, 2, 1, "", "get_iterator"], [68, 2, 1, "", "get_loss"], [68, 4, 1, "", "initialized_"], [68, 4, 1, "", "module_"], [68, 2, 1, "", "predict"], [68, 2, 1, "", "predict_proba"], [68, 2, 1, "", "predict_trials"], [68, 4, 1, "", "prefixes_"]], "braindecode.datasets": [[69, 1, 1, "", "BCICompetitionIVDataset4"], [70, 1, 1, "", "BNCI2014001"], [71, 1, 1, "", "BaseConcatDataset"], [72, 1, 1, "", "BaseDataset"], [73, 1, 1, "", "HGD"], [74, 1, 1, "", "MOABBDataset"], [75, 1, 1, "", "NMT"], [76, 1, 1, "", "SleepPhysionet"], [77, 1, 1, "", "TUH"], [78, 1, 1, "", "TUHAbnormal"], [79, 1, 1, "", "WindowsDataset"], [80, 3, 1, "", "create_from_X_y"], [81, 3, 1, "", "create_from_mne_epochs"], [82, 3, 1, "", "create_from_mne_raw"]], "braindecode.datasets.BCICompetitionIVDataset4": [[69, 2, 1, "", "download"]], "braindecode.datasets.BaseConcatDataset": [[71, 2, 1, "", "get_metadata"], [71, 2, 1, "", "save"], [71, 2, 1, "", "set_description"], [71, 2, 1, "", "split"]], "braindecode.datasets.BaseDataset": [[72, 2, 1, "", "set_description"]], "braindecode.datasets.WindowsDataset": [[79, 2, 1, "", "set_description"]], "braindecode.datautil": [[83, 3, 1, "", "load_concat_dataset"], [84, 3, 1, "", "save_concat_dataset"]], "braindecode.models": [[85, 1, 1, "", "ATCNet"], [86, 1, 1, "", "AttentionBaseNet"], [87, 1, 1, "", "BIOT"], [88, 1, 1, "", "Deep4Net"], [89, 1, 1, "", "DeepSleepNet"], [90, 1, 1, "", "EEGConformer"], [91, 1, 1, "", "EEGITNet"], [92, 1, 1, "", "EEGInception"], [93, 1, 1, "", "EEGInceptionERP"], [94, 1, 1, "", "EEGInceptionMI"], [95, 1, 1, "", "EEGModuleMixin"], [96, 1, 1, "", "EEGNetv1"], [97, 1, 1, "", "EEGNetv4"], [98, 1, 1, "", "EEGResNet"], [99, 1, 1, "", "EEGSimpleConv"], [100, 1, 1, "", "HybridNet"], [101, 1, 1, "", "Labram"], [102, 1, 1, "", "ShallowFBCSPNet"], [103, 1, 1, "", "SleepStagerBlanco2020"], [104, 1, 1, "", "SleepStagerChambon2018"], [105, 1, 1, "", "SleepStagerEldele2021"], [106, 1, 1, "", "TCN"], [107, 1, 1, "", "TIDNet"], [108, 1, 1, "", "TimeDistributed"], [109, 1, 1, "", "USleep"], [110, 3, 1, "", "get_output_shape"]], "braindecode.models.ATCNet": [[85, 2, 1, "", "forward"]], "braindecode.models.AttentionBaseNet": [[86, 2, 1, "", "forward"]], "braindecode.models.BIOT": [[87, 2, 1, "", "forward"]], "braindecode.models.DeepSleepNet": [[89, 2, 1, "", "forward"]], "braindecode.models.EEGConformer": [[90, 2, 1, "", "forward"], [90, 2, 1, "", "get_fc_size"]], "braindecode.models.EEGInceptionMI": [[94, 2, 1, "", "forward"]], "braindecode.models.EEGModuleMixin": [[95, 2, 1, "", "get_output_shape"], [95, 2, 1, "", "get_torchinfo_statistics"], [95, 2, 1, "", "load_state_dict"], [95, 2, 1, "", "to_dense_prediction_model"]], "braindecode.models.EEGSimpleConv": [[99, 2, 1, "", "forward"]], "braindecode.models.HybridNet": [[100, 2, 1, "", "forward"]], "braindecode.models.Labram": [[101, 2, 1, "", "fix_init_weight_and_init_embedding"], [101, 2, 1, "", "forward"], [101, 2, 1, "", "forward_features"], [101, 2, 1, "", "get_classifier"], [101, 2, 1, "", "get_num_layers"], [101, 2, 1, "", "reset_classifier"]], "braindecode.models.SleepStagerBlanco2020": [[103, 2, 1, "", "forward"]], "braindecode.models.SleepStagerChambon2018": [[104, 2, 1, "", "forward"]], "braindecode.models.SleepStagerEldele2021": [[105, 2, 1, "", "forward"]], "braindecode.models.TCN": [[106, 2, 1, "", "forward"]], "braindecode.models.TIDNet": [[107, 2, 1, "", "forward"]], "braindecode.models.TimeDistributed": [[108, 2, 1, "", "forward"]], "braindecode.models.USleep": [[109, 2, 1, "", "forward"]], "braindecode.preprocessing": [[111, 1, 1, "", "Crop"], [112, 1, 1, "", "DropChannels"], [113, 1, 1, "", "Filter"], [114, 1, 1, "", "Pick"], [115, 1, 1, "", "Preprocessor"], [116, 1, 1, "", "Resample"], [117, 1, 1, "", "SetEEGReference"], [118, 3, 1, "", "create_fixed_length_windows"], [119, 3, 1, "", "create_windows_from_events"], [120, 3, 1, "", "create_windows_from_target_channels"], [121, 3, 1, "", "exponential_moving_demean"], [122, 3, 1, "", "exponential_moving_standardize"], [123, 3, 1, "", "filterbank"], [124, 3, 1, "", "preprocess"]], "braindecode.preprocessing.Preprocessor": [[115, 2, 1, "", "apply"]], "braindecode.regressor": [[125, 1, 1, "", "EEGRegressor"]], "braindecode.regressor.EEGRegressor": [[125, 4, 1, "", "_criteria"], [125, 4, 1, "", "_modules"], [125, 4, 1, "", "_optimizers"], [125, 4, 1, "", "callbacks_"], [125, 4, 1, "", "criterion_"], [125, 4, 1, "", "cuda_dependent_attributes_"], [125, 2, 1, "", "fit"], [125, 2, 1, "", "get_iterator"], [125, 4, 1, "", "initialized_"], [125, 4, 1, "", "module_"], [125, 2, 1, "", "predict_proba"], [125, 2, 1, "", "predict_trials"], [125, 4, 1, "", "prefixes_"]], "braindecode.samplers": [[126, 1, 1, "", "BalancedSequenceSampler"], [127, 1, 1, "", "RecordingSampler"], [128, 1, 1, "", "RelativePositioningSampler"], [129, 1, 1, "", "SequenceSampler"]], "braindecode.samplers.BalancedSequenceSampler": [[126, 2, 1, "", "sample_class"]], "braindecode.samplers.RecordingSampler": [[127, 4, 1, "", "info"], [127, 4, 1, "", "n_recordings"], [127, 2, 1, "", "sample_recording"], [127, 2, 1, "", "sample_window"]], "braindecode.samplers.RelativePositioningSampler": [[128, 2, 1, "", "presample"]], "braindecode.samplers.SequenceSampler": [[129, 4, 1, "", "file_ids"], [129, 4, 1, "", "info"]], "braindecode.training": [[130, 1, 1, "", "CroppedLoss"], [131, 1, 1, "", "CroppedTimeSeriesEpochScoring"], [132, 1, 1, "", "CroppedTrialEpochScoring"], [133, 1, 1, "", "PostEpochTrainScoring"], [134, 1, 1, "", "TimeSeriesLoss"], [135, 3, 1, "", "mixup_criterion"], [136, 3, 1, "", "predict_trials"], [137, 3, 1, "", "trial_preds_from_window_preds"]], "braindecode.training.CroppedLoss": [[130, 2, 1, "", "forward"]], "braindecode.training.CroppedTimeSeriesEpochScoring": [[131, 2, 1, "", "on_epoch_end"]], "braindecode.training.CroppedTrialEpochScoring": [[132, 2, 1, "", "on_batch_end"], [132, 2, 1, "", "on_epoch_end"]], "braindecode.training.PostEpochTrainScoring": [[133, 2, 1, "", "on_epoch_end"]], "braindecode.training.TimeSeriesLoss": [[134, 2, 1, "", "forward"]], "braindecode.util": [[138, 3, 1, "", "set_random_seeds"]], "braindecode.visualization": [[139, 3, 1, "", "compute_amplitude_gradients"], [140, 3, 1, "", "plot_confusion_matrix"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "terms": {"": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 21, 22, 26, 27, 28, 30, 31, 32, 40, 42, 44, 47, 48, 49, 50, 57, 60, 61, 64, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 85, 93, 94, 96, 97, 101, 104, 106, 109, 112, 113, 115, 117, 125, 126, 130, 133, 134], "0": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 42, 44, 45, 46, 54, 56, 58, 60, 63, 68, 70, 71, 75, 76, 77, 78, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 124, 125, 127, 136, 140, 146], "00": [6, 10, 13, 16, 23, 26, 27, 29, 32, 33, 34, 146], "000": [5, 16, 17, 18, 19, 22, 23, 31, 34, 146], "0000": [2, 3, 8, 27, 28, 29, 30, 31], "00000000": 22, "00000058": 22, "0000625": 30, "00009932": 22, "0001": [2, 30, 98, 122], "00012331": 22, "00014928": 22, "0002": [2, 3, 28], "0004": 2, "0005": [2, 3, 22, 28, 31], "000525": 22, "0006": [2, 3, 8, 27, 28, 29], "000625": 29, "001": [3, 4, 18, 20, 21, 27, 28, 29, 30, 31, 70, 101, 121, 122], "0010": 31, "00267": 35, "0039": 31, "004": 11, "0040": 5, "00625": [29, 30], "0063": [29, 30], "0077": 26, "0078": 30, "0080": 26, "0081": 26, "0082": 26, "0087": 26, "0090": 26, "0091": 30, "0095": 2, "00m": 16, "01": [2, 3, 4, 6, 8, 16, 23, 26, 27, 28, 29, 32, 33, 68, 92, 93, 125, 146], "011": 11, "0127": 29, "01271": 106, "0159": 26, "0165": [22, 29], "0168": 22, "0173": 29, "019": [2, 8, 69, 103], "0193": 35, "0194": 16, "0195": 30, "01_tcp_ar": 22, "01it": 32, "01m": 16, "01mb": 27, "02": [11, 16, 23, 26, 27, 33, 87, 101, 146], "0208": 29, "0235": 28, "0260": 22, "0273": 22, "02736802": 22, "0280": 22, "02_tcp_le": 22, "02m": 16, "03": [6, 9, 10, 11, 16, 23, 27, 86, 101, 146], "0308": 22, "0308012": 22, "0311": 22, "0366": 29, "0370": 30, "03_tcp_ar_a": 22, "03m": 16, "03m14": 16, "04": [3, 4, 11, 16, 23, 26, 27, 28, 29, 32, 146], "0408": 22, "0412": 31, "04174": 103, "0419": 22, "04194231": 22, "0426": 22, "044": [3, 4, 28, 29, 32], "0448": 22, "045583": 32, "046014": 94, "046020": 4, "0486": 30, "04871": [37, 44, 52, 55, 61, 66], "04it": 32, "04m": 16, "05": [6, 10, 11, 12, 16, 27, 77, 78, 107], "0506": 22, "0508": 22, "0511": 29, "0537782": 22, "0538": 22, "05458383": 22, "0546": 22, "055186": 32, "056008": 107, "0593": 22, "059528": 32, "05m": 16, "06": [10, 11, 16, 27, 33, 146], "060": 11, "0625": [2, 3, 4, 8, 27, 28, 29, 32], "06366": 101, "0643": 2, "066011": [28, 29, 30], "0672": 30, "0678": [2, 8, 69], "0680": 28, "0681": 29, "06it": 32, "06m": 16, "06mb": 27, "07": [10, 13, 16, 27, 29, 146], "0703125": 109, "07159": 99, "0720": 2, "0761": 29, "0765": 30, "078": [9, 13, 146], "0795": 8, "07mb": 27, "08": [4, 13, 16, 27, 29], "080": [11, 13, 146], "08024": [96, 97], "0818": 30, "0838": 27, "0842": 30, "08675": [42, 60], "0884": 2, "0888": 9, "08m": 16, "09": [13, 16, 27], "09237": 31, "0941": 5, "09412": [46, 63, 135], "0966": 9, "0967": 9, "09702": [40, 57], "099": 22, "09m": 16, "09mb": 27, "0m": [16, 27], "0mb": 27, "0test": 29, "0train": [3, 4, 18, 20, 21, 27, 28, 29, 30, 32], "0x7f71bfd17190": 10, "0x7f71ce5945b0": 10, "0x7f71d0512860": 30, "0x7f71d054b4c0": 27, "0x7f71d09d9c00": 2, "0x7f71d38c0e20": 5, "0x7f7291491f60": 5, "0x7f72914a7070": 4, "0x7f72914dc7f0": 3, "0x7f7291522da0": 8, "0x7f72916711e0": 11, "0x7f7291f043a0": 29, "0x7f7291f1c790": 9, "0x7f7291f1cfa0": 21, "0x7f7291f1e0e0": 21, "0x7f7291f1ee60": 21, "0x7f7291fe4bb0": 21, "0x7f7291fe6380": 18, "0x7f7291fe6800": 21, "0x7f7292024370": 28, "0x7f7292b300a0": 21, "0x7f7292b304c0": 21, "0x7f7292b30af0": 21, "0x7f7292b30d90": 21, "0x7f7292b31930": 21, "0x7f7292b31a20": 21, "0x7f7292b322f0": 21, "0x7f7292b327d0": 5, "0x7f7292b32860": 21, "0x7f7292b32b90": 21, "0x7f7292b32c80": 21, "0x7f7292b33400": 21, "0x7f7292b36530": 21, "0x7f72931c0820": 21, "0x7f72931c1270": 21, "0x7f72931c1d50": 21, "0x7f72931c3a60": 31, "0x7f729f3a0520": 9, "0x7f729f48ead0": 32, "1": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 30, 31, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 63, 64, 66, 68, 69, 70, 71, 73, 75, 76, 77, 78, 83, 85, 86, 88, 92, 93, 94, 95, 98, 99, 101, 102, 103, 105, 107, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 135, 136, 137, 140, 146], "10": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 35, 40, 47, 48, 49, 50, 64, 68, 69, 77, 78, 85, 88, 90, 91, 92, 93, 98, 100, 101, 102, 103, 105, 107, 113, 117, 125, 126, 140, 146], "100": [3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 20, 26, 27, 28, 29, 30, 31, 32, 37, 52, 70, 87, 88, 99, 109, 116], "1000": [2, 3, 4, 8, 12, 22, 26, 27, 28, 29, 30, 32, 73, 92, 93, 127], "1002": [26, 27, 28, 29, 30, 35, 88, 98, 100, 102, 140], "1007": 103, "100hz": 105, "101": [5, 9, 10, 11, 12], "102": 11, "1024": 26, "1031": 11, "1038": [2, 8, 69], "105": 5, "1061": 27, "1065": 29, "107": [5, 26], "107kb": 27, "108": 11, "1085": 29, "1088": [5, 107], "109": [5, 29, 33, 146], "1097": 35, "10m": 16, "10mb": 27, "11": [2, 3, 4, 5, 8, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 27, 28, 29, 31, 32, 33, 69, 89, 146], "110": 11, "1101": [3, 4, 28, 29, 32], "1109": [10, 85, 91, 92, 93, 105], "11198": 86, "1125": [3, 4, 28, 29, 32], "1128": 29, "1145": 22, "1149": [9, 29], "115": 11, "115k": 16, "1175": 22, "11754766": 22, "1185": [5, 9, 10, 11, 22], "1194": [5, 9, 10, 11], "11m": 16, "12": [2, 4, 5, 10, 11, 13, 16, 17, 18, 19, 27, 28, 29, 30, 32, 33, 70, 99, 101, 109, 140, 146], "120": [10, 73, 105], "1209": 22, "1209397": 22, "121": [5, 12], "1215": 31, "122": 12, "1225": [2, 8, 69], "123": 22, "1231": 3, "1235": [2, 8, 69], "1239": 30, "124": [17, 19, 27], "1244": 2, "1249": 22, "12493701": 22, "125": [92, 93, 104], "1251": [8, 22], "1252": 3, "125hz": 105, "126": 11, "128": [5, 10, 11, 68, 73, 92, 93, 99, 104, 109, 125], "1281": 22, "129": [5, 11], "12mb": 27, "13": [2, 5, 9, 11, 13, 16, 17, 19, 26, 27, 32, 73, 76, 87, 113, 123, 146], "1313": 29, "1319": 22, "1322": 22, "133": [10, 11], "1350": 22, "13578887": 22, "1360": 22, "13694": [38, 39, 56, 58], "137": [16, 23, 146], "138": [19, 147], "13it": 32, "13m": 16, "13mb": 27, "14": [2, 5, 8, 9, 11, 16, 17, 19, 27, 28, 32, 73, 113, 138], "1409": 22, "1412": 31, "142": [5, 147], "1422": 22, "14345092": 22, "144": [4, 99], "1441": 29, "1443": 31, "14483": 4, "145": 32, "146": 147, "147": 147, "1471": 10, "1473": 28, "148": [11, 13, 146, 147], "14827406": 22, "1483": 22, "1486": 22, "1486133": 22, "149": 22, "14it": 32, "14m": [16, 27], "14mb": 27, "15": [2, 5, 9, 10, 11, 12, 14, 16, 26, 27, 28, 29, 30, 32, 47, 48, 49, 50, 75, 86, 90, 102, 107, 113, 116], "150": [9, 10, 11, 19, 73], "1500": [11, 107, 127], "1507": 8, "1508": 22, "1509": 10, "1510": 8, "152": [11, 147], "1535": 22, "15352039": 22, "1539": 3, "154": 11, "15447331": 22, "15447332": 22, "1545": 22, "1547": 10, "155": 147, "1558": 30, "156": 11, "1567": 3, "1572": 30, "15756383": 22, "158": 147, "159": 147, "1594": 11, "159kb": 16, "15it": 32, "16": [2, 3, 5, 6, 9, 10, 11, 16, 23, 27, 30, 85, 86, 97, 104, 113, 146], "160": [11, 73], "16017832": 22, "1602": 22, "1607": 22, "161": [11, 147], "16104": [5, 128], "1611": [96, 97], "1627": 29, "163": 11, "164": 147, "164k": 16, "166": 147, "1662": 35, "167": 147, "1677": 22, "169": 147, "16m": 16, "16mb": 27, "17": [2, 5, 11, 16, 27, 99, 107], "170": [5, 147], "1707": 11, "171": 147, "1710": [46, 63, 135], "1729": 22, "174": [8, 13, 146], "1741": 107, "175": [3, 4, 26, 27, 28, 29, 30, 32], "1768": 22, "178": 147, "1792846": 22, "1793": 22, "1795": 10, "17m": [16, 27], "17mb": 27, "18": [2, 4, 5, 11, 12, 16, 27, 29, 94], "180": 11, "1803": [40, 57, 106], "1806": [42, 60], "1807": 22, "1809": 11, "180kb": 16, "1811": 10, "1840": 2, "185": 147, "1853": 11, "185kb": 16, "1870": 2, "188": 11, "1882": 22, "1885": 10, "188kb": 16, "189": 32, "189kb": 16, "18m": 16, "18mb": 27, "19": [5, 9, 10, 11, 16, 27, 111, 117], "1901": 30, "1904": 31, "190kb": 16, "192kb": 16, "193383": 32, "194": 9, "194kb": 16, "195": 11, "1955": 10, "195kb": 16, "197": [11, 147], "19750": 16, "1975000": 16, "1977527141571045": 32, "197kb": 16, "198": 147, "199": 147, "1998": 89, "19999": [17, 19], "199kb": 16, "19it": 32, "19k": 27, "19m": 16, "19mb": 27, "1_": 85, "1d": [94, 99], "1e": [2, 3, 4, 8, 9, 10, 11, 27, 28, 29, 30, 32], "1e6": [2, 3, 4, 5, 8, 9, 10, 12, 27, 28, 29, 30, 32], "1f": [12, 32], "1hz": 37, "1m": [16, 27], "1mb": 27, "1test": [3, 4, 20, 21, 27, 28, 29, 30, 32], "2": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 31, 37, 38, 39, 42, 43, 44, 46, 52, 55, 60, 61, 63, 66, 68, 70, 73, 75, 76, 85, 88, 92, 93, 95, 96, 97, 98, 99, 103, 105, 107, 109, 113, 117, 122, 125, 126, 127, 135, 136, 146], "20": [2, 5, 9, 10, 11, 12, 16, 26, 27, 29, 31, 32, 33, 40, 47, 48, 49, 50, 64, 98, 103, 117, 146], "200": [2, 8, 10, 11, 14, 87, 88, 101], "2000": [5, 9, 10, 11, 22, 30, 127], "20000": 17, "2004": 73, "2007": [5, 37, 44, 52, 55, 61, 66, 128], "2008": [73, 89], "2010": [38, 39, 56, 58, 73], "2012": [27, 28, 29, 30], "2013": 35, "2014": [31, 70], "2016": [29, 96], "2017": [26, 27, 28, 29, 30, 31, 35, 47, 48, 49, 50, 64, 73, 88, 89, 98, 100, 102, 140], "2018": [5, 9, 10, 28, 29, 30, 40, 42, 44, 46, 57, 60, 61, 63, 97, 104, 106], "2019": [2, 8, 31, 69], "201k": 16, "201kb": 16, "202": 26, "2020": [5, 37, 38, 39, 44, 52, 55, 56, 58, 61, 66, 92, 93, 103, 107, 128], "20200220": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "2021": [4, 10, 11, 92, 93, 94, 105, 109, 126], "2022": [4, 30, 75, 85, 90, 91, 92, 93], "2023": [86, 87, 99], "2024": [86, 87, 101], "2028": 29, "202kb": 16, "2031": 22, "2036": 9, "2037": 22, "203kb": 16, "2040": 11, "204kb": 16, "2069": 30, "208kb": 16, "209k": 27, "209kb": 16, "20m": [16, 27], "21": [5, 9, 10, 11, 16, 27, 31, 117], "2102": 9, "211kb": 16, "2126": 9, "212kb": 16, "2136": 9, "2137": 22, "214": 11, "214kb": 16, "21543634": 22, "215kb": 16, "216": 11, "216kb": 16, "2171": 29, "217304": 32, "2174": 30, "217kb": 16, "2186": 10, "218kb": 16, "2196f3": 29, "219kb": 16, "21m": 16, "21mb": 27, "22": [3, 4, 5, 9, 11, 16, 17, 19, 27, 28, 29, 32], "2201": 27, "2206": 4, "2208": 101, "220kb": 16, "2217": 29, "221kb": 16, "22222222222223": [9, 10, 11], "2224": 11, "222kb": 16, "223": 147, "223kb": 16, "22477157": 22, "2247716": 22, "2248": 22, "2249": 22, "224kb": 16, "225": 11, "225kb": 16, "226kb": 16, "227": [5, 6, 146], "227kb": 16, "228": 11, "228kb": 16, "2295": 10, "229kb": 16, "22m": 16, "23": [3, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 30, 31, 32, 112], "2309": 99, "230kb": 16, "2310": 86, "231kb": [16, 27], "232164": 20, "2324": 9, "232kb": 16, "2331": 10, "233gb": 27, "233kb": 16, "2348": 30, "234k": 16, "234kb": 16, "2351": 29, "235kb": 16, "236kb": 16, "237": 11, "23730": [26, 27, 28, 29, 30, 35, 88, 98, 100, 102, 140], "2374": 22, "237kb": 16, "238": [37, 44, 52, 55, 61, 66], "238kb": 16, "239kb": 16, "23m": 16, "24": [2, 5, 8, 9, 10, 11, 12, 13, 16, 27, 32, 103, 107, 114, 146], "240": [3, 4, 17, 26, 27, 28, 29, 32], "240kb": 16, "2414": 30, "2416": 30, "241kb": 16, "242kb": 16, "2431": 28, "2435": 30, "243kb": 16, "244kb": 16, "245kb": 16, "2465": 9, "246gb": 27, "246kb": 16, "247kb": 16, "248kb": 16, "249": [12, 13, 146], "249kb": 16, "24m": [16, 27], "24mb": 27, "25": [2, 5, 8, 9, 11, 12, 14, 16, 27, 29, 30, 31, 32, 70, 85, 86, 88, 89, 90, 92, 93, 96, 97, 102, 104, 113, 146], "250": [5, 20, 27, 70, 85, 90, 94, 98], "2500": [3, 22, 27, 28, 29, 127], "2505": 31, "25070": 16, "2507000": 16, "250kb": 16, "25153176": 22, "251kb": 16, "252112": 32, "2522": [22, 30], "2526": 22, "252kb": 16, "253": [13, 37, 44, 52, 55, 61, 66], "2535": [3, 28], "2539": 27, "253kb": 16, "254": 147, "254kb": 16, "2552": 107, "2555": 3, "255kb": 16, "256": [14, 26, 87, 147], "2565": 29, "2569": [28, 29], "256hz": 26, "256kb": 16, "2570": 28, "257kb": 16, "2581": 30, "2582": 8, "25829056": 22, "2583": 22, "25878426": 22, "2588": 22, "258kb": 16, "259046": 32, "259kb": 16, "26": [4, 5, 9, 10, 11, 16, 20, 27, 104], "260": 73, "2600": 22, "2603": 31, "2609": 29, "260kb": 16, "261": 147, "261kb": 16, "262kb": 16, "263": 147, "2639": 3, "263kb": 16, "2641": 29, "264kb": 16, "2652": 29, "2657": 22, "265kb": 16, "266k": 16, "266kb": 16, "267": [19, 23, 35, 146], "267kb": 16, "268kb": 16, "269": [16, 23, 146, 147], "269kb": 16, "26m": 16, "26mb": 27, "27": [2, 4, 9, 11, 16, 27, 29, 73], "2708": 3, "270kb": 16, "2712": [2, 27], "271kb": 16, "2727": 29, "272kb": 16, "273kb": 16, "274": 147, "2742": 22, "274kb": 16, "2759": 30, "275kb": 16, "2765": 8, "2768": 9, "276kb": 16, "277": 147, "2773": 30, "277kb": 16, "2781": 10, "2783": 30, "278kb": 16, "279kb": 16, "27m": 16, "28": [9, 11, 16, 27, 29, 30, 33, 86, 92, 93, 146], "280kb": 16, "28125": 32, "281kb": 16, "282": 147, "282gb": 16, "282kb": 16, "283kb": 16, "284": [21, 23, 146], "284172": 32, "28417889": 22, "2847": 29, "284kb": 16, "285kb": 16, "286kb": 16, "287": 147, "2870": [29, 30], "2877": 29, "287kb": 16, "288": [70, 147], "28840": 16, "2884000": 16, "2885": 22, "2888": 9, "288kb": 16, "289975": 32, "289kb": 16, "28mb": 27, "29": [10, 11, 16, 27, 31, 105], "290kb": 16, "2916": 30, "2919": 22, "291kb": 16, "292": 147, "2920": 31, "292kb": 16, "293kb": 16, "294": 147, "294kb": 16, "295": 147, "2952": 9, "2957": 30, "295kb": 16, "296k": 16, "296kb": 16, "2975": 22, "297kb": 16, "298": 32, "298kb": 16, "2997": 22, "2997373": 22, "2999": 31, "299kb": 16, "29it": 32, "29m": 16, "2a": [1, 6, 20, 21, 24, 25, 26, 28, 29, 30, 32, 33, 36, 38, 41, 42, 43, 51, 52, 54, 71, 74, 85, 94, 95, 102, 115, 119, 122, 124, 130, 138, 140, 146, 147], "2d": [5, 140], "2darrai": 137, "2f": [4, 29, 30, 32], "2kb": 27, "2m": [16, 27], "2mb": 27, "2x2": 109, "2\u03c0": 4, "3": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 33, 44, 46, 47, 61, 63, 64, 68, 69, 70, 73, 76, 85, 88, 92, 93, 94, 95, 98, 103, 106, 107, 125, 126, 127, 136, 143, 146, 147], "30": [2, 5, 8, 9, 10, 11, 16, 27, 31, 76, 105, 106, 109], "3000": [11, 22, 26, 31], "300kb": 16, "30167542": 22, "301kb": 16, "302": [5, 6, 11, 146], "302kb": 16, "303": [32, 33, 146], "3036": 22, "30362263": 22, "303kb": 16, "304": [11, 147], "3047": 2, "3048106": [92, 93], "304kb": 16, "305kb": 16, "306": 11, "3076234": [10, 105], "307kb": 16, "3086": 2, "309kb": 16, "31": [4, 5, 6, 9, 10, 11, 16, 26, 27, 30, 32, 90, 146], "3103": 30, "312": 147, "3129": 31, "313": [28, 33, 146], "3130": 30, "3132": 2, "3153": 8, "3156": 10, "3161489": 91, "31628": 138, "3169": 22, "318": 147, "318kb": 16, "3197419": 85, "31it": 32, "31m": 16, "32": [4, 5, 9, 10, 11, 16, 26, 27, 29, 33, 85, 96, 107, 146], "323": 11, "324": 11, "32600": 16, "3260000": 16, "327": 147, "328k": 16, "3297": 3, "3299779": 22, "32m": [16, 27], "32mb": 27, "33": [9, 11, 16, 27], "3300": 22, "3316": 2, "333": 147, "3348": 29, "337": [31, 33, 146], "337086": 32, "337kb": 16, "338": 11, "3389": 35, "339": 30, "33m": 16, "34": [9, 11, 16, 27, 30], "3406": 22, "3407": 9, "341": 147, "343": 6, "3448": [29, 30], "3450": 9, "3459": 10, "3464": 11, "347": 147, "349": 147, "34it": 32, "34m": 16, "35": [3, 4, 11, 16, 27, 28, 29, 31, 32], "350": 5, "350593": 32, "3522": 29, "353": 147, "3549": 2, "3565": 29, "35mb": 27, "36": [3, 4, 9, 11, 16, 27, 28, 29, 32], "3600": [22, 76], "360k": 16, "361": 23, "3613": 22, "3621": 29, "363": 11, "364": [3, 4, 28, 29, 32], "3642": 30, "3648": 22, "365": 147, "3657": 30, "367": 147, "368": 11, "3689": 9, "36m": 16, "37": [9, 11, 16, 22, 26, 27], "371": 147, "3712": 8, "372": 9, "3730": 22, "373041": 22, "3739": 30, "375": 11, "376": 11, "377": 11, "378": 147, "3793": 30, "3796": 22, "37m": 16, "37mb": 27, "38": [3, 4, 11, 16, 27, 28, 29, 30, 31, 32], "3829": 22, "383": 9, "3853": 29, "386": 18, "38658058": 22, "3865806": 22, "3866": 22, "3868": 18, "3878": 22, "388": 147, "389": 147, "38m": 16, "38mb": 27, "39": [4, 6, 11, 16, 22, 27], "390": 147, "391": 147, "3910": 2, "3912": 22, "3913": [29, 30], "393k": 16, "3966": 30, "397": 147, "3971": 8, "3976": 30, "3986": 22, "399": 11, "3993": 9, "3996": 22, "39m": 16, "39mb": 27, "39th": [47, 48, 49, 50, 64], "3a6190": 29, "3d": [47, 64, 147], "3f": 30, "3h": 76, "3k": 27, "3m": [16, 27], "4": [1, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 69, 70, 71, 73, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 104, 107, 109, 110, 115, 118, 120, 122, 123, 124, 126, 127, 131, 132, 134, 138, 146], "40": [3, 4, 11, 14, 16, 26, 27, 28, 29, 31, 32, 86, 90, 102], "400": [10, 11, 147], "4000": 29, "400k": 87, "4013": 9, "402": 147, "4033": 9, "405": 11, "405kb": 27, "406": 147, "4067": 103, "4076": [9, 30], "4079": 103, "409": 147, "4098": 2, "40m": 16, "41": [5, 11, 16, 27, 33, 146], "4107": 2, "411": 147, "4122": 22, "413": 147, "4138": 30, "415": 147, "4169": 2, "417": [75, 147], "4190": 2, "41m": 16, "41mb": 27, "42": [9, 11, 16, 26, 27, 30], "4210": 2, "4236": 2, "4237": 2, "4239": 2, "4240": 30, "4261": 30, "426k": 16, "428": [11, 147], "429": 147, "4293": 30, "42it": 32, "42m": 16, "42mb": 27, "43": [5, 10, 11, 16, 26, 27], "4306": 28, "431": 147, "432k": 27, "4398": 22, "43it": 32, "43m": 16, "43mb": 27, "44": [11, 16, 27, 30, 73], "4401": 30, "4409": 2, "441": 32, "4418": 22, "4429": 22, "4429058": 22, "443": 147, "4433": 22, "4436": 2, "446": 147, "4463": 28, "4483": 30, "44m": 16, "44mb": 27, "45": [4, 5, 11, 16, 27, 29, 32], "450": [16, 33, 146], "451": [30, 147], "4517": 9, "4518": 10, "452": 11, "4520": 28, "4522": 30, "4535": 22, "453x": 35, "454": 147, "4564": 22, "459187": 32, "459k": 16, "45it": 32, "45m": 16, "45mb": 27, "46": [5, 11, 16, 26], "460": 147, "4604": 22, "461": 147, "463": [30, 33, 146], "4632": 27, "465": 147, "466": 147, "4660": 22, "4664": 22, "467": 147, "468": 147, "469": [4, 5, 6, 146], "46it": 32, "46m": 16, "46mb": 27, "47": [3, 4, 5, 9, 10, 11, 16, 27, 28, 29, 32, 33, 146], "470": 147, "471": [47, 48, 49, 50, 64], "472": 147, "4721": 29, "473": 147, "474": [47, 48, 49, 50, 64], "4750": 2, "4760": 10, "4788": 9, "479": 147, "47m": 16, "48": [5, 10, 11, 16, 18, 20, 21, 27, 28, 29, 30, 32, 70, 94], "482": 11, "4828": 30, "485": 147, "487": 147, "488": 147, "4880": 5, "489": 147, "489191": 32, "48m": 16, "49": [5, 6, 11, 16, 27, 33, 146], "490": [5, 147], "491": 147, "4922": 5, "4928": 11, "4929": 10, "494": 147, "495": 147, "4957": 30, "497": 147, "498": 146, "499": [20, 23, 146], "4996": 31, "49m": [16, 27], "4d": 147, "4f": 5, "4m": [16, 27], "4mb": [16, 27], "4th": 113, "5": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 68, 70, 85, 86, 88, 89, 90, 92, 93, 94, 99, 101, 102, 103, 104, 105, 106, 109, 125, 146], "50": [3, 4, 5, 9, 10, 11, 14, 16, 19, 27, 28, 29, 32, 70, 88, 99], "500": [17, 19, 28, 127, 147], "5000": 30, "500hz": 73, "502": [28, 33, 146], "5022": 9, "5027": 9, "503": 147, "5030": 5, "5033": 22, "504": 147, "50407195": 22, "5041": 22, "505": [3, 6, 146, 147], "5060": 9, "5083": 8, "508k": 16, "50m": [16, 27], "50mb": 27, "51": [11, 16, 27], "512": [5, 11], "5120": 5, "513": 147, "514": 147, "5146": 9, "515": [11, 147], "5163": 9, "5164": 5, "5167": 9, "5169721": 22, "517": 147, "5170": 22, "5172": [9, 22], "5181": 30, "5187": 9, "5196": 9, "51m": 16, "51mb": 27, "52": [11, 16, 26, 27], "520": [11, 147], "5201": 22, "5210943": 22, "5211": [5, 22], "5215": 5, "522": 11, "523": 147, "5234": 5, "52350": 16, "5235000": 16, "524": 147, "5245": 5, "5261": 30, "5263": 30, "5264": 30, "5267": 30, "5269": 9, "5270": 30, "5271": 30, "5272": [5, 30], "5275": 30, "528": 147, "5283": 30, "5285": 30, "529": 147, "5294": 9, "52it": 32, "52m": 16, "53": [16, 22], "5301": 30, "5303": 30, "5304": 30, "5307": 5, "5329": 31, "5333": 5, "5347": 3, "535": 147, "536": 11, "5378": 2, "538": 147, "5388": 3, "539": 147, "5391": [5, 27, 28, 29, 30, 31], "53910": 16, "5391000": 16, "5394": 30, "5395": 22, "53mb": 27, "54": [16, 27], "5400": 5, "541": [33, 147], "541k": 16, "5420": [27, 28, 29, 30, 31], "5430": 11, "5434": 30, "546": 147, "5469": 28, "5472": 5, "5473": 30, "5481": 30, "5484": 30, "5486": 30, "5495": 30, "5498": 30, "5499": 5, "54it": 32, "54m": [16, 27], "54mb": 27, "55": [5, 11, 16, 27, 28, 29, 30], "5500": 5, "5500m": 113, "5502": 30, "5503989": 22, "5504": 22, "551": 147, "5510": 22, "553": 147, "5558": 30, "556": 147, "5563": 30, "5567": 9, "5570": 8, "55m": 16, "55mb": 27, "56": [9, 11, 16, 27], "560": [32, 33, 146], "5606": 30, "5608": 5, "561": 147, "5612": 5, "5619": 22, "562": 5, "5638": 2, "5641": 5, "565": 11, "5670986": 22, "5671": [9, 22], "5676": 5, "56835277": 22, "5686": 22, "5686462": 22, "569": 147, "56it": 32, "56m": [16, 27], "57": [5, 14, 16, 23, 26, 146], "570": 147, "5712": 5, "572": 147, "573": 147, "5730": 5, "5735": 2, "573k": 16, "5744": 3, "5746": 5, "5752": 29, "5755": 9, "5765": 5, "5768": 9, "5772": 5, "578": 147, "5786": 9, "5787": 5, "579": 147, "5790": 5, "5797": 5, "57m": 16, "57mb": 27, "58": [5, 11, 16, 27], "5807": 11, "581": 147, "582": 147, "5842": 30, "5862": 30, "5866": 11, "5876": 9, "58m": [16, 27], "59": [16, 27], "590": 147, "590727": 32, "591": 147, "5918": 9, "592": 147, "5920": 5, "5927": 9, "593": 147, "5936": 5, "5938": 5, "594": 147, "5950": 5, "5953": 22, "599": 147, "5990": 5, "59it": 32, "59m": 16, "59mb": 27, "5e": 5, "5m": [16, 27, 87], "5mb": 27, "6": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 70, 73, 90, 113, 146], "60": [2, 3, 4, 5, 8, 9, 10, 12, 16, 19, 27, 28, 29, 30, 32], "6001": [28, 29], "6011": 5, "6026": 11, "602779": 32, "604": 11, "6052": 30, "606k": 16, "608116": 32, "6089": 22, "6094": 5, "60m": 16, "61": [5, 9, 16, 26, 27], "6117": 5, "6120": 5, "6129": 11, "6139": 8, "614": [18, 23, 146], "6155": 30, "6170": 5, "6172": 5, "6177": 5, "6179": 9, "6181": 2, "61m": 16, "62": [5, 14, 16, 26, 27], "620": 11, "6213": 5, "6227": 5, "6229": 22, "6235": 9, "6238": 5, "6240": 5, "6246": 22, "625": 75, "6250": 5, "6251": 9, "6259": 5, "6263": 5, "6267": 22, "6272": 5, "6279": 22, "6281": 5, "6282": 22, "62m": [16, 27], "62mb": 27, "63": 16, "6309": 5, "6320": 5, "6322": 9, "6323": 5, "6328": 5, "6337": 9, "635": 11, "6350": 26, "6372": 9, "6373": 30, "639k": 16, "63it": 32, "63m": 16, "64": [2, 3, 4, 8, 10, 11, 14, 16, 17, 19, 27, 28, 29, 32, 85, 97, 99, 104], "6406": [5, 30], "640x480": [27, 28], "641": 11, "6422": 5, "642491": 32, "6440": 5, "645": 11, "6458": 3, "6460": 30, "6480": 5, "64m": 16, "65": [11, 16, 27], "650": [4, 6, 146], "6509": 22, "6515615": 22, "6516": 22, "6533": 22, "6562": 5, "65902848": 22, "65it": 32, "65m": 16, "65mb": 27, "66": [5, 16, 27], "660": [6, 11, 146], "661": 2, "6641": 5, "6652": 22, "66521484": 22, "667": [3, 6, 146], "6671": 22, "6676": 9, "6680": 5, "6685": 22, "66m": 16, "66mb": 27, "67": [16, 109], "6719": 5, "6724": 28, "672k": 16, "6733": 3, "6751": 5, "6754": 30, "6760": 5, "6787": 2, "6790": 9, "67m": 16, "67mb": 27, "68": [5, 16, 27], "6800": 5, "68056549": 22, "682": [22, 23, 146], "683e00": 29, "6840": 5, "6860": 9, "6875": 5, "6877": 9, "6880": 5, "6890": 22, "68it": 32, "68m": 16, "68mb": 27, "69": [3, 4, 5, 16, 28, 29, 32], "6920": 5, "6926": 30, "6960": 5, "6966": 30, "6978": 22, "698": 11, "6980": 31, "69it": 32, "69m": 16, "6f": 32, "6kb": 27, "6m": [16, 27], "6mb": 27, "7": [2, 3, 4, 5, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 35, 73, 85, 94, 95, 103, 146], "70": [5, 16, 27, 99], "70052629": 22, "7013": 5, "7020": 30, "7031": 5, "70380673": 22, "7040": 5, "7048": 30, "705k": 16, "7075": 22, "7076": 9, "7080": 5, "70m": 16, "71": [5, 16], "710": 90, "7109": 5, "7120": 5, "7131": 30, "713765": 32, "7149": 5, "7154": 9, "7160": 5, "717662": 32, "719": 90, "71it": 32, "72": [11, 16, 27, 30, 109, 126], "7200": [5, 10], "7216": 22, "7225": 11, "725": [2, 6, 146], "726": 11, "727": 11, "7273": 11, "7276": 22, "7280": 5, "72it": 32, "72m": 16, "72mb": 27, "73": [16, 27], "7324": 2, "7337": 8, "7360": 5, "737k": 16, "739kb": 27, "73m": [16, 27], "74": [5, 16, 27], "7400": 5, "7402": 2, "7404": 22, "7422": 5, "7429778": 22, "7430": 22, "7443": 22, "7443461": 22, "7449": 9, "74m": [16, 27], "75": [3, 4, 5, 9, 14, 16, 26, 27, 28, 29, 32, 86, 90, 102, 107], "750": 11, "7539": 2, "755817": 75, "7578": 5, "758": [5, 9, 10, 104], "75it": 32, "75m": 16, "76": 16, "7607": 3, "7621": 30, "7638324": 22, "7656": 5, "7658": 30, "7664": 22, "7666": 22, "7673": 22, "769": [5, 9, 10, 104], "76m": 16, "77": [5, 11, 16, 27], "770k": 16, "771": [16, 18], "7734": 5, "7754": 22, "7768": 2, "776k": 27, "7799": 2, "77m": 16, "78": [16, 76], "781": [27, 33, 146], "782": [16, 18], "785": 31, "786": 11, "78m": 16, "79": [5, 16, 27], "7925": 30, "7970": 2, "7986": 8, "7m": [16, 27], "7mb": 27, "8": [2, 3, 4, 5, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33, 85, 86, 87, 90, 92, 93, 96, 97, 99, 101, 104, 123, 143, 146], "80": [3, 4, 5, 10, 11, 16, 19, 26, 27, 28, 29, 32, 73, 99, 105], "800": [12, 18], "8000": 22, "8008": 30, "8024": 22, "8036": 22, "804": 27, "808160": 32, "809": [10, 105], "8097": 22, "80m": [16, 27], "81": [5, 16, 19, 27], "8104": 30, "812099": 32, "812453": 32, "8144": 29, "8148": [9, 29], "816": 9, "8160": 29, "8162": 29, "8174": 22, "818": [10, 105], "819803": 32, "819k": 16, "81m": 16, "81mb": 27, "82": [16, 27, 29, 44, 61], "8206": 22, "8218": 22, "8219": 29, "8228": 2, "8240": 29, "8278": 29, "8291": 30, "82m": 16, "83": [11, 16, 22, 27, 32], "8358": 5, "836": [33, 146], "837": 27, "8374": 29, "8388": 29, "83m": 16, "83mb": 27, "84": [11, 16, 27], "840": 26, "8419": 22, "8434": 29, "844": 26, "84it": 32, "84m": [16, 27], "85": [16, 27, 28], "8516": 22, "852k": 16, "8543": 29, "8585": 22, "8599": 30, "85m": 16, "86": [5, 11, 16, 27], "86039335": 22, "8604": 22, "8617": 29, "863": 11, "86m": [16, 27], "87": [2, 5, 16, 31], "8733": 30, "8742": 5, "876": 11, "8773": 5, "878": [17, 23, 146], "8796": 5, "87m": 16, "88": [5, 16, 27], "880": 73, "8800": 5, "8805": 5, "8806": 5, "8809": 5, "8815": 10, "882": 26, "8820": 5, "8826": 5, "8836": 5, "8838": 5, "8854": 5, "885k": 16, "8866": 5, "8879": 5, "8896": 5, "8897": 5, "889k": 27, "88it": 32, "88m": 16, "89": [10, 16, 27], "8904": 9, "8906": 5, "8915": 5, "8924": 5, "8938": 30, "8943": 22, "896": [8, 13, 146], "898": 11, "8988": 5, "8k": [16, 27], "8m": [16, 27], "8mb": 27, "9": [2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 70, 73, 75, 86, 87, 92, 94, 99, 101, 109, 117, 146], "90": [5, 16, 27, 29, 140], "9016": 5, "9021": 5, "9024": 29, "9037": 2, "9038": 5, "9042": 30, "9064": 31, "9077": 30, "90k": 16, "90m": 16, "90mb": 27, "91": [11, 16], "9100": 30, "912": 11, "9132": 22, "9143": 31, "918k": 16, "91m": 16, "91mb": 27, "92": [16, 27], "9203": 2, "9228": 29, "924": 26, "9266": 22, "9292": 22, "92922518": 22, "9292252": 22, "92m": 16, "93": [11, 16, 27, 44, 61], "9301": 29, "9311": 5, "9341": 27, "9353": 22, "935963004": 101, "9371": 31, "939559": 22, "9396": 22, "93m": 16, "93mb": 27, "94": [11, 16], "9406": 22, "9481": 22, "948479": 32, "9486": 29, "949": [10, 13, 146], "94m": 27, "95": [12, 16, 27, 68, 125], "950k": 16, "9596": 2, "95it": 32, "95m": [16, 27], "96": [16, 27], "960": 11, "9601": 31, "963": 73, "96330007": 22, "9662": 9, "9685": 31, "96m": 16, "96mb": 27, "97": 16, "9711": 22, "976": [26, 27], "9771": 29, "97m": 16, "97mb": 27, "98": [16, 27], "980": [26, 33, 146], "9811": 28, "9825": 22, "9833": 29, "983k": 16, "9883": 22, "98m": 16, "99": 16, "990": 31, "9931": 10, "9938": 30, "994": [17, 19], "9942": 22, "9948": 28, "99609": 26, "9968": 10, "9991178": 90, "99m": 16, "9k": 16, "9m": [16, 27], "9mb": 27, "A": [2, 3, 4, 5, 8, 9, 10, 16, 27, 28, 29, 30, 31, 34, 36, 38, 39, 42, 54, 56, 58, 60, 68, 69, 71, 74, 75, 77, 78, 86, 89, 92, 93, 94, 96, 97, 99, 103, 104, 107, 113, 117, 118, 119, 124, 125, 128, 136, 140, 147], "AND": 92, "And": [26, 27], "As": [5, 16, 26, 27, 29, 68, 125], "At": [27, 70], "BE": 92, "But": [29, 32], "By": [29, 30, 31, 46, 68, 125], "For": [2, 4, 5, 8, 14, 26, 27, 28, 29, 32, 68, 109, 113, 117, 125, 127, 133, 135, 138, 142, 143, 144, 145], "IN": 92, "If": [2, 8, 14, 18, 19, 22, 26, 29, 30, 32, 35, 37, 46, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 128, 129, 133, 134, 135, 136, 141, 145], "In": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 20, 21, 26, 27, 28, 29, 30, 32, 37, 44, 46, 47, 48, 49, 50, 52, 55, 61, 63, 64, 66, 68, 70, 87, 113, 114, 117, 125, 138], "It": [2, 3, 4, 8, 9, 10, 11, 18, 27, 28, 29, 30, 32, 42, 60, 68, 71, 79, 82, 87, 105, 119, 125, 142], "NO": 5, "No": [11, 19, 26, 29, 32, 70], "Not": [19, 26], "OF": 92, "On": [4, 27, 30, 31, 72, 79], "One": [29, 30, 70, 92, 93], "THE": 92, "The": [2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 18, 20, 21, 26, 27, 29, 30, 31, 32, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 59, 68, 70, 72, 73, 75, 79, 85, 86, 87, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 105, 109, 111, 112, 113, 114, 116, 117, 123, 125, 135, 136, 140, 143, 145], "Then": 122, "There": [4, 24, 26, 88, 102, 143, 145], "These": [2, 5, 8, 26, 27, 28, 30], "To": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 101, 113, 144, 145], "WILL": 92, "Will": 52, "With": [10, 105], "_": [3, 5, 14, 16, 17, 26, 27, 28, 31, 32, 147], "__doc__": 26, "__getitem__": [5, 68, 125], "__init__": [5, 32], "__len__": [68, 125], "__name__": 12, "__str__": 26, "__version__": [141, 145], "_causalconv1d": 10, "_check_optimize_result": 5, "_classif": 10, "_criteria": [68, 125], "_data": 31, "_decoderblock": 11, "_encoderblock": 11, "_encoderlay": 10, "_frequency_shift": 147, "_logist": 5, "_modul": [68, 125], "_mrcnn": 10, "_multiheadedattent": 10, "_nestedsequ": 80, "_optim": [68, 125], "_path": 69, "_positionwisefeedforward": 10, "_return_pair": 5, "_scalartype_co": 80, "_sebasicblock": 10, "_selay": 10, "_sublayeroutput": 10, "_supportsarrai": 80, "_t": [121, 122], "_tce": 10, "_tuhmock": [12, 22], "_warn_prf": 10, "a1": 12, "a2": 12, "a_max": 12, "a_min": 12, "aasm": [5, 9, 10, 11], "ab": [4, 5, 46, 63, 99, 135], "abb7a7": 107, "abbassalami": 91, "abbrevi": [3, 4, 18, 20, 21, 29, 30], "abl": [2, 3, 4, 5, 8, 9, 10, 11, 12, 27, 28, 30, 68, 125, 141], "ablat": 99, "abnorm": [14, 75, 78, 87], "about": [8, 9, 10, 12, 26, 30, 72, 79, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 138, 141], "abov": [3, 14, 16, 22, 27, 29, 141, 143], "absolut": [43, 101], "acc": [5, 29, 32], "acceler": [68, 125], "accept": [68, 82, 108, 119, 125], "accepted_bads_ratio": [82, 119], "access": [5, 9, 10, 11, 12, 14, 26, 86, 87, 91, 101, 127, 143], "accident": 147, "accommod": 14, "accord": [40, 57, 117], "accordingli": [3, 4, 9, 26, 27, 28, 29, 30, 32, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 106, 107, 109, 111], "account": [5, 71, 118, 124], "accumul": 32, "accur": 94, "accuraci": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 32, 133, 147], "accuracyof": 4, "achiev": [5, 9, 10, 11, 99], "acoust": 70, "acquir": 73, "acquisit": 113, "across": [107, 117, 126, 130], "act": [16, 117], "action": 147, "activ": [4, 19, 26, 68, 73, 85, 87, 88, 92, 93, 94, 99], "actual": [3, 5, 12, 14, 22], "ad": [19, 27, 71, 75, 77, 78, 86, 87, 90, 99, 101, 107, 109, 111, 112, 113, 114, 116, 117, 124, 147], "adam": [5, 9, 10, 11, 14, 31], "adamw": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "adapt": [9, 11, 16, 91, 92, 93, 101, 105, 106, 107], "adaptiveavgpool1d": [10, 107], "add": [3, 4, 5, 11, 26, 27, 28, 29, 32, 43, 44, 59, 61, 68, 71, 72, 79, 101, 113, 125, 133, 147], "add_log_softmax": [2, 8, 26, 31, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109], "add_physician_report": [12, 22, 77, 78], "addit": [2, 8, 12, 17, 20, 21, 26, 28, 29, 30, 32, 44, 61, 68, 70, 71, 72, 79, 82, 119, 125, 140], "addition": [12, 18, 26, 35, 68, 125, 136], "address": [42, 60], "adjust": [3, 4, 26, 27, 28, 29, 30, 32, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 106, 107, 109], "adjustmenty": 32, "admiss": 37, "advanc": [27, 143], "advanced_train": [5, 6, 146], "advantag": [16, 29, 92, 93], "advis": [3, 27, 30, 42, 60, 125], "aertsen": [27, 28, 29, 30], "affect": [14, 27, 133], "affin": 10, "afr": [10, 105], "after": [5, 12, 16, 21, 26, 28, 29, 32, 70, 76, 88, 102, 103, 104, 130, 133, 147], "after_reduced_cnn_s": 105, "afterward": [27, 29, 85, 86, 90, 94, 117], "ag": [5, 12, 18, 22, 70, 73, 75, 77, 78], "again": [18, 22, 29], "agcl": 70, "aggreg": [4, 90], "aggregate_predict": [2, 68, 125], "aggregate_proba": 147, "ah": [9, 10, 11], "ai": 138, "aim": [21, 22, 99], "ain": 75, "al": [9, 10, 11, 26, 73, 87, 88, 89, 91, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 109, 133], "alamgir": 75, "alex": 147, "alexandr": [28, 29, 30, 35], "algorithm": [14, 26, 28, 29, 30, 32], "alia": [26, 85, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 102, 103, 104, 105, 106, 107, 109], "all": [2, 3, 4, 8, 12, 14, 16, 24, 26, 27, 28, 29, 30, 32, 43, 44, 52, 59, 61, 66, 68, 69, 70, 73, 74, 76, 85, 86, 90, 92, 93, 94, 95, 101, 111, 113, 114, 116, 117, 118, 119, 125, 133, 146, 147], "all_dataset": 29, "all_n_job": 16, "all_n_rec": 16, "all_result": 14, "allow": [3, 5, 14, 26, 29, 30, 32, 41, 68, 74, 82, 92, 93, 99, 101, 119, 125, 147], "almost": 75, "along": [26, 72, 79, 116, 144, 147], "alpha": [5, 9, 10, 11, 12, 46, 85, 92, 93], "alreadi": [2, 3, 5, 8, 9, 10, 11, 14, 19, 27, 28, 29, 71, 72, 79, 124, 125, 141, 143], "also": [3, 4, 5, 9, 10, 11, 12, 14, 18, 21, 26, 28, 35, 68, 79, 90, 92, 93, 105, 113, 114, 116, 125, 136, 141, 144, 145], "alsulaiman": 85, "altaheri": 85, "altern": [5, 26, 32, 68, 125], "although": [3, 68, 85, 86, 90, 94, 125], "alwai": [29, 32, 35, 54, 68, 125], "amar": [5, 9, 10, 11], "among": 105, "amount": [9, 10, 11, 16, 116], "amper": [68, 125], "amplifi": 70, "amplitud": [43, 59, 118, 119, 147], "amplitur": 101, "an": [2, 5, 8, 10, 12, 14, 18, 19, 20, 21, 22, 26, 27, 29, 30, 32, 41, 47, 48, 49, 50, 54, 68, 70, 72, 73, 75, 79, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 112, 113, 115, 116, 117, 119, 125, 127, 133, 141, 142, 147], "analaysi": [7, 24], "analog": [29, 133], "analys": [2, 8, 29, 30, 69], "analysi": [4, 5, 9, 10, 11, 26, 35, 86, 142], "analyz": 30, "andreu": 91, "angl": [47, 48, 49, 50, 64, 140], "ani": [17, 18, 26, 27, 29, 32, 68, 80, 105, 113, 117, 125, 145], "ann": 147, "annot": [9, 10, 11, 18, 19, 21, 27, 28, 29, 30, 32, 75, 113, 147], "annual": [47, 48, 49, 50, 64], "anonym": 141, "anoth": [5, 21, 29, 32, 128], "answer": [29, 32], "anyth": [27, 68], "anywher": [68, 125], "apart": 5, "api": [26, 145], "appear": [9, 10, 11, 70], "append": [2, 8, 12, 14, 16, 27, 28, 31, 68, 113, 125], "appli": [2, 3, 4, 5, 8, 9, 10, 12, 16, 18, 19, 20, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 72, 79, 101, 103, 104, 108, 113, 115, 117, 123, 124, 125, 135, 147], "applic": [79, 113], "applied_exampl": [13, 146], "apply_batch_norm": [5, 103, 104], "apply_funct": 115, "apply_on_arrai": [9, 10, 12, 115], "apply_proj": 117, "approach": [4, 5, 9, 10, 11, 16, 24, 30, 105, 126], "appropri": [35, 144], "approv": 73, "approx": 73, "approxim": [10, 48, 49, 50], "ar": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 35, 37, 46, 63, 68, 71, 79, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 117, 118, 119, 123, 125, 128, 130, 134, 141, 143, 144, 145, 147], "arang": [2, 8], "architectur": [2, 5, 8, 9, 10, 11, 26, 27, 28, 30, 68, 86, 87, 89, 90, 99, 101, 103, 104, 105, 109, 125, 142], "arg": [68, 95, 125, 147], "argmax": 32, "argument": [3, 4, 16, 19, 26, 29, 32, 36, 38, 39, 40, 42, 51, 53, 54, 68, 74, 111, 113, 114, 115, 116, 117, 123, 125, 133, 147], "aris": 16, "aristimunha": [4, 147], "armchair": 70, "arnal": [5, 9, 10, 104], "around": [4, 10, 32, 47, 48, 49, 50, 64, 87, 119, 126], "arrai": [2, 4, 8, 11, 17, 22, 26, 28, 29, 30, 37, 47, 54, 55, 64, 68, 80, 81, 82, 113, 114, 115, 116, 125, 129, 136, 140], "arrow": [70, 73], "articl": [26, 35], "artifici": 4, "arxiv": [4, 5, 31, 37, 38, 39, 40, 42, 44, 46, 52, 55, 56, 57, 58, 60, 61, 63, 66, 86, 96, 97, 99, 101, 106, 128, 135], "as_tensor": 3, "ascend": [75, 77, 78], "ask": [35, 70], "assert": [2, 3, 4, 8, 14, 27, 28, 29, 30, 32], "assign": [27, 28, 137], "assist": [92, 93], "associ": [92, 93], "assum": [14, 26, 68, 111, 125, 130, 134, 147], "astyp": [9, 10], "atcnet": [26, 147], "aten": 11, "att_depth": 90, "att_drop_prob": 90, "att_dropout": 85, "att_head": 90, "att_head_dim": 85, "att_num_head": [85, 87, 101], "attempt": [26, 85, 86, 87, 88, 89, 95, 98, 100, 101, 102, 103, 104, 105, 106, 109, 117], "attent": [10, 85, 86, 87, 90, 101, 105], "attention_mod": 86, "attentionbasenet": [26, 147], "attenu": [16, 113], "attn_drop_r": 101, "attn_head_dim": 101, "attnsleep": 105, "attribut": [2, 8, 26, 28, 29, 30, 32, 68, 72, 79, 115, 125, 147], "attributeerror": 68, "aug": [26, 35, 88, 98, 100, 102, 140], "augment": [1, 6, 24, 71, 74, 90, 95, 102, 115, 119, 122, 124, 138, 142, 146, 147], "augmenteddataload": [3, 4, 147], "author": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31, 35, 90, 91, 92, 93, 94, 96, 97, 99], "auto": [3, 4, 8, 14, 17, 19, 26, 28, 29, 30, 32, 68, 88, 90, 96, 97, 98, 102, 113, 116, 117, 125, 147], "auto_exampl": [6, 13, 23, 33, 34], "auto_examples_jupyt": 24, "auto_examples_python": 24, "auto_tutori": 76, "autocorrel": 5, "autoencod": 109, "autom": [14, 29], "automat": [12, 14, 26, 69, 89, 107, 117, 147], "avail": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 19, 22, 26, 27, 28, 29, 30, 32, 69, 76, 86, 87, 90, 92, 93, 99, 105, 118, 119, 126, 127], "avenu": 5, "averag": [10, 12, 27, 29, 31, 32, 68, 85, 95, 99, 117, 125, 130], "avg": [5, 9, 10, 11], "avg_pool": 10, "avgpool1d": 11, "avgpool2d": [3, 4, 26, 27, 28, 29, 32], "avoid": [9, 10, 11, 12, 14, 16, 22, 27, 29, 76, 147], "awar": [37, 44, 52, 55, 61, 66], "ax": [2, 3, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 30, 31, 95], "ax1": [2, 5, 8, 9, 10, 11, 27, 28], "ax2": [2, 5, 8, 9, 10, 11, 27, 28], "axhlin": 12, "axi": [2, 3, 5, 8, 27, 28, 31, 47, 48, 49, 50, 51, 53, 64, 65, 67, 95, 116, 137], "azemi": [37, 44, 52, 55, 61, 66], "b": [5, 9, 10, 11, 16, 27, 40, 57, 86, 87, 90, 96, 97, 99, 109], "ba": 31, "back": 73, "backend": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 138, 147], "backtick": 141, "backward": [3, 4, 11, 14, 26, 27, 28, 29, 32, 95, 113, 147], "bad": [10, 14, 19, 113, 114, 117, 141], "bad_acq_skip": 113, "bai": 106, "bai2018": 106, "bal": 5, "balanc": [5, 9, 10, 11, 126, 147], "balanced_accuraci": [9, 10], "balanced_accuracy_multi": 11, "balanced_accuracy_scor": [5, 11], "balancedsequencesampl": 147, "ball": [26, 27, 28, 29, 30, 31, 35, 73, 88, 98, 100, 102, 140], "band": [37, 55, 113, 123, 147], "bandpass": [2, 3, 4, 8, 20, 27, 28, 29, 30, 32, 70, 113, 123], "bandwidth": [16, 37, 55], "bang": 101, "banvil": [4, 5, 9, 14, 16, 20, 128, 147], "banville2020": 128, "bao": 101, "bar": 4, "barach": [28, 29, 30], "barh": [12, 29], "base": [0, 2, 3, 4, 5, 8, 9, 10, 12, 16, 18, 20, 21, 26, 27, 28, 29, 30, 31, 32, 36, 44, 46, 61, 63, 68, 70, 71, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 105, 111, 113, 114, 118, 119, 125, 127, 135, 147], "baseconcatdataset": [2, 5, 9, 10, 12, 14, 16, 21, 31, 68, 80, 81, 82, 83, 118, 119, 124, 125, 127, 136, 147], "basedataset": [31, 36, 71, 79, 83, 124, 147], "baseepoch": [79, 81], "baselin": [19, 26, 99], "baseraw": [72, 82], "basic": [15, 27, 29, 32, 33, 54, 71, 74, 94, 95, 102, 115, 119, 122, 124, 138, 140, 146, 147], "batch": [3, 4, 5, 26, 30, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 88, 89, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 125, 132, 136, 147], "batch_i": 22, "batch_idx": 32, "batch_ind": 22, "batch_loss": 32, "batch_norm": [14, 26, 88, 102], "batch_norm_alpha": [14, 26, 88, 92, 93, 98, 102], "batch_norm_epsilon": 98, "batch_siz": [2, 3, 4, 5, 8, 9, 10, 11, 14, 22, 27, 28, 29, 30, 31, 32, 37, 46, 47, 55, 63, 64, 68, 87, 89, 90, 95, 99, 100, 103, 104, 105, 106, 107, 108, 110, 125, 130, 134, 136, 139], "batch_x": [5, 22], "batchnorm1d": [10, 11], "batchnorm2d": [3, 4, 26, 27, 28, 29, 32, 88, 92, 93, 102], "batchscor": [68, 125], "bbci": 69, "bbox_to_anchor": 29, "bcewithlogitsloss": [5, 68, 125], "bci": [2, 4, 8, 21, 26, 27, 28, 29, 30, 42, 60, 69, 70, 85, 94, 99, 101, 107], "bci2000": 73, "bcic": [1, 6, 7, 13, 20, 24, 25, 29, 32, 33, 36, 38, 41, 42, 43, 51, 52, 54, 69, 71, 74, 95, 102, 110, 115, 118, 119, 120, 122, 124, 130, 131, 132, 134, 138, 140, 146, 147], "bcicomp": 8, "bcicompetitionivdataset4": [2, 8, 147], "bd_cmap": 29, "bear": 141, "becaus": [2, 16, 26, 27, 29, 30, 141], "becom": [14, 16, 29], "been": [2, 3, 4, 8, 10, 14, 16, 18, 20, 21, 27, 28, 29, 30, 32, 91, 92, 93, 94, 95, 96, 97, 135, 141, 145, 147], "beetl": [92, 93], "befor": [2, 11, 16, 27, 28, 29, 30, 32, 68, 71, 72, 76, 79, 85, 88, 89, 90, 103, 104, 105, 121, 122, 125, 133, 138, 144, 147], "beforehand": 19, "begin": [2, 27, 29, 30, 70, 103, 113, 118], "beginn": 143, "behavior": [10, 30, 32, 68, 125, 147], "behaviour": [2, 8, 69], "behind": [29, 32], "being": [4, 10, 14, 27, 68, 73, 125], "beit": 101, "beitv2": 101, "below": [3, 5, 35, 37, 141, 144, 147], "benchmark": [2, 3, 4, 5, 8, 9, 10, 11, 15, 23, 24, 27, 28, 29, 30, 31, 32, 71, 76, 78, 88, 102, 115, 118, 124, 138, 146, 147], "benchmark_lazy_eager_load": [14, 23, 146], "benefici": 28, "best": [1, 6, 24, 32, 36, 38, 42, 52, 54, 71, 74, 95, 102, 115, 119, 122, 124, 138, 146], "best_aug": 4, "best_paramet": 29, "best_run": [4, 29, 30], "beta": 46, "beta_per_sampl": 46, "better": [2, 5, 8, 10, 14, 16, 27, 28, 29, 32, 90, 133, 147], "between": [2, 3, 4, 5, 8, 9, 11, 26, 27, 28, 29, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 54, 55, 56, 58, 60, 63, 70, 80, 81, 82, 88, 90, 99, 102, 103, 111, 118, 119, 129, 134], "beyond": [31, 46, 63, 135], "bia": [9, 10, 11, 101], "bias": 29, "bidirect": 89, "big": [7, 13, 24, 71, 77, 115, 118, 124, 146, 147], "bigger": 12, "bin": 12, "biologi": [47, 48, 49, 50, 64], "biomed": 5, "biosign": [37, 44, 52, 55, 61, 66, 87], "biot": [26, 147], "biotencod": 87, "bipolar": 117, "birbaum": [27, 28, 29, 30], "biswal": [40, 57], "black": [2, 8, 12, 27, 28, 70, 73, 140, 147], "blackman": 113, "blanco": 103, "blanco2020": 103, "block": [85, 86, 92, 93, 94, 99, 101, 106, 109], "block_postskip": 11, "block_prepool": 11, "block_preskip": 11, "blue": [2, 5, 8, 16, 27, 28], "bme": [9, 10, 11], "bn1": 10, "bn2": 10, "bnci": [4, 70], "bnci2014": [3, 4, 18, 20, 21, 29, 30], "bnci2014001": [3, 4, 18, 20, 21, 29, 30], "bnci2014_001": [3, 4, 18, 20, 21, 27, 28, 29, 30, 32], "bnorm": [3, 4, 26, 27, 28, 29, 32], "bold": 140, "bonsmann": 147, "bool": [14, 26, 42, 46, 47, 48, 49, 50, 60, 64, 68, 69, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 128, 129, 133, 136, 138, 140], "boost": 5, "bose": 94, "both": [4, 5, 16, 22, 30, 70, 73, 103, 104, 109], "bottleneck": [16, 32, 92, 93, 107], "bottom": 11, "bouallegu": [99, 147], "box": [68, 125], "boxcar": 116, "br": 4, "brain": [4, 24, 25, 26, 27, 29, 30, 31, 33, 35, 71, 74, 75, 88, 92, 93, 95, 96, 97, 98, 100, 101, 102, 115, 119, 122, 124, 138, 140, 142, 146], "braincod": 144, "braindecod": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 33, 143, 144, 146, 147], "branch": 94, "brandt": [3, 20, 147], "braun": [27, 28, 29, 30], "break": [20, 70], "brodbeck": 35, "brook": 35, "bruna": 147, "brunner": [27, 28, 29, 30], "bruno": [4, 147], "bsd": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31], "bug": 95, "build": [12, 27, 32, 143, 145], "built": [35, 141], "bundl": 14, "burgard": [27, 28, 29, 30, 35], "butt": 75, "butterworth": 113, "byte": 80, "c": [4, 5, 9, 10, 11, 20, 27, 28, 29, 30, 42, 60, 87, 89, 94, 96, 97, 101, 109, 126, 141], "c0": 4, "c1": 4, "c2": 4, "c3": [12, 26], "c4": [12, 26], "c_tuab": 78, "c_tueg": [12, 77], "ca": 107, "cach": [68, 125, 147], "cache_config": 74, "cagig": [92, 93], "cakmak": [42, 60], "cal": 26, "calcul": [2, 3, 4, 27, 28, 29, 30, 32, 68, 107, 125], "call": [3, 16, 26, 27, 29, 32, 68, 71, 79, 82, 85, 86, 90, 94, 111, 115, 118, 119, 125, 131, 132, 133], "callabl": [3, 26, 41, 54, 68, 71, 72, 79, 88, 102, 115, 125, 133], "callback": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 68, 125, 133], "callbacks_": [68, 125], "callbacks__print_log__keys_ignor": [68, 125], "callbacks__valid_acc": 11, "camelcas": 0, "can": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 26, 27, 28, 29, 30, 32, 35, 43, 47, 64, 68, 71, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 113, 114, 116, 117, 125, 136, 143, 144, 147], "candid": [4, 29, 30], "cannot": [2, 3, 4, 5, 8, 9, 10, 11, 12, 27, 28, 29, 30, 32, 68, 111, 125], "canon": 35, "capabl": [12, 16, 29, 32, 68, 125], "capac": [29, 30], "capit": 10, "captur": 105, "care": [85, 86, 90, 94], "carri": [39, 58, 70], "cartesian": [47, 64], "case": [2, 8, 16, 21, 26, 27, 28, 29, 30, 32, 68, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 117, 125, 138, 144, 147], "cast": [4, 41], "categor": [4, 126], "categori": [2, 4, 31], "catplot": 14, "caus": [2, 8], "causal": [16, 113], "cbar": 30, "cd": 145, "cdot": [121, 122], "cedric": [3, 4, 147], "ceil": [9, 10, 107], "ceil_mod": [9, 10], "cell": 4, "center": [2, 8, 9, 10, 29, 37, 55], "certain": [68, 125], "certif": 27, "ch": [26, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109], "ch_dim": 86, "ch_name": [12, 14, 17, 26, 80, 112, 123], "ch_po": [47, 64], "ch_type": [12, 26, 117], "chambon": [5, 9, 10, 104], "chambon2018": [7, 13, 24, 71, 76, 95, 104, 108, 115, 119, 124, 127, 129, 138, 140, 146], "chan": [2, 3, 4, 8, 27, 28, 29, 30, 32, 73], "chanc": [5, 9, 10], "chang": [2, 5, 8, 14, 18, 31, 45, 68, 117, 125, 133, 145], "channel": [2, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 19, 26, 31, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 56, 57, 58, 59, 60, 61, 63, 64, 66, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 113, 114, 117, 118, 119, 123, 147], "channel_indep": [42, 60], "channel_wis": [5, 9, 10, 11, 16], "channelsdropout": 4, "character": 16, "chat": 141, "check": [2, 3, 4, 8, 9, 10, 11, 26, 27, 28, 29, 30, 32, 35, 85, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 106, 107, 109, 141, 144, 147], "checker": 147, "checkpoint": [5, 32], "checkpoint_connector": 32, "chehab": [4, 5, 11, 128, 147], "cheng": [37, 44, 52, 55, 61, 66], "chevalli": 147, "choic": [2, 3, 4, 5, 8, 9, 10, 12, 27, 28, 29, 30, 32, 86, 90, 99, 147], "choos": [2, 3, 4, 8, 18, 27, 28, 29, 30, 32], "chose": 3, "chosen": [2, 16, 18, 27, 32, 52, 68, 113, 125, 136], "christian": 35, "christoph": 30, "chronolog": [12, 75, 77, 78], "chs_info": [26, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 125], "ci": 147, "cifar10": [46, 63, 135], "circl": 16, "circul": [5, 9, 10, 11], "ciss": [46, 63, 135], "cite": [2, 8, 69], "ckpt": 32, "ckpt_path": 32, "cl": 101, "class": [0, 3, 4, 5, 9, 10, 11, 12, 14, 18, 20, 21, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 140, 147], "class_nam": [9, 10, 11, 27, 28, 140], "class_names_fonts": 140, "class_weight": [5, 9, 10, 11], "classes_": 68, "classic": 28, "classif": [5, 9, 10, 11, 26, 27, 30, 37, 42, 44, 52, 55, 60, 61, 66, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "classifi": [3, 4, 5, 9, 10, 11, 26, 29, 31, 101, 147], "classification_report": [5, 9, 10, 11], "classificationhead": [86, 87, 90], "claus": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26], "clear": 16, "clench": 73, "clf": [3, 4, 5, 9, 10, 11, 27, 28, 29, 30], "clf_pipe": 5, "clifford": [42, 60], "cliffordlab": [42, 60], "clinic": [4, 5, 7, 24, 128], "clip": 12, "clone": [105, 147], "cloneabl": 147, "close": [5, 16, 18, 128, 141], "cm": [5, 70, 140], "cmap": 30, "cmsaugment": [38, 39, 56, 58], "cnosid": 8, "co": [40, 57], "code": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 85, 86, 87, 90, 91, 92, 93, 99, 101, 105, 106, 107, 141, 143, 145, 147], "code2023": 87, "code2024": 101, "codebas": 147, "coeffici": [2, 8, 46, 63, 135], "cognit": [7, 24], "coil_typ": 26, "col": 14, "col_nam": 95, "cold": [68, 125], "collect": [26, 68, 73, 125], "color": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 140], "colormap": [5, 140], "column": [2, 8, 19, 21, 22, 27, 28, 29, 30, 32, 71, 79, 83, 95, 126, 127, 140], "com": [2, 3, 5, 8, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31, 77, 78, 145], "combin": [14, 16, 71], "combinedconv": [3, 4, 26, 27, 28, 29, 32], "come": [2, 8, 14, 28, 30, 32, 129, 138], "comfort": 70, "command": [144, 145], "commit": 147, "committe": 73, "common": [12, 14, 117, 144, 147], "commonli": 3, "compact": [29, 96, 97], "compar": [5, 14, 16, 22, 27, 29, 32, 86], "comparison": [4, 14, 27, 28], "compat": [3, 14, 17, 19, 30, 68, 80, 81, 82, 125, 147], "compens": [29, 113], "competit": [2, 4, 8, 11, 14, 21, 26, 27, 28, 29, 30, 69, 70, 92, 93, 99], "compil": [68, 125], "compile__dynam": [68, 125], "complet": [12, 14, 16, 27, 68, 125], "complex": [5, 9, 10, 11, 29, 32, 73, 80, 103], "complexity_factor": 109, "complianc": 18, "compon": [5, 9, 10, 11, 73, 92, 93], "compos": [86, 90], "composed_transform": 3, "composit": [3, 41], "compris": 70, "comput": [3, 4, 5, 9, 10, 11, 18, 22, 35, 48, 49, 50, 68, 70, 82, 85, 86, 90, 92, 93, 94, 96, 97, 103, 117, 119, 121, 122, 125, 130, 131, 132, 134, 138, 141, 145, 147], "compute_amplitude_gradi": 147, "compute_class_weight": [9, 10, 11], "concat": [18, 71, 85, 118, 119, 124], "concat_d": [12, 16, 18, 118, 119, 120, 124], "concat_dataset": [83, 84], "concatdataset": 118, "concaten": [5, 9, 10, 71, 85, 108, 113, 118, 119], "concatenate_raw": 113, "conda": 147, "condit": 147, "conf": [27, 28], "confer": [44, 46, 47, 48, 49, 50, 61, 63, 64, 87, 101], "config": [27, 69], "configur": [12, 16, 27, 29, 32], "configure_optim": 32, "conflict": [32, 68, 125], "conform": 90, "conformercod": 90, "confus": [5, 9, 10, 11, 140, 147], "confusion_mat": [9, 10, 11, 27, 28, 140], "confusion_matrix": [5, 9, 10, 11, 27, 28, 140], "connect": [29, 30, 85, 90, 94, 103, 109], "connectionpool": 27, "connector": 32, "consecut": [9, 10, 11, 52, 66, 108, 119, 126, 129], "consid": [2, 4, 29, 32, 48, 49, 50, 68, 125, 133], "consider": 16, "consist": [2, 3, 4, 5, 8, 9, 11, 27, 28, 48, 49, 50, 70, 73], "constant": 2, "constant_valu": 2, "constantpad1d": 11, "constraint": [85, 147], "construct": [113, 117], "construct_iir_filt": 113, "constructor": 30, "contain": [2, 5, 8, 12, 14, 16, 18, 21, 22, 26, 31, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 52, 55, 63, 64, 66, 68, 69, 71, 74, 75, 76, 79, 117, 118, 119, 125, 126, 127, 128, 134, 135, 141, 147], "content": 76, "context": [4, 5, 29, 35, 105, 128], "contigu": [16, 52, 66], "continu": [14, 16, 20, 72, 73, 80, 81, 82, 118, 119, 144, 147], "contrari": 85, "contrast": [2, 4, 5, 27, 37, 44, 52, 55, 61, 66, 87], "contrastivenet": 5, "contribut": [143, 145], "contributor": [141, 145], "control": [4, 5, 10, 29, 68, 103, 111, 113, 114, 116, 117, 118, 119, 124, 125, 147], "conv": [10, 11, 109], "conv1": 10, "conv1d": [10, 11, 109], "conv2": 10, "conv2d": [3, 4, 9, 26, 27, 28, 29, 32], "conv_block_depth_mult": 85, "conv_block_dropout": 85, "conv_block_kernel_length_1": 85, "conv_block_kernel_length_2": 85, "conv_block_n_filt": 85, "conv_block_pool_size_1": 85, "conv_block_pool_size_2": 85, "conv_classifi": [3, 4, 26, 27, 28, 29, 32], "conv_nonlin": [26, 102], "conv_nonlin_exp": [3, 4, 26, 27, 28, 29, 32], "conv_time_spat": [3, 4, 26, 27, 28, 29, 32], "conv_weight_init_fn": 98, "conveni": [5, 101, 117], "converg": [5, 29, 31], "convergencewarn": 5, "convert": [2, 3, 4, 5, 8, 9, 10, 12, 17, 19, 27, 28, 29, 30, 31, 32, 113], "convnet": [2, 8, 26, 27, 28, 88, 100, 102], "convolut": [2, 5, 8, 9, 11, 24, 25, 26, 27, 28, 29, 30, 33, 35, 42, 44, 60, 61, 71, 72, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 118, 130, 138, 140, 146, 147], "coord_fram": 26, "coordin": [47, 64], "copi": [2, 11, 16, 42, 60, 69, 111, 141], "core": [12, 16, 32], "corpu": [7, 13, 14, 15, 23, 24, 71, 77, 78, 87, 115, 118, 124, 146, 147], "corr_coeff": [2, 8], "corrcoef": [2, 8], "correct": [19, 26, 32, 68, 91, 92, 93, 94, 96, 97, 125, 147], "correctli": [9, 10, 11, 95, 145, 147], "correl": [2, 8, 27, 29], "correspond": [2, 5, 8, 12, 21, 29, 30, 31, 37, 40, 68, 69, 70, 71, 79, 80, 82, 117, 119, 124, 125, 126, 134], "corrupt": 141, "cortex": 73, "cosineannealinglr": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "cost": [2, 3, 4, 5, 8, 9, 11, 27, 28], "could": [4, 5, 14, 29, 32, 95, 145], "count": [12, 68, 125], "cours": [16, 69], "cover": [73, 140], "coverag": 147, "cp": 5, "cpp": 11, "cpu": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 32, 68, 125], "creat": [14, 16, 17, 18, 19, 20, 21, 31, 68, 71, 79, 80, 81, 82, 117, 118, 119, 125, 136, 147], "create_example_model": 14, "create_filt": 113, "create_fixed_length_window": [2, 5, 12, 14, 16, 22, 31, 147], "create_from_mne_epoch": 19, "create_from_mne_raw": 19, "create_from_x_i": 17, "create_info": 26, "create_mne_dummy_raw": 31, "create_windows_from_ev": [3, 4, 5, 9, 10, 11, 18, 21, 27, 28, 29, 30, 32, 147], "create_windows_from_target_channel": [8, 147], "creation": [12, 22], "credibl": [29, 32], "criteria": [20, 68, 125], "criterion": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 68, 125], "criterion_": [68, 125], "criterion__loss_funct": [2, 27, 31], "criterion__weight": [9, 10, 11], "crop": [1, 6, 8, 10, 11, 12, 16, 20, 24, 25, 29, 30, 31, 32, 33, 68, 69, 71, 74, 76, 79, 95, 102, 110, 115, 118, 119, 122, 124, 125, 130, 131, 132, 134, 136, 138, 140, 146, 147], "crop_wake_min": [5, 9, 10, 11, 16, 76], "croppedloss": [2, 27, 31], "croppedtimeseriesepochscor": 2, "cross": [2, 8, 16, 27, 28, 70, 87, 99], "cross_val_scor": 29, "crossentropyloss": [3, 4, 9, 10, 11, 26, 27, 28, 29, 30, 32, 68, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 106, 107, 109, 125], "csr": [68, 125], "csv": 14, "csvlogger": 32, "cuda": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 68, 113, 116, 125, 138, 144], "cuda_dependent_attributes_": [68, 125], "cuda_path": 144, "cudnn": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 138, 147], "cudnn_benchmark": [2, 3, 4, 5, 8, 9, 11, 27, 28, 138], "cue": [70, 73], "cumbersom": [68, 125], "cupi": [113, 116], "current": [11, 68, 117, 125, 141], "curv": [2, 8, 28], "custom": [3, 4, 15, 23, 24, 36, 71, 80, 146], "custom_crop": 12, "cut": [3, 4, 19, 28, 29, 30, 37, 55, 80, 113], "cutoff": [2, 8, 16, 113], "cv": [4, 29, 30, 101], "cv_result": 29, "cv_results_": [4, 29, 30], "cycl": 14, "cz": [10, 12, 26, 117, 123], "cz_4": 123, "cz_8": 123, "c\u00e9dric": [3, 4], "d": [2, 3, 4, 5, 8, 12, 14, 22, 26, 27, 28, 29, 30, 31, 32, 38, 39, 42, 56, 58, 60, 75, 85, 88, 97, 98, 100, 102, 103, 107, 128, 140, 147], "d_ff": 105, "d_i": 12, "d_model": 105, "dafaram": 12, "dahl": 30, "dai": [12, 70], "dan": [20, 147], "daniel": [20, 35, 147], "darkner": [11, 109, 126], "darva": 73, "data": [1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 25, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 58, 61, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 87, 88, 90, 95, 99, 101, 102, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 130, 135, 138, 140, 141, 142, 146, 147], "data_connector": 32, "data_loading_end": 14, "data_loading_start": 14, "data_prepar": 14, "datafram": [2, 4, 5, 8, 9, 10, 11, 14, 16, 20, 21, 22, 27, 28, 29, 30, 68, 71, 125, 126, 127, 128, 129], "dataload": [3, 4, 5, 14, 32, 36, 68, 125, 136], "datapoint": 71, "dataset": [1, 6, 13, 14, 15, 16, 23, 25, 26, 33, 36, 38, 41, 42, 43, 51, 52, 54, 68, 83, 85, 87, 94, 95, 102, 104, 105, 108, 109, 110, 115, 118, 119, 120, 122, 124, 125, 127, 129, 130, 131, 132, 134, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147], "dataset__": [68, 125], "dataset_kwarg": 74, "dataset_load": 18, "dataset_load_kwarg": 74, "dataset_nam": [3, 4, 18, 20, 21, 27, 28, 29, 30, 32, 74], "dataset_train": [68, 125, 131, 132, 133], "dataset_valid": [68, 125, 131, 132, 133], "datasets_io": [23, 146], "datautil": [0, 5, 18, 79, 147], "dauphin": [46, 63, 135], "david": [46, 63, 135], "db": [3, 16, 117], "ddf2ff": 29, "de": 69, "deactiv": 11, "deal": [68, 125], "decid": [8, 28, 38, 39, 40, 42, 51, 53, 54], "decod": [1, 3, 4, 6, 7, 11, 13, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 35, 68, 69, 71, 74, 80, 86, 88, 90, 95, 98, 99, 100, 101, 102, 109, 110, 115, 118, 119, 120, 122, 124, 125, 130, 131, 132, 134, 136, 138, 140, 142, 146, 147], "decomposit": 5, "decreas": [2, 8, 11], "deep": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 32, 35, 44, 61, 88, 92, 93, 98, 99, 100, 102, 104, 105, 107, 140, 142, 144], "deep4": [27, 28, 147], "deep4net": [14, 26, 31, 147], "deepconvnet": 31, "deepcopi": 2, "deepsleepnet": [26, 147], "def": [2, 3, 5, 8, 9, 10, 11, 12, 14, 16, 29, 31, 32], "default": [2, 8, 11, 12, 27, 28, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 68, 69, 75, 76, 77, 78, 79, 82, 85, 87, 88, 90, 92, 93, 94, 95, 99, 101, 111, 112, 113, 114, 116, 117, 119, 125, 133, 138, 147], "defin": [2, 5, 9, 10, 11, 12, 14, 20, 21, 27, 28, 30, 40, 54, 57, 68, 79, 85, 86, 90, 94, 107, 119, 125, 128], "definit": [27, 68, 125], "degre": [29, 32, 47, 48, 49, 50, 64], "deiss": [40, 57], "del": 14, "delai": [113, 147], "delboui": 147, "delet": [5, 22, 71, 124], "delta_freq": [43, 59], "deman": 121, "demand": 4, "demarc": [29, 30], "demean": 121, "demeanin": 121, "demonstr": [3, 4, 7, 22, 24, 26, 32], "deni": [35, 147], "denot": 85, "dens": [27, 95, 103, 104], "densefilt": 107, "densenet": 107, "densiti": 3, "depend": [4, 5, 9, 10, 11, 14, 16, 26, 29, 30, 32, 35, 68, 73, 105, 125, 136, 143, 145, 147], "deprec": [2, 5, 10, 19, 31, 92, 147], "depreci": [3, 4, 8, 27, 28, 29, 30, 31, 32], "depth": [3, 4, 11, 26, 27, 28, 29, 30, 32, 85, 92, 93, 95, 99, 109], "depth_multipli": [92, 93], "depthwis": [85, 92, 93], "desc_4": 69, "describ": [5, 11, 26, 27, 28, 29, 32, 73, 75, 88, 89, 92, 93, 94, 95, 98, 102, 103, 104, 105, 109], "descript": [2, 5, 8, 12, 17, 18, 19, 20, 22, 27, 28, 29, 30, 32, 69, 70, 71, 72, 77, 78, 79, 82, 83, 85, 86, 87, 90, 92, 94, 96, 97, 98, 99, 100, 103, 109, 118, 119], "design": [5, 16, 87, 99, 101, 105, 113], "desir": [37, 47, 55, 64, 70, 111, 117], "despit": [9, 10, 11], "detail": [26, 29, 32, 46, 63, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 116, 117, 123, 124, 138, 145], "detect": [16, 17, 19, 30, 73, 75], "determin": [12, 30, 68, 93, 125], "develop": [26, 29, 32, 141, 145], "deviat": [44, 61], "devic": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 36, 68, 125, 147], "df": [2, 5, 8, 9, 10, 11, 12, 16, 27, 28], "df_of_ages_gend": 12, "dh": 85, "dict": [5, 9, 10, 11, 21, 26, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 52, 71, 72, 74, 79, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 118, 119, 123, 125, 147], "dictionari": [21, 26, 68, 71, 74, 113, 125], "diederik": 31, "differ": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 18, 21, 26, 27, 28, 29, 30, 70, 92, 93, 94, 109, 128, 143], "differenti": [38, 39, 56, 58], "digit": [11, 22, 109, 126], "dilat": [9, 10, 11, 27, 95], "dim": [2, 8, 101], "dimens": [2, 5, 8, 52, 66, 85, 90, 101, 105, 109, 116, 147], "dimension": [5, 68, 87, 90, 99, 125, 136], "dimshuffl": [3, 4, 26, 27, 28, 29, 32], "direct": [73, 141], "directli": [2, 3, 5, 8, 12, 22, 26, 27, 28, 30, 31, 68, 79, 115, 117, 125, 145], "directori": [12, 16, 18, 27, 69, 71, 75, 77, 78, 83, 124, 145], "dirnam": 5, "disabl": [32, 68, 113, 125], "disappear": 70, "discard": [12, 76], "disconsid": 12, "discov": 5, "discret": [15, 23, 24, 71, 77, 118, 146, 147], "discrimin": 30, "disk": [12, 14, 16, 77, 78, 119], "dispatch": 14, "displai": [5, 9, 10, 11, 27, 28, 29, 32, 73, 138], "distanc": [37, 55, 70], "distinct": [29, 32], "distinguish": 29, "distribut": [9, 10, 29, 46, 101, 143], "divers": [2, 4, 8], "divid": [73, 80, 81, 82, 118], "divis": [29, 32, 103, 105, 122], "divyesh": [10, 147], "dl": 22, "do": [4, 12, 14, 26, 27, 29, 32, 68, 80, 81, 82, 109, 118, 119, 125, 129, 138, 145, 147], "doc": [26, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 106, 107, 109, 138, 145, 147], "docstr": [26, 147], "document": [4, 5, 10, 12, 35, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 106, 107, 109, 111, 113, 114, 116, 117, 141, 145, 147], "doe": [2, 8, 14, 16, 18, 27, 29, 32, 45, 68, 85, 95, 119, 125, 141], "doesn": [32, 68, 69, 125], "dogrusoz": [37, 44, 52, 55, 61, 66], "doi": [2, 8, 10, 26, 27, 28, 29, 30, 35, 69, 85, 88, 91, 92, 93, 98, 100, 102, 103, 105, 107, 140], "domain": [2, 4, 8, 16, 28, 30, 43, 59, 99, 109, 113, 116], "dominiqu": 35, "don": [5, 11, 17, 19, 68, 125], "done": [3, 11, 16, 18, 26, 27, 85, 118, 119], "dong": [89, 101], "doubl": 113, "double_time_conv": 14, "down": [70, 103, 109, 116, 138], "download": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 69, 77, 78, 144], "downsampl": [9, 10, 99, 116], "downsid": 16, "downstream": 5, "downward": 73, "draw": [42, 60], "drawn": 46, "driver": 144, "drop": [3, 4, 10, 14, 19, 26, 27, 28, 29, 32, 38, 56, 82, 112, 119, 123], "drop_bad": [14, 82, 119], "drop_bad_window": [82, 119], "drop_channel": 112, "drop_index": [68, 125], "drop_last_window": [2, 12, 14, 17, 19, 22, 27, 31, 80, 81, 82, 118, 119], "drop_original_sign": 123, "drop_path_r": 101, "drop_prob": [14, 26, 30, 88, 90, 91, 92, 93, 96, 97, 102, 106, 107], "drop_rat": 101, "dropchannel": 147, "dropout": [3, 4, 5, 9, 10, 26, 27, 28, 29, 30, 32, 85, 86, 88, 90, 91, 92, 93, 101, 102, 103, 104, 105, 106, 107], "dropout_inp": 86, "droppath": 101, "dtype": [22, 30, 80, 147], "due": [18, 32, 147], "dummi": [2, 27], "dunder": [68, 125], "duplic": [137, 147], "dur": [2, 3, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31], "durat": [12, 29, 30, 31, 111, 113, 119], "dure": [2, 4, 5, 8, 9, 10, 11, 12, 14, 27, 28, 29, 30, 32, 68, 69, 101, 113, 117, 125, 147], "dx": [26, 35, 88, 92, 93, 98, 100, 102, 140], "dynam": [68, 125], "e": [3, 4, 5, 9, 10, 11, 14, 16, 26, 27, 28, 29, 30, 32, 37, 40, 44, 52, 54, 55, 57, 61, 66, 68, 72, 75, 76, 77, 78, 79, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 119, 123, 125, 129, 133, 140, 145, 147], "e215": [5, 9, 10, 11], "e220": [5, 9, 10, 11], "e231": 147, "each": [2, 4, 8, 9, 10, 11, 12, 14, 16, 17, 19, 21, 22, 26, 29, 30, 31, 36, 37, 38, 42, 47, 51, 53, 55, 56, 60, 64, 65, 67, 68, 69, 70, 71, 73, 76, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 116, 118, 119, 125, 127, 129, 131, 132, 133, 137], "eager": [15, 23, 24, 78, 88, 102, 118, 146], "earli": 29, "early_stop": 5, "earlystop": [5, 29, 32], "easiest": [26, 29], "easili": [2, 8, 20, 26, 28, 29, 30, 32, 127], "ecg": 87, "ecog": [1, 6, 7, 13, 24, 69, 71, 95, 102, 110, 115, 117, 118, 120, 122, 124, 131, 132, 134, 138, 142, 146, 147], "ecosystem": 32, "edf": [14, 16, 17, 19, 22], "edfx": 76, "edg": [16, 113], "edit": 145, "edu": [2, 4, 8, 69], "eeg": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 114, 115, 117, 118, 119, 122, 124, 127, 128, 135, 138, 140, 142, 146, 147], "eegbci": [17, 19], "eegclassifi": [2, 5, 9, 10, 11, 26, 27, 28, 29, 30, 147], "eegconform": [26, 147], "eegincept": [26, 93, 147], "eeginceptionerp": [26, 92, 147], "eeginceptionmi": [26, 147], "eegitnet": [26, 147], "eegmmidb": [17, 19], "eegmodulemixin": [2, 31, 147], "eegnet": [96, 97], "eegnet4": 97, "eegnetv1": 26, "eegnetv4": 26, "eegregressor": [2, 8, 26, 31, 147], "eegresnet": [26, 147], "eegsimpleconv": [26, 147], "eeyhsong": 90, "effect": [3, 19], "effici": [2, 3, 16, 27], "egg": 145, "eggensperg": [26, 27, 28, 29, 30, 31, 35, 88, 98, 100, 102, 140], "einop": 147, "either": [2, 8, 26, 28, 29, 30, 68, 70, 71, 73, 95, 113, 117, 125, 136], "el": [99, 147], "elabor": [29, 32], "eldel": [10, 105], "eldele2021": [7, 13, 24, 71, 76, 95, 105, 108, 115, 119, 124, 127, 129, 138, 140, 146], "electrocorticograph": [2, 8, 69], "electrod": [4, 20, 70, 73, 117], "electroencephalogram": [37, 44, 52, 55, 61, 66], "electroencephalograph": [47, 48, 49, 50, 64], "electroencephalographi": 35, "electrophysiolog": 142, "element": [47, 52, 64], "elementwise_affin": 10, "elif": [14, 31], "elouaya": 99, "els": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 27, 28, 29, 30, 31, 32, 68, 101, 125], "elu": [11, 85, 87, 88, 92, 93, 98], "emadeldeen24": 105, "emb": [5, 87], "emb_siz": [5, 87, 101], "embc": [47, 48, 49, 50, 64], "embed": [5, 9, 10, 85, 87, 90, 101], "embedd": 5, "emg": 76, "emir": 11, "emit": 112, "emot": [44, 61], "empir": [46, 63, 106, 135], "empti": [29, 68, 113, 117], "en": 27, "enabl": [14, 16, 27, 32, 68, 70, 107, 125, 147], "encod": [11, 87, 105, 109], "encount": [16, 18, 141], "encourag": [2, 8, 24, 27, 28], "end": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 35, 68, 94, 111, 116, 118, 119, 125, 131, 132, 133, 147], "end_dim": [9, 10], "enforc": 147, "eng": 107, "engemann": [4, 5, 35, 128, 147], "engin": [4, 5, 9, 10, 28, 29, 30, 47, 48, 49, 50, 64, 89, 90, 92, 93, 94, 104, 105], "enough": [5, 73], "ensembl": [129, 147], "ensur": [2, 109, 138, 144], "ensure4d": [3, 4, 26, 27, 28, 29, 32], "ensure_odd_conv_s": 109, "ensuredim": [3, 4, 26, 27, 28, 29, 32], "enter": [99, 145], "entir": [5, 14, 20, 29, 32, 147], "entri": [21, 112], "enumer": [5, 12, 29, 32], "env": 147, "environ": [4, 69, 138], "eog": [76, 109], "ep": [10, 122], "epo": [18, 71, 83], "epoch": [2, 3, 4, 5, 8, 9, 10, 11, 14, 19, 24, 25, 27, 28, 29, 30, 31, 32, 33, 68, 71, 79, 81, 82, 95, 102, 111, 112, 113, 114, 115, 117, 118, 119, 125, 128, 131, 132, 133, 146, 147], "epochsarrai": 26, "epochscor": [5, 8, 9, 10, 11, 68, 125], "epochscoring_1": [68, 125], "equal": [2, 8, 32, 80, 81, 82, 95, 101, 110, 118], "equival": 3, "eras": 38, "eric": 35, "erp": [92, 93], "error": [12, 22, 27, 30, 31, 82, 112, 118, 119, 120, 125, 141, 147], "error_scor": [4, 29, 30], "eskandarian": 94, "especi": [9, 30, 32], "estim": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32], "et": [10, 26, 73, 87, 88, 89, 91, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 109, 133], "etc": [14, 28, 30, 87, 115], "ethic": 73, "eval": [4, 30, 32, 147], "eval_i": [4, 30], "eval_set": [4, 30], "eval_x": [4, 30], "evalu": [2, 3, 4, 5, 8, 9, 10, 11, 14, 21, 27, 28, 30, 99, 106], "even": [11, 26, 29, 32, 68, 69, 109, 125], "event": [18, 19, 20, 21, 26, 27, 28, 29, 30, 32, 76, 82, 118, 119], "event_cod": [17, 19], "everi": [9, 10, 11, 12, 14, 18, 22, 29, 32, 73, 85, 86, 90, 94], "evok": [112, 113, 114, 117], "exact": 26, "exactli": 119, "exampl": [1, 2, 6, 8, 9, 10, 11, 13, 14, 15, 16, 22, 23, 25, 31, 33, 34, 37, 39, 40, 44, 45, 46, 47, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 117, 141, 146, 147], "exce": 111, "exceed": [82, 119], "except": [73, 76], "excess": 22, "exclud": [111, 113, 114, 117], "exclus": [29, 32], "execut": [6, 11, 12, 13, 14, 16, 17, 19, 23, 33, 34, 73, 124, 146], "exemplifi": 147, "exist": [16, 18, 22, 29, 31, 69, 71, 72, 79, 117, 124], "expand": [68, 109, 125], "expand_dim": 31, "expans": [86, 101], "expect": [5, 14, 26, 32, 68, 125], "expens": [14, 68, 125], "experi": [7, 14, 24, 29, 32, 69, 73], "expert": [9, 10, 11], "explain": [1, 4, 24, 27, 91], "explan": [2, 27, 123, 124], "explicit": [27, 133], "explicitli": [29, 32, 113, 114, 117], "explor": [5, 29], "exponent": [121, 122], "exponenti": [2, 3, 4, 8, 27, 28, 29, 30, 32, 109, 121, 122], "exponential_moving_standard": [2, 3, 4, 8, 27, 28, 29, 30, 32], "express": [3, 4, 26, 27, 28, 29, 32], "extra": [32, 147], "extra_param": 86, "extract": [2, 8, 12, 14, 16, 17, 19, 22, 27, 32, 79, 92, 93, 94, 101, 103, 105, 118, 119, 126, 128], "extractor": [5, 9, 10, 89, 103, 104, 105, 109], "f": [4, 5, 10, 11, 12, 14, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 44, 61, 75, 88, 92, 93, 98, 100, 102, 107, 140], "f1": [5, 9, 10, 11, 85, 97, 133], "f2": 97, "f3": 12, "f4": 12, "f7": 12, "f8": 12, "f811": [12, 22], "f_criterion": 5, "f_histori": 5, "f_optim": 5, "facebookresearch": [46, 63, 135], "facilit": [26, 147], "factor": [3, 4, 5, 9, 10, 12, 27, 28, 29, 30, 32, 99, 101, 105, 107, 109, 116], "factor_new": [2, 3, 4, 8, 27, 28, 29, 30, 32, 121, 122], "factornew": [121, 122], "fail": [5, 12], "fake": [24, 25, 26, 33, 71, 72, 88, 95, 102, 110, 118, 130, 138, 146, 147], "fake_data_split": 31, "fake_descript": 31, "fake_dur": 31, "fake_regression_dataset": 31, "fake_sfreq": 31, "fall": [82, 119], "fals": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 42, 46, 47, 48, 49, 50, 60, 64, 68, 69, 71, 72, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 90, 95, 99, 101, 102, 103, 104, 105, 106, 109, 111, 115, 117, 118, 119, 120, 123, 124, 125, 128, 129, 131, 132, 138, 140, 147], "familiar": 143, "far": [5, 128], "farrugia": 99, "fast": [14, 16, 32, 138], "faster": [10, 16, 27, 68, 116, 125], "fattouh": [2, 8, 147], "favor": 147, "favour": 147, "fc": [10, 105], "feat": 5, "feat_extractor": [9, 10], "featur": [5, 9, 10, 26, 29, 89, 90, 92, 93, 94, 95, 99, 101, 103, 104, 105, 109, 141, 145, 147], "feature_extractor": [9, 10], "feature_map": 99, "features1": 10, "features2": 10, "fed": [2, 27, 48, 49, 50, 99], "feed": [85, 105], "feed_forward": 10, "feedback": [5, 9, 10, 11, 70], "feel": [29, 32], "feet": [17, 18, 19, 21, 27, 28, 29, 30, 32, 70, 73], "femal": [12, 73], "female_df": 12, "fernandez": 103, "fetch": [17, 19, 20, 21, 70, 73, 74], "fetcher": 142, "few": [5, 9, 10, 11, 14, 16, 26, 147], "fewer": [109, 113], "fexion": 8, "fieder": [26, 27, 28, 29, 30, 31, 35, 88, 98, 100, 102, 140], "field": [2, 27, 68, 117, 125, 136], "fif": [14, 16, 18, 71, 83, 147], "fiff_unit_v": 26, "fiff_unitm_non": 26, "fiffv_coil_eeg": 26, "fiffv_coord_head": 26, "fiffv_eeg_ch": 26, "fig": [2, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 30, 31, 140], "figsiz": [2, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 31, 140], "figur": [12, 27, 28, 29, 70, 85, 140], "file": [5, 6, 12, 13, 14, 16, 17, 18, 19, 23, 26, 33, 34, 71, 76, 77, 78, 83, 111, 129, 141, 146, 147], "file_id": 129, "fileexistserror": 124, "fill": [26, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109], "filter": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 20, 26, 27, 28, 29, 30, 32, 37, 55, 70, 85, 88, 90, 92, 93, 94, 97, 102, 104, 106, 107, 109, 115, 116, 123, 147], "filter_data": 113, "filter_length": 113, "filter_length_2": [14, 88], "filter_length_3": [14, 88], "filter_length_4": [14, 88], "filter_time_length": [14, 26, 88, 90, 102], "filterbank": 147, "filtfilt": 113, "final": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 26, 27, 28, 29, 30, 32, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 122], "final_conv_length": [2, 3, 4, 8, 14, 26, 27, 28, 29, 30, 31, 32, 88, 96, 97, 102, 147], "final_fc_length": 90, "final_lay": [3, 4, 11, 26, 27, 28, 29, 32], "final_pool_length": [98, 147], "find": [2, 4, 8, 30], "fine": 30, "finer": [8, 147], "finger": [1, 6, 7, 13, 24, 69, 71, 73, 95, 102, 110, 115, 118, 120, 122, 124, 131, 132, 134, 138, 146, 147], "fir": [16, 113], "fir_design": 113, "fir_window": 113, "first": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 26, 27, 28, 30, 40, 52, 66, 68, 71, 75, 76, 77, 78, 85, 88, 90, 99, 102, 105, 113, 116, 117, 119, 125, 141, 145], "first_conv_nonlin": 88, "first_filter_length": 98, "first_pool_mod": [14, 88], "first_pool_nonlin": 88, "first_samp": 111, "firstli": [12, 21], "firwin": [16, 113], "firwin2": 113, "fit": [2, 3, 5, 8, 9, 10, 11, 14, 24, 26, 27, 28, 29, 30, 31, 32, 68, 119, 125], "fit_loop": 32, "fit_param": [4, 30, 125], "fit_transform": 5, "five": [12, 69], "fix": [3, 40, 57, 87, 101, 141, 147], "fix_init_weight_and_init_embed": 101, "fixat": 70, "flag": 147, "flake8": 147, "flat": [10, 19, 38, 56, 118, 119, 120], "flatten": [5, 9, 10, 11], "flexion": [1, 6, 7, 13, 24, 69, 71, 95, 102, 110, 115, 118, 120, 122, 124, 131, 132, 134, 138, 146, 147], "flip": [51, 53, 65, 67], "float": [3, 5, 26, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 68, 76, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 116, 119, 121, 122, 125, 135, 140], "float32": 22, "float64": [17, 19, 31], "fly": [2, 8, 28, 30, 72, 79, 147], "fmax": 3, "fmin": 3, "fmt": 30, "fn": [18, 115], "fname": 14, "fnin": 35, "focu": 4, "fold": [4, 30, 32], "folder": [14, 32, 69], "follow": [3, 4, 5, 9, 10, 11, 14, 26, 29, 32, 87, 92, 93, 99, 101, 113, 116, 119, 125, 143, 144, 145, 147], "font": 140, "font_scal": 29, "fontsiz": [2, 8, 12, 27, 28], "fontweight": 140, "foot": 70, "footcit": 117, "forc": 69, "force_upd": 69, "form": [26, 46, 63, 70, 71, 72, 79], "format": [4, 14, 17, 19, 26, 80, 81, 82], "former": [26, 68, 85, 86, 90, 94, 125], "fortun": 26, "forum": 138, "forward": [3, 4, 5, 11, 26, 27, 28, 29, 32, 41, 54, 68, 85, 86, 87, 89, 90, 94, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 113, 115, 117, 125, 130, 134, 136], "forward_featur": 101, "found": [2, 8, 10, 12, 16, 18, 19, 20, 21, 26, 27, 28, 29, 30, 32, 69, 117, 118, 119], "four": [5, 9, 47, 70, 73, 86], "fourier": [42, 60], "fp1": 12, "fp2": 12, "fpz": 10, "fr": [3, 4, 11], "fraction": [29, 31], "framework": [4, 86], "frank": 35, "free": [29, 32], "freedom": [29, 32], "freez": [9, 10, 147], "freiburg": 73, "freq": 3, "freq_idx": 86, "freq_shift": 3, "freqs_to_notch": [37, 55], "frequenc": [2, 3, 4, 8, 11, 12, 16, 17, 26, 27, 28, 29, 30, 31, 32, 37, 43, 55, 59, 73, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 116, 123, 126, 147], "frequency_band": 123, "frequencyshift": 3, "frequent": [9, 10, 11], "friendli": 147, "from": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 42, 46, 47, 48, 49, 50, 56, 58, 60, 64, 68, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 117, 118, 119, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 143, 146, 147], "front": 70, "frontier": [27, 28, 29, 30, 35, 75], "frontiersin": 35, "ft": [42, 60, 85], "ft_surrog": 147, "ftsurrog": 4, "full": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 138], "fulli": [11, 29, 30, 85, 90, 92, 93, 94], "function": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 20, 22, 26, 27, 28, 30, 31, 32, 35, 42, 54, 68, 71, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 109, 111, 115, 117, 119, 125, 131, 132, 133, 138, 147], "functool": 30, "fundament": [24, 25], "further": [2, 4, 5, 8, 9, 10, 11, 27, 29, 32, 68, 125], "furu": 101, "futur": [10, 19, 26, 30, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109], "futurewarn": [2, 26, 30, 31, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109], "fz": 12, "g": [3, 4, 5, 9, 10, 11, 14, 16, 26, 27, 28, 29, 30, 32, 37, 40, 42, 44, 52, 54, 55, 57, 60, 61, 68, 72, 75, 76, 77, 78, 79, 82, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 119, 123, 125, 129, 133, 140, 147], "galleri": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 146], "galtier": [5, 9, 10, 104], "gamma": 73, "gamma_1": 101, "gamma_2": 101, "gao": 90, "gaussian": [31, 44, 61], "gave": [4, 30], "gb": [9, 10, 11], "gca": 12, "gelu": 10, "gemein": [12, 17, 18, 19, 20, 21, 22, 31, 147], "gender": [12, 18, 22, 75, 77, 78], "gener": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 68, 95, 101, 103, 106, 113, 125, 133, 140, 147], "georg": 30, "get": [14, 16, 17, 22, 27, 28, 29, 32, 68, 101, 125], "get_augmentation_param": [37, 38, 39, 40, 42, 43, 44, 46, 47, 52, 54, 147], "get_center_label": [9, 10], "get_classifi": 101, "get_cmap": 5, "get_config": 27, "get_data": 17, "get_default_callback": [68, 125], "get_fc_siz": 90, "get_iter": [68, 125], "get_label": [2, 8, 27, 28], "get_legend_handles_label": 5, "get_loss": 68, "get_metadata": [5, 9, 10, 11, 27, 28, 29, 31, 71, 127], "get_num_lay": 101, "get_output_shap": [2, 27, 31, 95, 147], "get_param": 147, "get_posit": [47, 64], "get_torchinfo_statist": 95, "get_ylim": [27, 28], "gh": 147, "ghaith": 147, "gillmeist": 91, "gilmer": 30, "git": 145, "github": [4, 30, 86, 87, 99, 101, 141, 143, 147], "give": [10, 12, 22, 26, 47, 64, 113, 141], "given": [3, 4, 5, 21, 32, 38, 39, 40, 42, 51, 53, 54, 68, 69, 83, 113, 114, 117, 125, 136, 147], "gizzi": 86, "glass": [5, 9, 10, 11], "glasstett": [26, 27, 28, 29, 30, 31, 35, 88, 98, 100, 102, 140], "global": [68, 99, 125, 133], "glossari": [2, 4, 8], "gmail": [2, 5, 8, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31], "gnassoun": [11, 147], "go": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 111], "goal": [32, 92, 93, 94], "godbol": 30, "goe": 16, "goh": [37, 44, 52, 55, 61, 66], "goj": 35, "goldberg": [5, 9, 10, 11], "good": [2, 8, 26, 27, 28], "googl": 30, "gordon": [96, 97], "got": 30, "gpu": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 32, 68, 125, 144, 147], "gradient": [27, 147], "gradiomet": 3, "grai": 73, "gramfort": [4, 5, 9, 10, 35, 104, 128, 147], "grangier": [38, 39, 56, 58], "greater": [37, 55], "green": 12, "grid": [29, 30], "gridsearchcv": [4, 29, 30, 133, 147], "gridsearchcvifittedgridsearchcv": 4, "grifcc": [92, 93], "gripon": 99, "ground": [31, 70, 73], "group": 103, "groupbi": 16, "growth": 107, "gt": 4, "guarante": [91, 92, 93, 94, 96, 97], "guetschel": [26, 147], "guid": [22, 29, 144], "guidelin": 145, "guo": 89, "h": [2, 4, 5, 8, 27, 28, 37, 40, 44, 52, 55, 57, 61, 66, 75, 85, 89, 91, 128], "h_freq": [2, 3, 4, 5, 8, 9, 10, 16, 27, 28, 29, 30, 32, 113], "h_trans_bandwidth": 113, "ha": [2, 3, 4, 5, 8, 10, 12, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 48, 49, 50, 68, 71, 72, 76, 79, 82, 91, 92, 93, 94, 96, 97, 109, 113, 119, 124, 125, 135, 141, 147], "hac": [9, 10, 11], "had": [73, 92, 93, 95], "half": [104, 113], "halv": 109, "ham": [16, 113], "hamlet": [40, 57], "hand": [17, 19, 24, 28, 30, 70, 73], "handl": [2, 3, 4, 8, 27, 28, 30, 117], "hangbo": 101, "hann": 113, "happen": [141, 147], "hard": 141, "hardwar": [14, 16], "hausdorff": [5, 9, 10, 11], "have": [2, 4, 5, 8, 11, 12, 14, 16, 17, 19, 21, 26, 27, 28, 29, 30, 32, 47, 52, 64, 66, 68, 80, 81, 82, 94, 99, 101, 115, 117, 118, 125, 133, 141, 144, 145, 147], "hbm": [26, 27, 28, 29, 30, 35, 88, 98, 100, 102, 140], "hbm23730": 35, "he": [9, 10, 11], "head": [85, 87, 90, 101, 105, 127], "head_dim": 101, "health": [37, 44, 52, 55, 61, 66, 87], "healthi": [73, 75, 76], "heart": 87, "heatmap": 30, "heavi": 140, "height": [12, 29], "held": [9, 10], "help": [5, 9, 10, 21, 117], "helper": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31], "henrik": 147, "here": [2, 3, 4, 5, 8, 10, 11, 12, 21, 22, 24, 26, 27, 28, 29, 30, 32, 43, 59, 75, 82, 87, 94, 119], "heterogen": [38, 39, 56, 58], "high": [2, 3, 4, 8, 11, 27, 28, 29, 30, 32, 37, 55, 73, 92, 93, 109, 113, 126], "high_cut_hz": [2, 3, 4, 5, 8, 9, 10, 27, 28, 29, 30, 32], "higher": [2, 5, 8, 32, 105], "highli": 29, "hint": 147, "hist": 12, "histori": [2, 5, 8, 9, 10, 11, 27, 28, 31, 68, 125], "hold": [18, 71, 72, 79, 118, 119], "holdout": 29, "home": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32], "hongyi": [46, 63, 135], "honor": [68, 125], "hook": [85, 86, 90, 94, 147], "hop_length": 87, "horizont": 12, "horizontalalign": 29, "hornero": [92, 93], "hospit": [12, 77, 78, 147], "host": 27, "how": [2, 3, 4, 5, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 68, 71, 74, 95, 102, 111, 115, 117, 119, 122, 124, 125, 138, 146, 147], "howev": [2, 3, 4, 5, 8, 11, 14, 16, 21, 26, 27, 28, 29, 119], "hpu": 32, "hspace": 12, "html": [2, 4, 5, 8, 12, 26, 27, 68, 76, 77, 78, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 106, 107, 109, 125, 138, 140, 147], "http": [2, 4, 5, 8, 12, 26, 27, 28, 29, 30, 35, 46, 63, 68, 69, 76, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 105, 106, 107, 109, 125, 135, 138, 140, 145], "hubert": [5, 9, 14, 16, 20, 147], "hue": 14, "hum": [27, 28, 29, 30], "human": [2, 8, 26, 31, 35, 40, 57, 69, 88, 98, 100, 102, 113, 140], "hung": [96, 97], "hutter": [26, 27, 28, 29, 30, 35, 88, 98, 100, 102, 140], "hybrid": 100, "hybridnet": 26, "hyeperparamet": 30, "hyperparamet": [2, 5, 8, 9, 10, 11, 14, 24, 25, 27, 28, 32, 33, 46, 68, 71, 74, 95, 99, 102, 115, 119, 122, 124, 125, 138, 146, 147], "hypnogram": [9, 10, 11], "hyv\u00e4rinen": [4, 5, 128], "hz": [2, 3, 4, 5, 8, 9, 11, 16, 27, 29, 30, 31, 37, 43, 55, 59, 70, 85, 90, 94, 109, 113], "h\u00e4m\u00e4l\u00e4inen": 35, "i": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 26, 27, 28, 30, 31, 35, 37, 41, 42, 43, 46, 47, 52, 54, 55, 59, 60, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 115, 116, 117, 118, 119, 124, 125, 128, 133, 137, 138, 142, 143, 144, 147], "i_class": [27, 28], "i_start_in_tri": [79, 127], "i_stop_in_tri": [79, 127, 137], "i_window_in_tri": [79, 127, 137], "iclr": [46, 63, 101], "id": [12, 18, 20, 21, 27, 28, 29, 30, 32, 71, 75, 77, 78, 83, 118, 119, 124, 147], "ideal": 73, "ident": [9, 11, 32, 45, 68, 88, 125], "identifi": [9, 10, 11, 82, 119], "ids_to_load": [18, 83], "idx": [3, 4, 9, 10, 11, 26, 27, 28, 29, 30, 32], "idx_perm": [46, 63], "idx_train": 8, "idx_valid": 8, "ie": 118, "ieee": [5, 9, 10, 11, 47, 48, 49, 50, 64, 85, 89, 90, 91, 92, 93, 104, 105], "ieeexplor": 90, "igel": [11, 109, 126], "ignor": [2, 4, 8, 52, 68, 85, 86, 90, 94, 112, 115, 118, 119, 125, 128], "ii": 29, "iia": 70, "iir": 113, "iir_param": 113, "ill": 10, "illustr": [3, 29], "illutr": 3, "imag": [70, 92, 93, 101], "imageri": [4, 70, 85, 86, 91, 94, 99, 147], "imagin": [17, 19], "imbal": [42, 60, 76], "imbalanc": [9, 10, 11], "impact": [14, 27, 30], "implement": [9, 10, 14, 16, 26, 29, 46, 54, 63, 68, 85, 91, 92, 93, 94, 96, 97, 101, 125, 135, 136, 142, 147], "implicitli": [27, 29, 32], "import": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 42, 60, 141, 145], "impos": 85, "imposs": 14, "improv": [2, 3, 5, 8, 9, 10, 11, 32, 113, 141, 147], "in_chan": [11, 26, 31, 88, 96, 97, 98, 100, 102, 107, 109, 110], "in_channel": [91, 92, 93, 94, 101], "in_featur": [9, 10], "inat": 70, "incept": [91, 92, 93, 94, 147], "inceptionnet": [92, 93, 94], "includ": [9, 11, 12, 14, 28, 29, 30, 32, 39, 58, 74, 99, 111, 113, 114, 118, 119, 141, 142], "include_tmax": [12, 111], "incom": [68, 125], "incompat": 147, "incomplet": 12, "inconsist": 119, "incorrect": 147, "increas": [2, 3, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 32, 94, 105, 147], "ind": 22, "ind1": 5, "ind2": 5, "inde": 4, "independ": [29, 32, 42, 60, 113, 147], "indetermin": [2, 3, 4, 5, 8, 9, 11, 27, 28], "index": [2, 5, 8, 9, 10, 11, 17, 27, 28, 30, 31, 72, 111, 121, 122, 126, 127, 137, 143], "indic": [5, 9, 10, 21, 31, 46, 63, 71, 113, 114, 117, 127, 128, 129, 147], "indices_": 29, "individu": [9, 10, 11, 12, 26, 27, 68, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 125, 147], "industri": 85, "inf": 12, "infer": [26, 29, 30, 68, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 119, 125, 133], "infin": 117, "info": [2, 3, 4, 8, 12, 14, 16, 17, 19, 20, 21, 26, 27, 28, 29, 30, 32, 71, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 114, 117, 127, 129, 141, 147], "inform": [3, 4, 12, 14, 17, 18, 20, 26, 29, 30, 42, 60, 68, 71, 79, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 125, 127, 145], "informat": 85, "inherit": [8, 9, 10, 11, 26, 28, 30, 68, 125], "init_block_s": [2, 3, 4, 8, 27, 28, 29, 30, 32, 121, 122], "init_scal": 101, "init_valu": 101, "initi": [3, 5, 9, 10, 11, 26, 29, 30, 32, 68, 90, 92, 93, 101, 109, 125], "initialis": [30, 125], "initialized_": [68, 125], "initialz": [68, 125], "inplac": [9, 10, 16], "input": [2, 3, 4, 8, 10, 11, 14, 21, 26, 27, 28, 29, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 125, 147], "input_chan": 101, "input_s": 95, "input_size_": [85, 103, 104, 105, 109], "input_size_sampl": [5, 9, 10, 11], "input_window_": 94, "input_window_sampl": [2, 3, 4, 8, 14, 26, 27, 28, 29, 30, 31, 32, 88, 90, 91, 92, 93, 96, 97, 98, 100, 102, 107, 110], "input_window_second": [26, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 125], "inria": [3, 4, 11], "insecurerequestwarn": 27, "insert": [12, 22, 95], "insid": [4, 29, 30, 92, 93, 145], "insight": 5, "inspir": [101, 126], "inst": [20, 112, 113, 114, 117], "instal": [32, 68, 113, 116, 125, 147], "instanc": [5, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 61, 68, 85, 86, 90, 94, 111, 112, 113, 114, 117, 125, 127, 147], "instanti": [2, 3, 4, 8, 14, 26, 27, 28, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 61, 68, 74, 125, 147], "instead": [3, 4, 5, 8, 22, 27, 28, 29, 30, 31, 32, 68, 85, 86, 90, 92, 94, 95, 117, 125, 147], "instruct": 143, "int": [3, 4, 5, 9, 10, 14, 16, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 136, 138, 140], "integ": [21, 22, 27, 28, 40, 52, 57, 66, 71, 113, 114, 124], "integr": [9, 10, 32, 147], "intens": [4, 99], "inter": [70, 73], "interest": [5, 12, 22, 26], "interfac": [32, 35, 92, 93, 96, 97], "intermedi": 95, "intern": [11, 14, 16, 20, 21, 44, 46, 47, 48, 49, 50, 61, 63, 64, 101, 115], "interpol": [46, 47, 48, 49, 50, 63, 64], "interpret": [35, 40, 57, 113, 114, 125], "interquartil": 11, "interrupt": [68, 125], "interv": [32, 73, 119, 147], "introduc": [5, 9, 10, 11, 14, 15, 24, 25, 27, 31], "invari": [107, 147], "invas": 73, "invert": 40, "invert_xaxi": 12, "invert_yaxi": 29, "investig": 26, "io": [17, 19, 27, 72, 111, 113, 123], "ioven": 147, "ipu": 32, "ipynb": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32], "irregular": 141, "is_abbrev": [3, 4, 18, 20, 21, 29, 30], "is_avail": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32], "isinst": [9, 10], "isip": [12, 14, 77, 78], "isnan": 2, "isotrak": 16, "issn": 35, "issu": [14, 16, 141, 147], "issubset": 12, "item": [5, 14, 19, 20, 26, 27, 28, 32], "iter": [3, 4, 5, 20, 22, 46, 68, 95, 112, 125, 136], "iterator_test": [68, 125], "iterator_test__batch_s": [68, 125], "iterator_train": [3, 4, 68, 125], "iterator_train__batch_s": [68, 125], "iterator_train__drop_last": [68, 125, 147], "iterator_train__num_work": 5, "iterator_train__sampl": [5, 9, 10, 11], "iterator_train__shuffl": [2, 5, 9, 10, 11, 27, 31, 68, 125], "iterator_train__transform": [3, 4], "iterator_valid": [68, 125], "iterator_valid__num_work": 5, "iterator_valid__sampl": [5, 9, 10, 11], "itertool": [14, 16], "itnet": [91, 147], "its": [3, 4, 9, 10, 16, 18, 20, 21, 26, 29, 30, 31, 68, 71, 115, 124, 125], "itself": [14, 29, 30, 141], "iv": [1, 6, 7, 13, 20, 21, 24, 25, 26, 28, 29, 30, 32, 33, 36, 38, 41, 42, 43, 51, 52, 54, 69, 71, 74, 85, 94, 95, 102, 110, 115, 118, 119, 120, 122, 124, 130, 131, 132, 134, 138, 140, 146, 147], "ivanov": [5, 9, 10, 11], "izadi": [37, 44, 52, 55, 61, 66], "j": [2, 4, 5, 8, 26, 27, 28, 29, 30, 31, 37, 40, 42, 44, 52, 55, 57, 60, 61, 66, 69, 86, 87, 88, 91, 96, 97, 98, 100, 102, 104, 106, 107, 140], "ja": 35, "jankauska": 147, "javad": 147, "jayaram": [28, 29, 30], "jbanvil": [5, 9, 14, 16, 20], "je": [9, 10, 11], "jennum": [11, 109, 126], "jiang": [44, 61, 101], "jiang2024": 101, "jimmi": 31, "jin": [40, 57], "jjl": [9, 10, 11], "jm": [9, 10, 11], "job": [12, 68, 77, 78, 83, 113, 116, 118, 119, 124, 125], "joblib": [16, 124], "joint": 117, "jointli": 29, "josef": 35, "jost": 35, "journal": [4, 28, 29, 30, 35, 94], "json": [18, 71, 83, 147], "jupyt": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32], "just": [2, 4, 8, 22, 26, 28, 29, 30, 68, 88, 102, 125], "justin": 30, "k": [3, 5, 9, 10, 11, 26, 27, 28, 30, 31, 32, 37, 44, 47, 48, 49, 50, 52, 55, 61, 64, 66, 88, 94, 98, 100, 102, 140], "kai": [2, 8, 69], "kale": 31, "kamboh": 75, "kamphuisen": [5, 9, 10, 11], "katharina": 35, "kathrin": 147, "kc": 85, "keep": [3, 4, 10, 11, 16, 27, 28, 29, 30, 32, 73, 76, 147], "kei": [21, 26, 27, 28, 71, 72, 79, 101, 118, 119], "kemp": [5, 9, 10, 11], "kempfner": [11, 109, 126], "kept": [29, 32], "kernel": [3, 4, 11, 26, 27, 28, 29, 30, 32, 47, 48, 49, 50, 64, 85, 93, 94, 99, 103, 104, 106, 109], "kernel_length": 97, "kernel_s": [9, 10, 86, 95, 99, 106, 147], "kernel_unit_": 94, "keyboard": [68, 125], "keyword": [35, 36, 74, 111, 113, 114, 115, 116, 117, 123], "kfold": [4, 29, 30], "khan": 75, "khan2022": 75, "kiessner": 147, "kim": [47, 48, 49, 50, 64, 94], "kind": [14, 26], "kingma": 31, "know": [2, 3, 4, 26, 27], "known": [4, 68], "kolter": 106, "koltun": 106, "kosta": 107, "krell": [47, 48, 49, 50, 64], "kt": 85, "kumar": 31, "kv": [27, 28], "kwarg": [36, 68, 95, 115, 125, 131, 132, 133], "l": [5, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 85, 86, 88, 98, 100, 102, 109, 126, 140], "l2": [5, 85], "l_freq": [2, 3, 4, 5, 8, 9, 10, 16, 27, 28, 29, 30, 32, 113], "l_trans_bandwidth": 113, "lab": 73, "label": [2, 3, 5, 8, 9, 10, 11, 12, 16, 22, 26, 27, 28, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 108, 125, 128, 130, 134, 136, 140], "label_dict": [27, 28], "labelcolor": [2, 5, 8, 27, 28], "labelpad": 12, "labels": [2, 8, 12, 27, 28], "labels1": 5, "labels2": 5, "labram": [26, 147], "lack": 138, "lam": [46, 63], "lambda": [2, 3, 4, 5, 8, 9, 10, 12, 27, 28, 29, 30, 32, 68, 98, 125], "lampx": 27, "lan": [9, 10, 11], "lanc": [96, 97], "languag": 87, "larg": [2, 5, 14, 16, 26, 27, 71, 87, 101, 119, 124], "larger": [2, 5, 27, 92, 93], "largest": [92, 93], "larson": 35, "last": [5, 22, 27, 31, 32, 52, 66, 73, 76, 80, 81, 82, 85, 90, 113, 116, 118, 119, 147], "last_samp": 111, "last_target_onli": [2, 8, 79, 118, 120], "latenc": 99, "later": [5, 12, 22, 72, 73, 75, 77, 78, 88], "later_conv_nonlin": 88, "later_pool_mod": [14, 88], "later_pool_nonlin": 88, "latest": [141, 144, 145], "latter": [85, 86, 90, 94], "lauri": 35, "lawhern": [96, 97], "layer": [3, 4, 5, 9, 10, 11, 26, 27, 28, 29, 30, 31, 32, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 147], "layernorm": [10, 101], "lazi": [12, 15, 16, 23, 24, 78, 88, 102, 118, 146, 147], "lazy_vs_eager_loading_result": 14, "lbfg": 5, "lead": [27, 29, 68, 117, 125], "leakag": [29, 32], "learn": [1, 2, 3, 4, 6, 8, 9, 10, 11, 24, 25, 27, 28, 29, 31, 32, 33, 35, 37, 38, 39, 40, 44, 46, 52, 55, 56, 57, 58, 61, 63, 66, 68, 71, 74, 76, 87, 88, 92, 93, 95, 98, 99, 100, 101, 102, 104, 105, 115, 119, 122, 124, 125, 127, 128, 138, 140, 142, 144, 146, 147], "learnabl": [29, 101], "learning_r": 30, "least": [12, 113, 127, 128, 137], "leav": [29, 147], "leeb": [27, 28, 29, 30], "left": [12, 27, 28, 29, 40, 68, 70, 73, 125], "left_hand": [18, 21, 27, 28, 29, 30, 32], "leftward": 73, "legaci": 20, "legend": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 31], "len": [5, 8, 9, 10, 11, 12, 14, 17, 20, 22, 29, 32, 73, 123], "len_last_lay": [9, 10], "length": [8, 9, 11, 12, 14, 16, 26, 27, 30, 46, 63, 71, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 113, 118, 119, 147], "less": [5, 27, 29, 32], "let": [3, 4, 22, 26], "level": [5, 9, 10, 22, 69, 111, 113, 114, 116, 117, 147], "leverag": [5, 105], "lfilter": 113, "li": 101, "liang": 101, "lib": [2, 5, 10, 11, 27, 31, 32], "librari": [2, 3, 4, 8, 24, 26, 28, 29, 30, 35, 69, 145], "licens": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31], "light": [11, 140], "lightning_log": 32, "lightningmodul": 32, "like": [2, 8, 16, 26, 28, 29, 30, 32, 37, 42, 47, 55, 60, 64, 68, 80, 81, 82, 105, 113, 114, 125, 127, 145, 147], "likelihood": [27, 68], "limit": [2, 5, 8, 11, 12, 16, 26, 111], "line": [2, 8, 14, 27, 28, 31, 70, 141], "line2d": [2, 8, 27, 28], "linear": [5, 9, 10, 26, 30, 46, 63, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113], "linear_model": 5, "linearattentiontransform": 87, "linearsegmentedcolormap": 140, "lines1": 5, "lines2": 5, "linestyl": [2, 8, 12, 27, 28], "linewidth": [2, 8, 27, 28], "link": [141, 147], "linspac": [4, 12], "lioi": 99, "list": [3, 5, 11, 14, 16, 21, 22, 26, 27, 28, 29, 31, 32, 35, 36, 40, 41, 48, 49, 50, 57, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 113, 114, 117, 118, 119, 123, 124, 125, 135, 137, 140, 147], "list_of_d": [5, 71], "list_of_epoch": [19, 81], "lit_model": 32, "litmodul": 32, "littl": 73, "liu": [44, 61, 90], "ll": 22, "load": [12, 16, 17, 19, 22, 23, 69, 71, 74, 76, 78, 83, 88, 102, 115, 118, 119, 124, 146, 147], "load_concat_dataset": [18, 147], "load_data": [17, 19, 74], "load_eeg_onli": 76, "load_example_data": 14, "load_param": 5, "load_state_dict": 95, "loader": [3, 4, 5, 14, 32], "loc": [2, 8, 12, 26, 27, 28, 29], "local": [2, 5, 10, 11, 14, 27, 31, 32, 69, 117, 141, 145], "locat": [27, 69], "locuslab": 106, "log": [22, 26, 27, 32, 68, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 106, 107, 109, 111, 113, 114, 116, 117, 118, 119, 125, 147], "log10": 3, "log_dict": 32, "log_every_n_step": 32, "log_reg": 5, "logger": 32, "logger_connector": 32, "logic": [8, 9, 10, 11, 28, 30, 32], "logist": 5, "logisticregress": 5, "logit": 85, "logno": 26, "logsoftmax": [3, 4, 26, 27, 28, 29, 30, 32, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 147], "long": [8, 14, 29, 30, 73, 89], "longer": [29, 32, 68, 125], "look": [11, 12, 17, 22, 26, 29, 69, 127], "loop": [5, 9, 10, 11, 14, 68, 125], "lope": 147, "lopez": [46, 63, 135], "loss": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 32, 68, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 106, 107, 109, 125, 130, 134, 135], "loss_fn": 32, "loss_funct": [130, 134], "loss_val": 14, "lot": [9, 10, 11, 68, 125], "low": [2, 3, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 30, 32, 37, 55, 92, 93, 99, 113], "low_cut_hz": [2, 3, 4, 8, 27, 28, 29, 30, 32], "lower": [5, 9, 12, 29, 32, 37, 55, 113, 133], "lower_is_bett": [2, 5, 8, 9, 10, 11, 131, 132, 133], "lowest": 5, "lowpass": [5, 9, 10, 16], "lr": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 68, 125], "lr_schedul": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "lrschedul": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "lt": 4, "lu": 101, "luessi": 35, "luka": [12, 17, 18, 19, 20, 21, 22, 31, 35, 147], "m": [3, 4, 5, 9, 10, 11, 12, 16, 22, 26, 27, 28, 29, 30, 31, 32, 37, 40, 44, 47, 48, 49, 50, 52, 55, 57, 61, 64, 66, 75, 85, 86, 87, 88, 96, 97, 98, 100, 102, 104, 109, 113, 126, 140, 145], "m1": 117, "m2": 117, "m_": [121, 122], "m_t": [121, 122], "machin": [12, 14, 16, 29, 32, 35, 37, 40, 44, 52, 55, 57, 61, 66, 68, 125], "maciej": [2, 8, 147], "maciek": [2, 8], "macro": [5, 9, 10, 11], "made": [16, 27, 94, 147], "mae": [37, 44, 52, 55, 61, 66], "magnitud": [42, 52], "mai": [2, 3, 4, 5, 8, 9, 10, 11, 16, 18, 19, 27, 28, 29, 32, 35, 68, 101, 125, 133, 138, 141], "main": [5, 92, 93, 94], "mainak": 35, "maintain": 73, "make": [2, 3, 4, 5, 8, 9, 11, 12, 27, 28, 29, 30, 32, 105, 113, 141, 147], "make_pipelin": 5, "make_standard_montag": [47, 64], "male": 12, "male_df": 12, "manag": [8, 9, 10, 11, 28, 30, 31], "mandatori": 4, "mani": [2, 4, 5, 8, 16, 26, 27, 29, 32, 71], "manipul": 17, "manual": [26, 27, 29, 144], "map": [5, 9, 10, 11, 22, 26, 27, 28, 29, 30, 31, 35, 68, 82, 85, 88, 98, 99, 100, 102, 108, 118, 119, 125, 140], "marco": 147, "mark": [5, 9, 10, 11], "marker": [2, 5, 8, 16, 27, 28], "martin": [35, 147], "martin2023": 86, "martincod": 86, "martinez": [92, 93], "martinwimpff": 86, "mask": [2, 5, 52, 66, 101, 134], "mask_len_sampl": [4, 52, 66], "mask_start_per_sampl": [52, 66], "mass": 9, "master": 145, "mastoid": [70, 117], "match": [16, 18, 19, 26, 30, 71, 85], "mathemat": 27, "mathrm": [121, 122], "matplotlib": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 31, 140], "matplotlibdeprecationwarn": 5, "matric": [27, 28, 48, 49, 50, 68, 125], "matrix": [5, 9, 10, 11, 39, 40, 47, 57, 58, 64, 90, 99, 140, 147], "matter": [29, 32, 75, 77, 78], "matthieu": 147, "matti": 35, "max": [14, 16, 26, 29, 88, 96, 99, 102, 104, 107, 109, 113, 122], "max_degre": [47, 48, 49, 50], "max_delta_freq": [3, 43], "max_epoch": [5, 29, 32, 68, 125], "max_freq": 37, "max_it": 5, "max_mem": 16, "max_norm_const": 85, "max_pool_s": 103, "max_pool_size_": 104, "maxim": [9, 10, 30, 37], "maximum": [43, 47, 48, 49, 50, 85, 118], "maxpool": [11, 109], "maxpool1d": [10, 11], "maxpool2d": 9, "mb": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 146], "mean": [2, 3, 4, 8, 10, 12, 14, 16, 19, 26, 27, 29, 30, 31, 32, 73, 88, 97, 101, 102, 117, 121, 122, 125, 141], "mean_test_scor": [4, 30], "mean_train_scor": [4, 30], "meaning": 29, "measur": 16, "mechan": [86, 105, 147], "med": [11, 109, 126], "median": 11, "medicin": [47, 48, 49, 50, 64], "meg": [3, 4, 20, 27, 28, 29, 30, 32, 35, 113, 114, 142], "meg0111": [113, 114], "meg2623": [113, 114], "mehr": [27, 28, 29, 30], "mem": [6, 13, 16, 23, 33, 34, 146], "memor": [29, 32], "memori": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 68, 119, 125], "memory_profil": 16, "memory_usag": 16, "mention": [26, 29], "merg": [5, 9, 10, 11, 147], "messag": [12, 14, 22, 141], "messi": 29, "metadata": [19, 26, 71, 79, 118, 125, 126, 127, 128, 129], "method": [2, 4, 5, 8, 12, 16, 21, 26, 29, 31, 32, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 68, 69, 71, 72, 74, 79, 85, 86, 87, 89, 90, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 117, 125, 126, 127, 128, 130, 131, 132, 133, 134, 147], "methodolog": [86, 90, 99], "methodologi": 4, "metric": [2, 5, 9, 10, 11, 27, 28, 32, 140], "mi": [2, 8, 99], "mib": 16, "michael": 35, "micro": 12, "microcontinu": [5, 9, 10, 11], "microvolt": [5, 9, 10], "middl": 108, "mietu": [9, 10, 11], "might": [5, 14, 16, 26, 29, 30, 32, 119, 127], "miller": [2, 8, 27, 28, 29, 30, 69], "min": [5, 12, 29, 76, 113], "ming": 101, "mini": [68, 125], "minibatch": 14, "minim": [31, 46, 63, 135, 141], "minimum": 113, "minor": 5, "minut": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 76], "mirror": [113, 116], "misc": [2, 4, 8, 79], "misclass": [27, 28], "misclassif": [27, 28], "mismatch": 147, "miss": [26, 32, 85, 86, 87, 90, 92, 94, 96, 97, 98, 99, 100, 103, 109, 147], "mistak": 141, "mix": [16, 18, 46, 63, 135], "mixin": 95, "mixup": [135, 147], "mkdtemp": [12, 18], "ml": [29, 32], "mlp": 101, "mlp_ratio": 101, "mne": [2, 3, 4, 8, 9, 10, 11, 12, 14, 15, 17, 18, 20, 22, 23, 24, 25, 28, 30, 33, 47, 64, 69, 71, 72, 76, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 125, 141, 146, 147], "mne_data": [16, 17, 19, 27, 69], "mne_datasets_": 69, "mne_datasets_bnci_path": 27, "mne_filter_kwarg": 123, "mnepreproc": 147, "mo": [2, 8], "moabb": [3, 4, 15, 18, 21, 23, 24, 27, 28, 29, 30, 32, 70, 71, 73, 74, 115, 124, 144, 145, 146, 147], "moabbdataset": [3, 4, 18, 20, 21, 27, 28, 29, 30, 32, 147], "mock": [12, 22], "mode": [2, 24, 32, 68, 88, 101, 113, 116, 125, 133, 145, 147], "model": [12, 14, 21, 33, 35, 44, 61, 68, 71, 72, 74, 75, 115, 118, 119, 122, 124, 125, 130, 131, 132, 133, 134, 135, 136, 138, 139, 142, 146, 147], "model_build": [30, 32, 33, 146], "model_evalu": [68, 125], "model_kind": 14, "model_nam": 31, "model_select": [4, 5, 8, 29, 30], "model_train": 14, "model_training_end": 14, "model_training_start": 14, "models_dict": [26, 68, 125, 147], "modelstatist": 95, "modif": 101, "modifi": [3, 5, 10, 12, 42, 60, 68, 86, 95, 111, 112, 114, 115, 123, 125, 138], "modul": [2, 4, 5, 8, 9, 10, 11, 14, 26, 28, 30, 32, 68, 85, 86, 87, 90, 92, 93, 94, 101, 105, 108, 125, 136, 138, 140, 144, 147], "module_": [3, 9, 10, 11, 26, 68, 125], "module__": 26, "module__drop_prob": 30, "module__final_conv_length": 26, "modulelist": 10, "moham": [2, 8, 147], "mohammad": 147, "mohsenvand": [37, 44, 52, 55, 61, 66], "momentum": [10, 26, 88, 92, 93, 102], "monopolarli": 70, "montag": [48, 49, 50, 70, 77, 78, 147], "month": [12, 35], "moodi": [9, 10, 11], "more": [1, 2, 3, 4, 5, 8, 9, 10, 11, 16, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 68, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 116, 117, 124, 125, 138, 145, 147], "moreau": [4, 147], "most": [3, 9, 10, 11, 14, 128, 141, 144], "mostli": 27, "motor": [2, 4, 8, 27, 28, 70, 73, 85, 86, 91, 94, 99, 147], "moustapha": [46, 63, 135], "move": [2, 3, 4, 8, 14, 16, 27, 28, 29, 30, 32, 69, 95, 121, 122, 147], "movement": [70, 73], "mrcnn": 105, "mse": 31, "mse_loss": [2, 31], "mseloss": [8, 125], "msg": [2, 31], "much": [5, 27, 68, 116, 125], "mueller": [27, 28, 29, 30], "muhammad": 85, "mult": [3, 4, 11, 26, 27, 28, 29, 32], "multi": 105, "multi_class": 5, "multiclass": 32, "multiindex": 127, "multimedia": [44, 61], "multimod": [5, 9, 10, 104], "multinomi": 5, "multipl": [2, 3, 4, 8, 9, 10, 14, 15, 16, 21, 23, 24, 27, 29, 30, 68, 71, 77, 94, 108, 109, 113, 117, 118, 123, 125, 136, 146, 147], "multipli": [3, 4, 5, 9, 10, 12, 27, 28, 29, 30, 32, 85, 92, 93], "multitap": 3, "multivari": [5, 9, 10, 104], "muscular": 73, "must": [3, 4, 12, 14, 16, 18, 20, 21, 26, 29, 30, 79, 88, 102, 103, 108, 111, 115, 117, 118, 126, 144, 147], "m\u00fcller": [27, 28, 29, 30], "n": [14, 16, 22, 26, 27, 28, 29, 30, 32, 34, 37, 38, 39, 44, 46, 52, 55, 56, 58, 61, 63, 66, 85, 87, 96, 97, 99, 104, 135], "n1": [5, 9, 10, 11], "n2": [5, 9, 10, 11], "n3": [5, 9, 10, 11], "n4": 10, "n_attn_head": 105, "n_batch": [32, 130, 134], "n_block": 106, "n_chan": [2, 8, 11, 26, 27, 28, 30, 31, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 125], "n_channel": [3, 4, 5, 9, 10, 14, 17, 19, 22, 29, 31, 32, 46, 47, 63, 64, 80, 85, 87, 89, 90, 99, 100, 103, 104, 105, 106, 107, 108, 121, 122], "n_class": [2, 3, 4, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 32, 68, 85, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 102, 103, 104, 105, 107, 109, 125, 130, 134, 136], "n_codeword": 86, "n_compon": 5, "n_conv": [94, 99], "n_conv_ch": [5, 104], "n_conv_chan": 103, "n_epoch": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32], "n_exampl": [5, 128], "n_examples_test": 5, "n_examples_train": 5, "n_examples_valid": 5, "n_fake_ch": 31, "n_fake_chan": 31, "n_fake_rec": 31, "n_fake_target": 31, "n_filter": [92, 93, 94, 106], "n_filters_2": [14, 31, 88], "n_filters_3": [14, 31, 88], "n_filters_4": [14, 31, 88], "n_filters_spat": [14, 26, 31, 88, 102], "n_filters_tim": [14, 26, 31, 88, 90, 102], "n_first_filt": 98, "n_group": 103, "n_in_chan": 106, "n_iter_i": 5, "n_job": [2, 3, 4, 5, 12, 14, 16, 27, 28, 29, 30, 32, 75, 77, 78, 83, 113, 116, 118, 119, 120, 124, 147], "n_layer": [87, 101], "n_layers_per_block": 98, "n_out_chan": 8, "n_output": [5, 9, 10, 11, 26, 31, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 125], "n_patch": 101, "n_predict": [68, 125, 130, 134, 136], "n_preds_per_input": [2, 27, 31], "n_rec": 16, "n_record": [14, 127], "n_repet": 16, "n_repetit": 14, "n_sequenc": [126, 129], "n_split": [4, 29, 30], "n_target": [68, 125, 136], "n_tce": 105, "n_temporal_filt": 86, "n_test": 29, "n_time": [3, 4, 5, 8, 9, 10, 11, 12, 14, 17, 19, 26, 27, 28, 29, 30, 31, 32, 46, 63, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 121, 122, 125, 130, 134], "n_time_filt": 109, "n_timestep": [90, 99], "n_train": 29, "n_train2": 29, "n_trial": [68, 80, 125, 136], "n_val": 29, "n_window": [9, 10, 11, 22, 85, 126, 129], "n_windows_strid": [9, 10, 11, 129], "nado": 30, "name": [0, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 20, 21, 22, 26, 29, 30, 32, 40, 68, 70, 71, 72, 73, 74, 80, 83, 112, 113, 114, 115, 117, 125, 131, 132, 133, 147], "nan": [26, 134], "narayanan": [10, 147], "nativ": 11, "natur": [2, 8, 14, 69], "nbsp": 4, "nbviewer": 4, "ncol": 29, "ndarrai": [22, 47, 64, 68, 80, 116, 121, 122, 125, 129, 136, 137], "ndataset": 29, "ne": 109, "necessari": [4, 68, 117, 125], "need": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 26, 27, 28, 29, 32, 68, 85, 86, 90, 94, 125, 138, 143, 147], "neg": [5, 27, 31, 68, 128], "neg_root_mean_squared_error": 31, "neighbour": 27, "neighbourhood": 27, "nemati": [42, 60], "net": [8, 26, 68, 105, 109, 125, 131, 132, 133], "network": [2, 4, 5, 7, 8, 10, 13, 14, 25, 26, 27, 28, 29, 32, 33, 35, 44, 61, 68, 71, 72, 76, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 118, 119, 124, 125, 127, 129, 130, 136, 138, 140, 146, 147], "neural": [2, 4, 5, 8, 9, 10, 11, 14, 25, 26, 27, 28, 29, 33, 35, 44, 61, 71, 72, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 118, 130, 138, 140, 146, 147], "neural_token": 101, "neuralnet": [68, 125], "neuralnetclassifi": [9, 10, 11, 28, 30], "neuralnetregressor": 8, "neurip": [87, 92, 93], "neuron": [5, 9, 10, 11], "neurophysiolog": 142, "neurosci": [27, 28, 29, 30, 35, 75], "neuroscientist": 142, "never": [29, 32], "new": [5, 9, 10, 11, 20, 40, 57, 68, 101, 111, 117, 125, 141, 145], "next": [3, 4, 5, 9, 10, 11, 12, 14, 16, 18, 22], "nice": 32, "night": [9, 10, 11], "nikol": [11, 109, 126], "nll_loss": 27, "nllloss": [3, 4, 14, 28, 29, 30, 32, 68], "nmt": 147, "nn": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 32, 68, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 106, 107, 108, 109, 125, 136], "nnloss": 32, "no_grad": [5, 32], "nois": [31, 44, 61, 70], "noisi": [42, 60], "nolt": [27, 28, 29, 30], "nomenclatur": 40, "non": [3, 4, 11, 16, 22, 26, 27, 28, 29, 30, 32, 68, 73, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 106, 107, 109, 113, 125, 147], "none": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 22, 26, 27, 28, 29, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 140, 147], "nonlinear": [5, 29, 68, 85, 98, 125], "noqa": [12, 22], "norm": [10, 85], "norm_ax": 140, "norm_lay": 101, "normal": [2, 5, 8, 9, 10, 28, 30, 101, 103, 104, 127, 140, 147], "normalis": [26, 88, 99, 102], "notabl": [68, 125], "notat": [68, 125], "notch": 70, "notch_filt": 113, "note": [2, 3, 4, 5, 8, 9, 11, 17, 20, 26, 27, 28, 43, 59, 68, 69, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 117, 125, 133, 138], "notebook": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32], "novel": [26, 92, 93], "novemb": 87, "now": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 22, 26, 27, 28, 30, 117, 145, 147], "np": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 26, 29, 31, 32, 68, 121, 122, 125, 126, 127, 128, 129, 136], "npad": 116, "npj": [11, 109, 126], "nrepetit": 14, "nsplit": 29, "num_class": 32, "num_head": 101, "num_param": 95, "num_work": [5, 14, 32, 136], "number": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 22, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 61, 64, 66, 68, 71, 76, 77, 78, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 116, 118, 119, 123, 124, 125, 126, 127, 128, 129, 136, 137], "numer": [30, 119], "numpi": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 17, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 64, 68, 113, 116, 125, 138, 140], "numpypreproc": 147, "nvidia": 144, "nyquist": 37, "o": [2, 4, 5, 8, 16, 27, 28, 37, 38, 39, 40, 44, 52, 55, 56, 57, 58, 61, 66, 128], "o1": [12, 123], "o1_4": 123, "o1_8": 123, "o2": 12, "obery": 5, "obery\u00e9": [9, 10, 11], "obj": 5, "object": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 18, 19, 21, 27, 28, 29, 30, 31, 32, 41, 72, 75, 76, 77, 78, 79, 82, 111, 115, 118, 119, 124, 140, 147], "obtain": [2, 3, 4, 5, 8, 9, 11, 27, 28, 47, 64, 68, 72, 73, 79, 99, 125, 127], "odd": [11, 94, 109], "off": [26, 29, 30, 113], "offici": [85, 144], "offset": [3, 4, 27, 28, 29, 30, 32, 71, 82, 118, 119, 124, 147], "often": [4, 9, 10, 11, 28, 30], "old": [71, 124, 147], "omar": [11, 147], "omit": [9, 37], "on_batch_end": 132, "on_epoch_end": [131, 132, 133], "on_miss": [112, 118, 119], "on_train": [2, 5, 8, 9, 10, 11, 131, 132], "onc": [5, 16, 29, 113, 118, 128, 145], "one": [2, 4, 8, 9, 10, 11, 14, 16, 20, 26, 27, 29, 30, 32, 41, 46, 52, 66, 68, 70, 71, 85, 86, 90, 94, 95, 109, 117, 118, 119, 124, 125, 126, 127, 128, 141], "ones": [12, 26, 126, 147], "onli": [2, 4, 5, 8, 9, 10, 11, 12, 14, 18, 19, 21, 26, 27, 29, 30, 32, 41, 54, 68, 73, 76, 82, 87, 91, 92, 93, 94, 96, 97, 101, 111, 113, 114, 116, 117, 119, 125, 134, 141, 145, 147], "onlin": [46, 63, 88, 92, 93, 98, 100, 102, 135, 140], "onset": [82, 119], "open": [16, 18, 75, 141, 142, 144], "openli": [4, 5, 9, 10, 11], "oper": [2, 3, 4, 8, 16, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 111, 116], "optim": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 68, 73, 125], "optimizer__lr": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 68, 125], "optimizer__momentum": [68, 125], "optimizer__weight_decai": [2, 3, 4, 8, 27, 28, 29, 31], "optimizer_lr": 31, "optimizer_weight_decai": 31, "option": [5, 10, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 68, 71, 74, 82, 85, 86, 87, 93, 94, 95, 99, 101, 113, 116, 119, 125, 136, 140, 145, 147], "orang": [5, 12, 16], "order": [3, 4, 12, 21, 26, 40, 48, 49, 50, 57, 68, 73, 75, 77, 78, 113, 117, 123, 125, 129, 147], "order_by_frequency_band": 123, "ordered_ch_nam": [40, 48, 49, 50], "org": [2, 4, 5, 8, 26, 27, 28, 29, 30, 35, 46, 63, 68, 69, 76, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 106, 107, 109, 125, 135, 138, 140], "orient": 12, "origin": [3, 11, 17, 19, 26, 29, 46, 47, 48, 49, 50, 52, 63, 64, 66, 71, 82, 86, 90, 91, 92, 93, 94, 96, 97, 99, 101, 119, 123, 124], "oskar": 147, "other": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 18, 26, 29, 30, 32, 54, 68, 73, 76, 85, 86, 87, 88, 89, 95, 98, 100, 101, 102, 103, 104, 105, 106, 109, 125], "otherwis": [2, 14, 27, 29, 31, 82, 119], "ou": 4, "ouahidi": [99, 147], "our": [2, 5, 8, 9, 10, 11, 12, 16, 20, 26, 27, 28, 30, 32, 73, 143], "out": [4, 8, 9, 10, 26, 37, 52, 55, 66, 68, 70, 87, 125, 126, 134, 141], "out_channel": 101, "out_featur": [9, 10], "out_path": 12, "outcom": [68, 125], "outlier": 12, "output": [2, 3, 4, 5, 11, 12, 14, 21, 26, 27, 28, 29, 30, 31, 32, 68, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 116, 117, 118, 119, 125], "output_s": [10, 95, 108], "output_shap": [95, 110], "outsid": [82, 119], "over": [4, 10, 16, 29, 31, 32, 42, 47, 48, 49, 50, 60, 64, 68, 125, 147], "overal": 14, "overfit": [2, 8, 9, 10, 11, 29], "overhead": [14, 119], "overlaid": [9, 10, 11], "overlap": [9, 10, 11, 80, 81, 82, 113, 118, 119], "overnight": 76, "overrid": [68, 69, 125], "overridden": [85, 86, 90, 94], "overwrit": [16, 18, 68, 71, 72, 75, 77, 78, 79, 84, 124, 125], "own": [2, 8, 27, 28, 29, 30, 32, 73, 141], "oz": 10, "p": [5, 9, 10, 27, 28, 29, 30, 31, 37, 44, 52, 55, 61, 66, 75, 96, 97, 104], "p2": 85, "p3": 12, "p4": 12, "p_drop": [4, 38, 56], "p_shuffl": [39, 58], "pa": 85, "pace": 73, "packag": [2, 5, 10, 11, 27, 31, 32, 35, 143, 144], "pad": [2, 9, 10, 11, 27, 104, 113, 116, 147], "pad_and_select_predict": 2, "pad_size_": 104, "page": [4, 29, 32, 35, 141, 147], "paillard": 4, "pair": [5, 128], "panda": [2, 4, 5, 8, 9, 10, 11, 14, 16, 20, 21, 27, 28, 29, 30, 31, 68, 71, 72, 79, 82, 125], "paper": [4, 11, 35, 47, 48, 49, 50, 64, 85, 86, 90, 91, 92, 93, 94, 96, 97, 99, 105, 147], "paradigm": [4, 5, 68, 70, 99, 125, 136], "parallel": [12, 14, 15, 23, 24, 71, 76, 77, 78, 83, 92, 93, 94, 113, 115, 116, 118, 119, 124, 146, 147], "param": [3, 4, 5, 11, 26, 27, 28, 29, 30, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 52], "param_grid": [4, 29, 30], "param_iterator_train__transform": 4, "param_module__drop_prob": 30, "param_optimizer__lr": 30, "paramet": [2, 3, 4, 5, 8, 10, 14, 16, 17, 18, 19, 26, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 140, 147], "parent": [75, 77, 78], "parkkonen": 35, "pars": 12, "part": [2, 8, 16, 17, 19, 28, 29, 32, 38, 39, 52, 56, 58, 66, 90, 92, 93], "partial": 30, "particip": 75, "particular": 26, "pasdeloup": 99, "pass": [3, 4, 9, 10, 11, 16, 22, 26, 27, 28, 29, 30, 32, 36, 41, 54, 68, 74, 85, 86, 87, 89, 90, 94, 99, 100, 103, 104, 105, 106, 107, 111, 113, 114, 116, 117, 125, 130, 133, 134, 147], "passband": 16, "past": 141, "patch": [29, 101], "patch_siz": 101, "patchemb": 101, "patchembed": 90, "patchfrequencyembed": 87, "path": [12, 14, 17, 18, 19, 22, 32, 69, 71, 75, 77, 78, 83, 84], "pathlib": 83, "patholog": [14, 18, 75, 78], "pathologi": 30, "patienc": 5, "patient": [12, 69], "paz": [46, 63, 135], "pazo": 103, "pc": 85, "pca": 5, "pch": [9, 10, 11], "pd": [2, 4, 5, 8, 9, 10, 11, 14, 16, 27, 28, 29, 30, 31, 71, 72, 79, 126, 127, 128, 129], "pdf": 69, "peak": [16, 118, 119], "pearson": 8, "pearson_r_scor": 8, "penalti": 5, "peng": [9, 10, 11, 44, 61, 101], "peopl": 107, "per": [2, 4, 5, 8, 9, 10, 11, 27, 46, 52, 66, 70, 73, 76, 94, 99, 107, 117, 147], "percent": [27, 28], "percentag": 107, "percept": 32, "perez": 91, "perform": [2, 4, 8, 9, 10, 11, 26, 27, 28, 29, 30, 32, 70, 71, 73, 85, 86, 90, 94, 99, 105, 121, 122, 147], "period": 31, "permut": [39, 40, 46, 57, 58, 63], "persist": 141, "perslev": [11, 109, 126], "perslev2021": 126, "perturb": [42, 60], "phase": [16, 42, 60, 101, 113], "phase_freq": 4, "phase_noise_magnitud": [4, 42, 60], "phenomenon": 4, "physic": 85, "physician": [77, 78], "physiobank": [5, 9, 10, 11], "physiolog": [5, 9, 10, 11], "physionet": [5, 7, 13, 16, 24, 71, 76, 95, 104, 105, 108, 109, 115, 119, 124, 127, 129, 138, 140, 146, 147], "physionet_path": [17, 19], "physiotoolkit": [5, 9, 10, 11], "pi": [31, 42, 60], "pick": [2, 8, 10, 12, 19, 20, 113, 118, 119, 120, 147], "pick_channel": [12, 112, 115], "pick_typ": [2, 3, 4, 8, 20, 27, 28, 29, 30, 32, 112], "pickleabl": [68, 125], "piconepress": [12, 14, 77, 78], "pierr": [26, 147], "pietquin": [38, 39, 56, 58], "pin": 14, "pin_memori": 14, "pip": [32, 143, 144, 145, 147], "pipelin": [2, 5, 8, 29, 32], "pivot": 30, "pivot_t": 30, "pj": [11, 109, 126], "place": [20, 31, 95, 111, 123], "playbook": 30, "pleas": [2, 3, 4, 5, 8, 11, 12, 22, 26, 27, 28, 29, 30, 32, 69, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 109, 123, 145, 147], "plot": [3, 5, 12, 14, 16, 29, 31, 147], "plot_basic_training_epoch": [26, 33, 146], "plot_bcic_iv_2a_moabb_crop": [27, 33, 146], "plot_bcic_iv_2a_moabb_tri": [28, 33, 146], "plot_bcic_iv_4_ecog_crop": [2, 6, 146], "plot_bcic_iv_4_ecog_tri": [8, 13, 146], "plot_benchmark_preprocess": [16, 23, 146], "plot_confusion_matrix": [9, 10, 11, 27, 28, 147], "plot_custom_dataset_exampl": [17, 23, 146], "plot_data_augment": [3, 6, 146], "plot_data_augmentation_search": [4, 6, 146], "plot_how_train_test_and_tun": [29, 33, 146], "plot_hyperparameter_tuning_with_scikit": [30, 33, 146], "plot_k_fold": 29, "plot_load_save_dataset": [18, 23, 146], "plot_mne_dataset_exampl": [19, 23, 146], "plot_moabb_dataset_exampl": [20, 23, 146], "plot_psd": 3, "plot_regress": [31, 33, 146], "plot_relative_posit": [5, 6, 146], "plot_simple_train_test": 29, "plot_sleep": 76, "plot_sleep_staging_chambon2018": [9, 13, 146], "plot_sleep_staging_eldele2021": [10, 13, 146], "plot_sleep_staging_usleep": [11, 13, 146], "plot_split_dataset": [21, 23, 146], "plot_train_in_pure_pytorch_and_pytorch_lightn": [32, 33, 146], "plot_train_valid_test": 29, "plot_tuh_discrete_multitarget": [22, 23, 146], "plot_tuh_eeg_corpu": [12, 13, 146], "plt": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 31], "plt_histogram": 12, "pmlr": [37, 44, 52, 55, 61, 66], "point": [19, 20, 26, 70, 117, 121, 122], "polici": [38, 39, 56, 58], "poly1d": 31, "polyfit": 31, "pool": [3, 4, 26, 27, 28, 29, 32, 85, 88, 90, 92, 93, 95, 99, 101, 102, 104, 107, 109], "pool_length": 86, "pool_length_inp": 86, "pool_mod": [26, 96, 97, 102], "pool_nonlin": [26, 102], "pool_nonlin_exp": [3, 4, 26, 27, 28, 29, 32], "pool_strid": 86, "pool_stride_inp": 86, "pool_time_length": [14, 26, 88, 90, 102], "pool_time_strid": [14, 26, 88, 90, 102], "pooling_s": [92, 93], "popul": [68, 125, 147], "popular": 26, "portion": 141, "posit": [1, 6, 24, 27, 37, 47, 48, 49, 50, 52, 55, 64, 66, 71, 76, 95, 101, 104, 115, 119, 124, 127, 128, 137, 138, 146], "positionwisefeedforward": 105, "possibl": [3, 4, 11, 12, 16, 18, 26, 68, 70, 118, 125, 138, 141, 147], "potenti": [14, 16, 32, 144], "power": [3, 5, 30, 113, 116], "pp": [10, 37, 44, 47, 48, 49, 50, 52, 55, 61, 64, 66, 90, 105], "pre": [26, 80, 87, 101, 117, 147], "preced": 8, "precis": [5, 9, 10, 11, 140], "pred": [2, 8, 32, 130, 134, 135, 137], "predefin": [2, 8, 28, 30], "predefined_split": [2, 3, 5, 8, 9, 10, 11, 27, 28, 29, 31], "predict": [2, 4, 5, 8, 9, 10, 11, 27, 28, 31, 68, 72, 75, 95, 99, 108, 125, 130, 131, 132, 133, 134, 135, 136, 137, 147], "predict_nonlinear": [68, 125], "predict_proba": [68, 125, 147], "predict_tri": [2, 68, 125, 147], "preds_per_tri": 137, "preds_test": [2, 8], "preds_train": [2, 8], "preds_valid": [2, 8], "prefer": [68, 125], "prefix": [26, 68, 125], "prefixes_": [68, 125], "preload": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 27, 28, 29, 30, 31, 32, 75, 76, 77, 78, 82, 83, 117, 118, 119, 120, 124, 147], "prepar": [14, 16, 20, 32], "prepare_data": 16, "prepocess": [2, 8, 28, 30], "preprint": [5, 31, 37, 38, 39, 40, 42, 44, 52, 55, 56, 57, 58, 60, 61, 66, 86, 96, 97, 99, 106, 128], "preprocess": [14, 15, 18, 19, 20, 21, 22, 23, 24, 26, 31, 71, 76, 142, 146, 147], "preprocessor": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 18, 20, 27, 28, 29, 30, 32, 124, 147], "presampl": [5, 128], "present": [4, 29, 32, 70, 73, 87, 112], "preserv": [75, 77, 78], "pretext": 4, "pretti": [14, 141], "previou": [32, 147], "previous": [29, 32], "print": [2, 4, 5, 8, 9, 10, 11, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 68, 125, 141], "print_batch_stat": 32, "print_log": [68, 125], "prior": [5, 95], "prob": 4, "proba_drop": 38, "probabl": [3, 4, 26, 30, 32, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 68, 85, 87, 88, 91, 102, 106, 107, 125], "problem": [5, 26, 42, 60, 141, 144], "proc": 16, "process": [2, 4, 5, 7, 8, 13, 14, 15, 16, 22, 24, 29, 30, 71, 77, 87, 115, 118, 124, 146, 147], "process_pipelin": 74, "processor": [29, 30], "produc": [27, 29, 32, 105], "product": [14, 16], "progress_bar": 32, "project": [5, 12, 14, 19, 26, 77, 78, 117], "projector": 117, "prompt": [70, 141], "propag": 147, "proper": [2, 8], "properli": [29, 113, 116, 117], "properti": [5, 71, 147], "proport": [82, 92, 93, 119], "propos": [4, 38, 39, 42, 52, 56, 58, 60, 66, 87, 94, 147], "protonmail": [3, 20], "provid": [2, 8, 9, 10, 11, 26, 28, 30, 32, 35, 68, 70, 71, 72, 75, 77, 78, 87, 108, 113, 114, 115, 124, 125, 141], "provind": 4, "proxim": 73, "psd": 3, "psd_array_multitap": 3, "psds_mean": 3, "pseudo": 73, "psg": 16, "pt": [5, 85], "publish": 26, "pure": [2, 5, 8, 28, 30, 147], "purpos": [3, 14, 16, 32], "push": [27, 68, 125], "putz": [27, 28, 29, 30], "py": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 146], "pypi": 143, "pyplot": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 31], "pyproject": 147, "python": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 35, 111, 138, 142, 143, 145, 147], "python3": [2, 5, 10, 11, 27, 31, 32], "pythonhashse": 138, "pytorch": [2, 8, 14, 22, 24, 25, 26, 27, 28, 30, 33, 68, 71, 74, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 107, 109, 115, 119, 122, 124, 125, 136, 138, 144, 146, 147], "pz": [10, 12], "q": 90, "qixiang": 101, "qk_norm": 101, "qk_scale": 101, "qkv_bia": 101, "quadrat": [47, 48, 49, 50, 64], "quantiti": 5, "quantiz": 101, "queri": 101, "quick": [5, 127], "quickli": 29, "quit": [26, 29], "r": [3, 5, 9, 10, 11, 26, 27, 28, 29, 30, 31, 37, 44, 52, 55, 61, 66, 75, 88, 92, 93, 96, 97, 98, 100, 102, 140], "r15fdf33b022f": 92, "r2": [2, 8], "r2_score": 2, "r2_train": 2, "r2_valid": 2, "r37c4761d4e92": 93, "r382d436f3223": 70, "r5661533ddc63": 99, "r5e478952091a": 73, "rais": [4, 14, 26, 29, 30, 31, 68, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 119, 124, 147], "randint": [26, 31], "randn": 26, "random": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 30, 31, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 73, 126, 127, 128, 129, 133, 138, 147], "random_st": [4, 5, 8, 30, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 126, 127, 128, 129], "randomli": [3, 5, 27, 37, 38, 39, 44, 52, 56, 58, 61, 129], "randomst": [126, 127, 128, 129], "rang": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 26, 27, 28, 29, 31, 32, 42, 60, 69, 99, 123, 140], "rank_test_scor": [4, 29, 30], "rate": [2, 5, 14, 27, 28, 29, 30, 31, 32, 68, 73, 90, 92, 93, 101, 103, 104, 105, 109, 125, 147], "rather": [9, 10], "ratio": [29, 101], "ravel": 31, "raw": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 71, 72, 75, 76, 77, 78, 82, 89, 111, 112, 113, 114, 115, 117, 118, 119, 123, 142, 147], "raw_or_epoch": 115, "raw_preproc_kwarg": 71, "rawarrai": [17, 19, 31, 82], "rbf": [47, 48, 49, 50, 64], "re": [12, 21, 68, 117, 125, 141], "reach": [5, 9, 10, 32], "read": [12, 14, 16, 17, 18, 19, 75, 77, 78, 83, 119], "read_raw_edf": [17, 19], "readabl": [29, 32, 113], "readi": [12, 16, 17, 18, 19, 31], "readthedoc": 27, "real": 32, "realiz": 147, "realli": 29, "rearrang": [3, 4, 26, 27, 28, 29, 32, 147], "reason": [5, 10, 29, 32, 68, 125, 133], "rec_ind": [126, 127], "recal": [5, 9, 10, 11], "recalibr": 105, "receiv": [5, 90], "recent": [4, 26, 141], "recept": [2, 27, 68, 125, 136], "recip": [85, 86, 90, 94], "reciproc": 113, "recod": 12, "recoding_id": 147, "recogn": [29, 32], "recognit": [44, 61], "recombin": 90, "recommend": [9, 11, 16, 29, 30, 35, 90, 99, 144, 145], "recomput": 133, "record": [2, 4, 8, 9, 10, 11, 14, 16, 21, 22, 26, 31, 69, 70, 73, 75, 76, 77, 78, 82, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 117, 118, 119, 126, 127, 128, 147], "recording_id": [5, 9, 10, 11, 12, 14, 16, 22, 75, 76, 77, 78], "recordingsampl": [126, 128, 129], "recurr": 106, "red": [2, 8, 27, 28], "reddi": 31, "reduc": [5, 10, 14, 16, 76, 119], "reduction_r": 86, "redund": 27, "ref_channel": [12, 117], "refactor": 147, "refer": [12, 35, 37, 38, 39, 40, 42, 44, 46, 47, 48, 49, 50, 52, 55, 56, 57, 58, 60, 61, 63, 64, 66, 69, 70, 75, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 117, 123, 126, 128, 135, 140], "referenc": 117, "refit": [4, 29, 30], "reflect": [113, 116], "reflect_limit": [113, 116], "regard": [12, 99], "regardless": [68, 125], "regim": 5, "region": [12, 113], "regist": [85, 86, 90, 94], "regress": [2, 5, 8, 24, 25, 30, 33, 71, 72, 88, 95, 102, 110, 118, 125, 130, 138, 146, 147], "regressor": [2, 8, 26, 31, 147], "regular": [5, 121, 122], "rehabilit": [5, 9, 10, 89, 90, 92, 93, 104, 105], "reimplement": [91, 92, 93, 94, 96, 97], "reiniti": [29, 32], "reject": [10, 19, 118, 119, 120], "rel": [1, 6, 24, 29, 30, 71, 76, 95, 104, 115, 119, 124, 127, 128, 138, 146], "relat": [4, 5, 26, 27, 35, 73, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 125, 147], "relativepositioningdataset": 5, "relativepositioningsampl": 5, "relax": 73, "releas": [5, 92, 141, 145], "relev": [5, 29, 35, 68, 125], "reliabl": [29, 32], "reload": [12, 16, 124], "relu": [9, 10, 94, 99], "rem": [9, 10, 11], "remain": [16, 29, 32], "rememb": [4, 29, 32], "remi": 147, "remov": [2, 3, 4, 5, 8, 9, 11, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 117, 137, 147], "renam": [3, 4, 18, 20, 21, 29, 30, 77, 78, 147], "rename_channel": [12, 77, 78], "render": 4, "reorder": [38, 39, 56, 58], "reorder_channel": 112, "repeat": [14, 141], "repetit": [14, 16, 73], "replac": [29, 52, 66, 147], "replic": 141, "repo": 145, "report": [5, 9, 10, 11, 14, 29, 32, 77, 78, 85, 141], "report_messag": 4, "repositori": [99, 143], "repres": [21, 48, 49, 50, 90, 99], "represent": [4, 37, 44, 46, 52, 55, 61, 63, 66, 87, 101, 147], "reproduc": [2, 3, 4, 5, 8, 9, 10, 11, 24, 27, 28, 30, 138, 147], "request": [27, 117, 141], "requir": [5, 11, 12, 14, 16, 17, 22, 54, 68, 73, 79, 125, 147], "rerun": 4, "resampl": [5, 12, 14, 18, 20, 76, 113, 147], "resampling_freq": 99, "rescal": [29, 30], "research": [5, 9, 10, 11, 30, 35, 142], "reset": 101, "reset_classifi": 101, "residu": [85, 98, 101], "resili": [11, 109, 126], "resolut": 105, "resolv": [68, 125], "resourc": [5, 7, 9, 10, 11, 13, 16, 24, 71, 77, 115, 118, 124, 146, 147], "resp": 54, "respect": [4, 5, 30], "respir": 76, "respons": [8, 9, 10, 11, 28, 30], "rest": [73, 117], "restor": [32, 68], "result": [3, 12, 14, 16, 29, 32, 68, 82, 116, 119, 125, 133, 138, 141], "results_column": [2, 8, 27, 28], "results_df": 14, "return": [2, 5, 8, 9, 10, 11, 12, 14, 17, 19, 21, 29, 30, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 87, 89, 90, 95, 99, 101, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 133, 135, 136, 137, 140, 147], "return_all_token": 101, "return_feat": [9, 10, 89, 103, 104, 105], "return_featur": [87, 90, 99], "return_pair": 5, "return_patch_token": 101, "return_target": [2, 68, 125, 136], "return_train_scor": [4, 29, 30], "reus": [5, 9, 11], "review": [27, 28, 29, 30], "rg": [9, 10, 11], "right": [2, 4, 8, 12, 27, 28, 29, 32, 40, 70, 73, 145], "right_hand": [18, 21, 27, 28, 29, 30, 32], "rightward": 73, "rippl": 16, "risk": [29, 46, 63, 135], "rivero": 103, "rmse": 31, "robin": [35, 147], "robust": 94, "robust_scal": 11, "roman": 35, "rommel": [3, 4, 147], "room": [27, 28], "root": [31, 145], "rot": 4, "rotat": [29, 47, 48, 49, 50, 64, 140], "rotate_col_label": 140, "rotate_precis": 140, "rotate_row_label": 140, "rough": 29, "roughli": [2, 3, 4, 5, 8, 9, 11, 27, 28, 73], "round": [2, 8], "row": [14, 22, 40, 71, 95, 140], "row_set": 95, "rp": 5, "rudzicz": 107, "rule": [27, 68, 125], "run": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 68, 70, 73, 82, 85, 86, 90, 94, 103, 113, 115, 116, 119, 125, 127, 138, 141, 145, 147], "run_0": 127, "run_train": 14, "runner": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32], "runtim": 27, "runtimewarn": 27, "s0": 22, "s001": 22, "s004": 22, "s00500": 103, "s022": [17, 19], "s022r05": [17, 19], "s022r06": [17, 19], "s022r09": [17, 19], "s022r10": [17, 19], "s022r13": [17, 19], "s022r14": [17, 19], "s41562": [2, 8, 69], "s_growth": 107, "saeed": [38, 39, 56, 58], "safe_log": 102, "sake": 14, "salami": 91, "salami2022": 91, "same": [2, 3, 4, 5, 8, 9, 10, 11, 14, 18, 21, 27, 28, 29, 30, 32, 43, 52, 59, 66, 68, 73, 76, 105, 125, 128], "same_rec_neg": [5, 128], "sampl": [2, 3, 4, 5, 8, 9, 10, 14, 16, 17, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 55, 58, 59, 60, 66, 68, 70, 72, 73, 76, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 118, 119, 126, 127, 128, 129, 135, 141, 147], "sample_class": 126, "sample_record": 127, "sample_window": 127, "sampler": 147, "sanjiv": 31, "santamaria": [92, 93], "santamaria2020": [92, 93], "sara": [31, 147], "sashank": 31, "satyen": 31, "save": [2, 3, 4, 5, 8, 9, 10, 12, 14, 15, 16, 23, 24, 27, 28, 29, 30, 32, 68, 71, 74, 83, 115, 119, 124, 125, 146, 147], "save_dir": [12, 16, 124], "savgol_filt": 113, "sc4001e0": 16, "sc4011e0": 16, "scalar": 133, "scale": [5, 9, 10, 11, 12, 16, 90, 92, 93, 94, 101, 147], "scales_samples_": [92, 93], "scalp": 75, "scanno": 26, "scatter": [5, 16, 31], "scenario": [16, 119], "schalk": 73, "schedul": [31, 32], "scheme": [29, 32, 117, 147], "schirrmeist": [26, 27, 28, 29, 30, 31, 35, 73, 88, 98, 100, 102, 140, 147], "schirrmeister2017": [26, 73, 88, 98, 100, 102], "schwabed": [42, 60], "scientif": 35, "scikit": [5, 24, 25, 33, 68, 71, 74, 95, 102, 115, 119, 122, 124, 125, 138, 140, 146, 147], "scipi": [47, 48, 49, 50, 64, 68, 113, 116, 125], "score": [2, 4, 5, 9, 10, 11, 29, 30, 68, 89, 103, 125, 131, 132, 133, 147], "scorer": 133, "screen": 70, "script": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 138], "se": 10, "seaborn": [14, 29, 30], "seamlessli": 32, "search": [1, 6, 24, 29, 30, 36, 38, 42, 52, 54, 68, 71, 74, 95, 102, 115, 119, 122, 124, 125, 138, 141, 146, 147], "search_result": [4, 29, 30], "searchwork": [2, 8, 69], "sec": [16, 17, 18, 19, 31], "second": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 30, 31, 32, 40, 70, 73, 75, 77, 78, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111], "second_kernel_s": 96, "section": [12, 22, 73, 144], "sedlar": [31, 147], "see": [2, 3, 4, 5, 8, 9, 10, 11, 16, 18, 20, 21, 24, 26, 27, 28, 29, 30, 32, 46, 63, 68, 69, 70, 73, 76, 78, 79, 91, 95, 96, 97, 100, 106, 107, 111, 112, 113, 114, 116, 117, 118, 119, 124, 125, 126, 128, 129, 135, 138, 141, 144, 145], "seed": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 61, 138], "seeg": 117, "segment": [12, 16, 29, 32, 90, 101, 113], "segmentpatch": 101, "select": [2, 4, 8, 9, 16, 20, 27, 28, 29, 30, 32, 37, 73, 101, 117, 126], "select_by_channel": 12, "select_by_dur": 12, "self": [1, 4, 6, 11, 24, 32, 68, 71, 76, 85, 90, 95, 104, 115, 119, 124, 125, 127, 128, 129, 138, 141, 146, 147], "self_attn": 10, "send": [2, 3, 4, 8, 9, 10, 11, 16, 27, 28, 29, 30, 32], "sensit": [30, 70, 140], "sensor": [3, 4, 27, 28, 29, 30, 32, 40, 47, 48, 49, 50, 64, 73], "sensors_positions_matrix": [47, 64], "sent": [68, 125], "separ": [5, 29, 32, 70, 99, 113, 119, 128], "seq2seq": 11, "seq_len": 108, "sequenc": [30, 36, 41, 68, 101, 106, 108, 125, 126, 129, 136, 144, 147], "sequencesampl": [9, 10, 11, 147], "sequenti": [3, 4, 5, 9, 10, 11, 16, 26, 27, 28, 29, 30, 32, 73, 95], "seri": [2, 4, 5, 8, 9, 10, 29, 30, 31, 68, 72, 79, 82, 99, 103, 104, 125, 127, 131, 147], "serial": [12, 15, 18, 23, 24, 71, 76, 115, 118, 124, 146, 147], "serv": [14, 70, 72, 79], "session": [2, 4, 8, 12, 18, 20, 21, 27, 28, 29, 30, 31, 32, 70, 73, 127], "session_t": 127, "set": [2, 4, 8, 9, 10, 11, 12, 14, 16, 17, 19, 22, 26, 27, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 63, 68, 70, 71, 73, 77, 78, 88, 92, 93, 94, 102, 103, 104, 107, 109, 111, 114, 117, 118, 119, 124, 125, 138, 144, 147], "set_bipolar_refer": 117, "set_config": 27, "set_descript": [22, 32, 71, 72, 79], "set_eeg_refer": [12, 117], "set_log_level": [2, 8, 12, 14, 22], "set_montag": [12, 77, 78], "set_num_thread": 14, "set_param": [11, 68, 125], "set_random_se": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 147], "set_titl": [2, 8, 16, 31], "set_xlabel": [2, 4, 5, 8, 9, 10, 11, 16, 27, 28, 31], "set_xlim": 29, "set_ylabel": [2, 5, 8, 9, 10, 11, 16, 27, 28, 31], "set_ylim": [4, 27, 28], "seta": 12, "setb": 12, "seteegrefer": 147, "setter": 5, "setup": [2, 4, 8, 27, 143], "seven": 103, "seventh": 87, "sever": [4, 12, 18, 24, 86, 118, 119, 142], "sex": 5, "sfreq": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 32, 37, 43, 55, 59, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 125, 147], "sgd": [68, 125], "shafait": 75, "shallow": [2, 8, 14, 26, 27, 28, 31, 102], "shallowconvnet": [26, 31], "shallowfbcsp": 147, "shallowfbcspnet": [2, 3, 4, 8, 14, 26, 27, 28, 29, 30, 31, 32], "shallu": 30, "shape": [2, 3, 4, 5, 8, 9, 10, 11, 17, 20, 22, 26, 27, 28, 29, 30, 32, 47, 64, 68, 89, 90, 95, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 129, 130, 134], "share": [2, 8, 14, 27, 28], "sharex": [9, 10, 11], "shell": 141, "shh": 105, "shift": [3, 29, 43, 59], "short": [11, 29, 32, 70, 89], "short_ch_nam": 12, "shorter": [11, 147], "shortest": 113, "should": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 20, 26, 27, 28, 30, 37, 40, 47, 52, 55, 64, 66, 68, 69, 71, 72, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 116, 117, 125, 133, 141, 145], "show": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 73, 95, 147], "show_titl": 12, "showcas": [12, 29, 32], "shown": [4, 5, 9, 11, 16, 29, 32, 70, 73], "shrink": 109, "shtml": [12, 77, 78], "shuffl": [4, 8, 14, 29, 30, 32, 39, 46, 58, 68, 125, 147], "siames": 5, "side": [40, 113], "sigmoid": [10, 68, 125], "sign": [51, 65], "sign_flip": 3, "signal": [2, 3, 4, 5, 8, 9, 10, 11, 12, 18, 20, 26, 28, 29, 30, 31, 36, 37, 38, 39, 42, 43, 47, 48, 49, 50, 52, 55, 56, 58, 59, 60, 64, 66, 70, 72, 76, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 116, 117, 118, 119, 123, 125, 128, 147], "signatur": 133, "signflip": 3, "signific": 30, "significantli": 16, "silenc": 32, "silent": [85, 86, 90, 94], "similar": [5, 27, 111], "similarli": [21, 32], "simon": [3, 20, 147], "simonbrandt": [3, 20], "simpl": [5, 12, 16, 24, 25, 32, 33, 87, 95, 99, 102, 146], "simpleconv": 99, "simpler": 11, "simplest": 16, "simpli": [22, 26], "simplifi": [9, 10, 127, 147], "simul": 26, "simultan": [27, 92, 93], "sin": 31, "sinc": [5, 9, 10, 11, 12, 22, 26, 30, 68, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 125, 141], "singl": [5, 9, 10, 27, 30, 41, 42, 43, 59, 60, 68, 89, 99, 105, 117, 125, 136, 147], "sinusoid": 31, "sit": 70, "site": [2, 5, 10, 11, 27, 31, 32], "situat": [68, 125], "size": [2, 3, 4, 5, 11, 14, 16, 26, 27, 28, 29, 30, 31, 32, 37, 52, 55, 66, 68, 80, 81, 82, 85, 87, 90, 92, 93, 94, 95, 99, 101, 103, 104, 106, 107, 109, 110, 113, 116, 118, 119, 125, 128, 130, 134, 136, 140], "skip": [18, 22, 29, 32, 94, 109], "skip_by_annot": 113, "sklearn": [2, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 30, 31, 68, 125, 133, 140, 147], "skorch": [2, 3, 4, 5, 8, 9, 10, 11, 17, 26, 27, 28, 29, 30, 31, 68, 80, 81, 82, 125, 147], "sleep": [7, 13, 16, 24, 30, 42, 60, 71, 76, 87, 89, 95, 103, 104, 105, 108, 109, 115, 119, 124, 126, 127, 129, 138, 140, 146, 147], "sleep_physionet": [5, 9, 10, 11], "sleepdata": 105, "sleepphysionet": [5, 9, 10, 11, 16, 147], "sleepstagerblanco2020": [26, 147], "sleepstagerchambon2018": [5, 9, 26], "sleepstagereldele2021": [10, 26, 147], "slice": [30, 113, 114, 118, 119], "slicedata": 4, "slicedataset": [4, 29, 30], "slid": 85, "slide": [14, 31, 85, 118], "slightli": 133, "sliwowski": [2, 8], "slow": [5, 9, 10, 11, 16, 138, 147], "slower": [10, 14, 19], "small": [11, 12, 27, 29, 141], "smaller": [5, 27, 32, 82, 92, 93, 119], "smallest": 141, "smoothli": [52, 66], "smoothtimemask": 4, "sn": [14, 29, 30], "snippet": 141, "snyder": [42, 60], "so": [2, 5, 8, 9, 10, 11, 14, 16, 18, 26, 27, 28, 29, 30, 32, 37, 40, 68, 109, 118, 123, 125, 147], "societi": [47, 48, 49, 50, 64], "soft": 103, "softmax": [26, 27, 31, 68, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 106, 107, 109, 125], "softwar": [35, 141], "solon": [96, 97], "solut": [16, 117], "solv": [138, 147], "solver": 5, "some": [2, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 26, 27, 28, 30, 35, 68, 71, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 117, 125, 138], "song": [90, 147], "song2022": 90, "sort": [12, 27, 28, 147], "sound": [29, 32], "sourc": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143], "space": [5, 16], "span": 75, "spars": [68, 125], "spat_lay": 107, "spatial": [4, 26, 42, 60, 86, 88, 102, 109, 147], "spatial_conv": 9, "spatial_expans": 86, "speak": [9, 11, 14], "special": [68, 125], "specif": [5, 9, 10, 11, 16, 18, 30, 68, 83, 103, 111, 125, 127, 143], "specifi": [2, 3, 5, 8, 9, 10, 11, 12, 18, 21, 22, 26, 27, 28, 29, 68, 69, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 117, 124, 125], "spectral": 3, "speed": [10, 11, 16, 147], "speedup": 14, "spent": [9, 10, 11], "spheric": [47, 48, 49, 50, 64], "spherical_splin": [47, 48, 49, 50, 64], "sphinx": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32], "spline": [47, 48, 49, 50, 64], "split": [12, 15, 20, 23, 24, 26, 31, 68, 71, 74, 88, 102, 119, 125, 146, 147], "split_first_lay": [14, 26, 88, 98, 102], "split_id": [5, 9, 10, 11, 12, 71, 147], "splitter": 29, "spoclab": 107, "springenberg": [26, 27, 28, 29, 30, 31, 35, 88, 98, 100, 102, 140], "sqrt": 122, "squar": [31, 102, 125], "squeez": [2, 3, 4, 26, 27, 28, 29, 30, 32], "src": 11, "ss3": 9, "ssl": [5, 27], "stabil": 122, "stabl": [2, 4, 5, 8, 16, 26, 68, 76, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 106, 107, 109, 125, 138, 140], "stack": [3, 8], "stage": [7, 13, 24, 29, 30, 32, 71, 76, 89, 95, 103, 104, 105, 108, 109, 115, 119, 124, 126, 127, 129, 138, 140, 146, 147], "stager": 108, "stai": [16, 27, 70], "standard": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 32, 36, 44, 47, 48, 49, 50, 61, 64, 77, 78, 117, 122, 147], "standard_1020": [47, 64], "standard_scal": [5, 9, 10], "standardscal": 5, "stanford": [2, 8, 69], "stanlei": [5, 9, 10, 11], "start": [3, 4, 12, 14, 16, 22, 27, 28, 29, 30, 32, 52, 66, 68, 82, 99, 111, 116, 118, 119, 125, 143], "start_dim": [9, 10], "start_ind": 17, "start_offset_sampl": [2, 14, 22, 31, 118], "state": [32, 126, 127, 128, 129], "state_dict": 95, "static": [37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 51, 52, 53, 69, 101], "statist": 12, "statu": 5, "std": [12, 29, 44, 61, 73], "std_train_scor": 4, "step": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 18, 22, 28, 29, 30, 32, 82, 101, 119, 141], "still": [2, 3, 4, 5, 8, 9, 11, 27, 28, 29, 73, 99], "stim": [3, 4, 20, 27, 28, 29, 30, 32], "stim_channel": [17, 19], "stimuli": 73, "stimulu": [29, 30], "stochast": 31, "stop": [5, 32, 37, 55, 82, 113, 118, 119, 137, 147], "stop_ind": 17, "stop_offset_sampl": [2, 14, 22, 31, 118, 147], "stopband": 16, "storag": 14, "store": [2, 4, 8, 9, 10, 11, 12, 14, 18, 22, 28, 29, 30, 32, 69, 71, 83, 147], "stori": [29, 32], "str": [14, 22, 26, 27, 28, 29, 36, 68, 69, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 86, 88, 90, 95, 102, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 133, 140], "straightforward": 99, "strategi": [4, 25, 29, 30], "strength": 4, "stricker": 75, "strictli": 5, "stride": [2, 9, 10, 11, 26, 27, 80, 81, 82, 88, 90, 95, 102, 107, 118, 119], "stride_before_pool": [14, 31, 88], "string": [21, 22, 26, 35, 40, 48, 49, 50, 68, 71, 113, 114, 115, 124, 125, 133], "strip": 14, "strohmeier": 35, "strong": [99, 101], "strongli": [2, 8, 27, 28, 92, 93, 94], "structur": [4, 5, 16, 17, 19, 127, 128, 147], "studi": [4, 5, 7, 24, 87, 99], "stumbl": 26, "style": [2, 5, 8, 27, 28, 48, 49, 50, 107], "st\u00f8rmer": 147, "sub": [27, 147], "sub_df": 16, "subclass": [85, 86, 90, 94], "subdirectori": [16, 18, 71, 124], "subj": 73, "subj_test": 5, "subj_train": 5, "subj_valid": 5, "subject": [4, 5, 9, 10, 11, 12, 14, 18, 19, 20, 21, 22, 29, 37, 44, 52, 55, 61, 66, 69, 70, 72, 73, 74, 76, 99, 127], "subject_id": [2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 27, 28, 29, 30, 32, 69, 70, 73, 74, 76, 147], "sublayer_output": 10, "subplot": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 31], "subplots_adjust": 12, "subsequ": 111, "subset": [5, 8, 20, 29, 31, 71, 113, 114, 147], "subset_nam": 20, "substanti": [2, 3, 4, 5, 8, 9, 10, 11, 14, 19, 27, 28], "suffici": 29, "suffix": [68, 125], "suggest": [37, 40, 44, 47, 48, 49, 50, 52, 55, 57, 61, 64, 82, 119], "sum": [32, 147], "summar": 14, "summari": [68, 95, 107, 125], "sun": [40, 57, 87], "super": [5, 32, 131, 132], "supervis": [1, 4, 6, 24, 29, 32, 71, 76, 95, 104, 115, 119, 124, 127, 128, 138, 146, 147], "suppli": [2, 3, 5, 8, 9, 10, 11, 27, 28, 29], "support": [5, 9, 10, 11, 18, 27, 32, 68, 113, 116, 117, 123, 125, 147], "suppos": 26, "suppress": [70, 113], "supratak": 89, "supratak2017": 89, "suptitl": 12, "sure": 141, "surrog": [42, 60], "switch": [5, 32, 147], "sylvain": 147, "symmetr": 113, "system": [5, 9, 10, 47, 64, 77, 78, 87, 89, 90, 92, 93, 104, 105, 144], "systemat": 4, "t": [2, 4, 5, 11, 17, 19, 26, 27, 28, 29, 30, 31, 32, 42, 60, 68, 69, 70, 75, 88, 98, 100, 102, 109, 111, 121, 122, 125, 138, 140], "t0": 19, "t1": 19, "t2": 19, "t3": 12, "t4": 12, "t5": 12, "t6": 12, "t_filter": 107, "t_max": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "tab": [2, 5, 8, 16, 27, 28], "tabl": [27, 28, 29, 30, 32, 85, 95, 147], "take": [9, 10, 11, 16, 17, 29, 31, 54, 83, 85, 86, 87, 90, 94, 105], "taken": [2, 5, 8, 14], "tangermann": [26, 27, 28, 29, 30, 31, 35, 88, 98, 100, 102, 140], "tanh": 11, "tap": 73, "target": [2, 4, 5, 8, 9, 10, 15, 17, 18, 20, 23, 24, 27, 28, 29, 31, 46, 54, 63, 68, 69, 71, 72, 77, 79, 80, 82, 83, 118, 119, 125, 126, 127, 130, 131, 134, 135, 136, 140, 146, 147], "target_extractor": [131, 132, 133], "target_from": 26, "target_nam": [12, 14, 18, 22, 31, 71, 72, 75, 77, 78, 83, 147], "target_sfreq": [2, 8], "target_subset": 31, "target_transform": [2, 8, 9, 10, 71, 147], "targets_from": [2, 79, 118, 125], "task": [4, 9, 10, 11, 26, 30, 42, 60, 70, 72, 75, 128], "tau_max": 128, "tau_neg": [5, 128], "tau_po": [5, 128], "tb": 14, "tce": 105, "tcn": [26, 85, 147], "tcn_activ": 85, "tcn_depth": 85, "tcn_dropout": 85, "tcn_kernel_s": 85, "tcn_n_filter": 85, "techniqu": [40, 57, 113, 117], "tell": [3, 4, 141], "temp": [2, 8], "temp_filter_length": 86, "temp_filter_length_inp": 86, "temp_lay": 107, "temp_len": 107, "temp_span": 107, "temperatur": 76, "tempfil": [12, 16, 18], "templ": [12, 77, 78, 147], "tempor": [5, 9, 10, 14, 26, 85, 86, 88, 90, 91, 93, 101, 102, 103, 104, 105, 106, 107, 109, 147], "temporalconv": 101, "temporari": [18, 147], "temporarydirectori": 16, "ten_twenty_montag": [47, 64], "tensor": [9, 10, 11, 22, 26, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 87, 89, 90, 94, 99, 100, 101, 103, 104, 105, 106, 107, 108, 125, 130, 134, 135], "tensorboard": 32, "tensorboardx": 32, "tensorflow": 85, "teon": 35, "term": [2, 4, 8, 89, 95], "terri": 147, "test": [9, 10, 11, 16, 21, 24, 25, 27, 28, 30, 33, 68, 71, 73, 74, 95, 102, 115, 119, 122, 124, 125, 138, 146, 147], "test_acc": [29, 32], "test_accuraci": 32, "test_bal_acc": 5, "test_dataload": 32, "test_load": 32, "test_loss": 32, "test_model": 32, "test_sampl": 5, "test_set": [2, 8, 29, 31, 32], "test_siz": [5, 8, 29], "test_step": 32, "test_y_pr": 5, "text": [9, 10, 11, 29, 140], "textcolor": 140, "tf": [42, 60], "than": [2, 5, 8, 9, 10, 11, 12, 14, 16, 27, 32, 37, 55, 68, 75, 82, 113, 119, 125, 147], "thei": [2, 3, 4, 8, 14, 16, 26, 27, 28, 29, 30, 32, 117, 147], "them": [3, 4, 5, 12, 14, 16, 17, 19, 26, 27, 29, 32, 68, 71, 85, 86, 87, 88, 89, 90, 94, 95, 98, 100, 101, 102, 103, 104, 105, 106, 109, 125, 145], "theo": [11, 147], "therefor": [2, 8, 12, 16, 27, 28, 29, 30, 32, 133], "thi": [0, 2, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 22, 31, 48, 49, 50, 68, 69, 70, 71, 73, 75, 76, 77, 78, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 117, 119, 121, 122, 124, 125, 127, 133, 138, 141, 145, 147], "thing": 145, "thinker": [107, 147], "thinkerinvari": 107, "third": 32, "third_kernel_s": [96, 97], "thirti": 87, "thoma": 147, "those": [2, 4, 5, 8, 12, 68, 113, 114, 125], "though": [14, 16, 29, 32], "thread": 14, "three": [4, 16, 29, 32, 68, 69, 75, 90, 92, 93, 99, 125, 141], "through": [3, 4, 11, 12, 14, 16, 20, 22, 27, 47, 64, 72, 79, 87, 89, 101, 103, 104, 105, 147], "throughout": [2, 8, 9, 10, 11, 28, 29, 32], "thu": [2, 4, 8, 111], "thumb": [2, 8, 27], "th\u00e9o": 147, "tibor": [35, 147], "tick_param": [2, 5, 8, 12, 27, 28], "tidnet": [26, 147], "tight": [68, 125], "tight_layout": [2, 4, 5, 8, 9, 10, 11, 27, 28, 30], "tii": 85, "time": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 53, 67, 68, 69, 71, 76, 79, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 121, 122, 124, 125, 126, 130, 131, 134, 137, 147], "time_as_index": 111, "time_conv_size_": [104, 109], "time_frequ": 3, "time_taken": 16, "timecrop": 147, "timedistribut": [9, 10, 147], "timeseri": 134, "timeseriesloss": 2, "timestep": 27, "titl": [3, 12, 29, 30, 35], "tmax": [2, 8, 12, 111], "tmin": [2, 8, 12, 16, 19, 111], "tmp": [16, 18], "tmp58_7gchz": 16, "tmp6cocvbaq": 16, "tmp_dir": 16, "tmpdir": 18, "tmphx6rtu3t": 16, "tmpjs7b7kr7": 18, "tmpofgud3qa": 16, "tnsre": [10, 92, 93, 105], "to_csv": 14, "to_dense_prediction_model": [2, 27, 31, 95, 147], "to_list": [5, 9, 10, 11], "to_numpi": [31, 131, 132, 133], "tobia": 35, "todo": 2, "toe": 73, "togeth": [16, 27, 147], "token": 101, "tokenizor": 101, "toml": 147, "tone": 70, "tongu": [18, 21, 27, 28, 29, 30, 32, 70], "tonio": 35, "too": 11, "tool": [2, 4, 8, 76, 142, 145], "toolbox": 142, "top": [5, 9, 10, 11, 35], "topic": [1, 24, 35], "torch": [2, 3, 4, 5, 8, 9, 10, 11, 14, 22, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 125, 130, 134, 135, 136, 138, 147], "torchinfo": [27, 28, 29, 32, 95, 147], "torchmetr": 32, "torchvis": [2, 8, 28, 30], "total": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 70, 146], "tpu": 32, "tqdm": 32, "tr_idx": 29, "track_running_stat": 10, "tracker": 141, "tradeoff": 16, "tradit": 90, "train": [12, 14, 20, 21, 33, 68, 71, 73, 74, 79, 87, 95, 101, 102, 115, 119, 122, 124, 125, 138, 146, 147], "train_acc": 5, "train_accuraci": [3, 27, 28, 29, 30, 32], "train_bal_acc": [5, 9, 10, 11], "train_dataload": 32, "train_i": [4, 30], "train_indic": 29, "train_load": 32, "train_loss": [2, 3, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 68, 125], "train_misclass": [27, 28], "train_neg_root_mean_squared_error": 31, "train_one_epoch": 32, "train_pearson_r": 8, "train_r2": 8, "train_sampl": [5, 9, 10, 11], "train_set": [2, 3, 4, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32], "train_split": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31, 68, 125], "train_subset": 29, "train_test_split": [5, 8, 29], "train_val_split": 29, "train_x": [4, 30], "train_y_pr": 5, "trainabl": [3, 4, 11, 26, 27, 28, 29, 32], "trained_model": 14, "trainer": 32, "training_scor": 4, "training_setup": 14, "training_setup_end": 14, "training_setup_start": 14, "training_step": 32, "tran": [5, 9, 10], "transact": [5, 10, 85, 89, 90, 92, 93, 104, 105], "transax": 29, "transform": [2, 5, 8, 9, 10, 11, 20, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 72, 79, 80, 81, 82, 87, 90, 95, 101, 125, 147], "transformerencod": 90, "transforms_freq": 4, "transforms_spati": 4, "transforms_tim": 4, "transit": [16, 37, 55, 113], "translat": 3, "transposit": 147, "tremend": 101, "trend": 31, "tri": 133, "trial": [2, 3, 4, 8, 19, 21, 27, 28, 29, 30, 31, 32, 68, 70, 73, 80, 82, 119, 125, 131, 132, 136, 137, 147], "trial_label": [68, 125, 136], "trial_predict": [68, 125, 136], "trial_start_offset_sampl": [3, 4, 5, 9, 10, 11, 18, 19, 21, 27, 28, 29, 30, 32, 82, 119], "trial_start_offset_second": [3, 4, 27, 28, 29, 30, 32], "trial_stop_offset_sampl": [3, 4, 5, 9, 10, 11, 18, 19, 21, 27, 28, 29, 30, 31, 32, 82, 119, 147], "trial_stop_offset_second": [29, 30], "trialwis": [2, 4, 8, 20, 27, 28, 30, 68, 125, 136, 147], "trigger": 11, "troubleshoot": 144, "true": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 46, 47, 48, 49, 50, 68, 71, 72, 75, 76, 77, 78, 79, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 115, 117, 118, 119, 120, 123, 125, 128, 129, 131, 132, 133, 136, 138, 147], "truncat": 101, "trust": 4, "trustworthi": [28, 29, 30], "truth": 31, "try": [3, 4, 12, 18, 22, 24, 30, 141, 145], "tsne": 5, "tugraz": 27, "tuh": [7, 13, 14, 15, 23, 24, 71, 78, 87, 115, 118, 124, 146, 147], "tuh_eeg": [12, 14, 22, 77, 78], "tuh_eeg_abnorm": 14, "tuh_path": [12, 14, 22], "tuh_preproc": 12, "tuh_window": [12, 22], "tuhabnorm": [14, 18, 147], "tuk": [5, 9, 10, 11], "tune": [24, 25, 32, 33, 71, 74, 90, 95, 102, 115, 119, 122, 124, 138, 146, 147], "tuning_playbook": 30, "tupl": [29, 30, 46, 54, 63, 68, 72, 76, 87, 95, 110, 116, 123, 125, 128, 140], "tutori": [2, 3, 4, 5, 8, 9, 10, 11, 22, 24, 26, 27, 28, 29, 30, 32, 145, 147], "tuzel": [37, 44, 52, 55, 61, 66], "tweak": 29, "twelfth": 101, "twenti": 70, "twice": 113, "twinx": [2, 5, 8, 27, 28], "two": [4, 5, 9, 10, 11, 12, 14, 16, 18, 27, 29, 32, 46, 52, 63, 70, 73, 76, 94, 99, 101, 103, 113, 116, 117, 128, 129, 135], "type": [2, 3, 4, 8, 11, 26, 27, 28, 29, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 52, 63, 68, 71, 73, 80, 81, 82, 83, 94, 95, 99, 101, 108, 110, 113, 114, 116, 117, 118, 119, 121, 122, 124, 125, 127, 129, 135, 137, 140, 147], "typic": [27, 68, 111, 125], "u": [3, 5, 7, 13, 24, 30, 71, 76, 95, 109, 115, 119, 124, 126, 127, 129, 138, 140, 145, 146, 147], "ufabc": 4, "ul": 75, "ultim": 14, "ultrabold": 140, "ultralight": 140, "umap": 5, "unabl": 4, "unaffect": [68, 125], "uncov": [4, 5, 128], "undefinedmetricwarn": 10, "under": [5, 14, 69, 124, 145, 147], "underli": [2, 5, 8, 28, 30, 115], "underscore_cas": 0, "understand": [5, 24, 29, 99], "unexpect": 141, "unfilt": 123, "unifi": 147, "uniform": 54, "uniformli": [42, 46, 47, 48, 49, 50, 60, 126], "uniniti": [4, 68, 125], "uninstanti": [68, 125], "unintend": 105, "uniqu": [5, 9, 10, 11, 21, 68, 72, 75, 125], "unit": [11, 26, 113, 145], "unit_mul": 26, "univers": [12, 73, 77, 78, 147], "unknown": [31, 133], "unlabel": 5, "unless": [32, 125], "unmodifi": [68, 125], "unpickl": [68, 125], "unreli": 29, "unseen": 29, "until": [29, 70], "untrac": 147, "unverifi": 27, "up": [16, 17, 70, 109, 116, 147], "updat": [32, 68, 69, 71, 72, 79, 82, 119, 123, 125, 144, 147], "update_path": [17, 19], "upon": [18, 26], "upper": [12, 16, 113], "upsampl": [11, 109, 116], "upward": 73, "url": 35, "urllib3": 27, "us": [2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 35, 37, 39, 40, 44, 46, 47, 48, 49, 50, 53, 56, 58, 60, 61, 64, 68, 70, 73, 75, 79, 85, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 103, 106, 107, 111, 113, 114, 116, 117, 125, 133, 136, 141, 144, 145, 146, 147], "usag": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 141, 147], "use_abs_pos_emb": 101, "use_cach": [68, 125, 131, 132], "use_deterministic_algorithm": 138, "use_mean_pool": 101, "use_mlp": 86, "user": [27, 68, 125, 141, 143, 144, 147], "userwarn": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 18, 19, 26, 27, 28, 29, 30, 31, 32], "usleep": [11, 26, 147], "usual": [2, 3, 4, 8, 16, 29, 32, 68, 125], "util": [2, 3, 4, 5, 8, 9, 10, 11, 14, 18, 22, 26, 27, 28, 30, 31, 32, 68, 125, 147], "uv": [2, 3, 4, 5, 8, 9, 10, 12, 27, 28, 29, 30, 32], "v": [2, 3, 4, 5, 8, 9, 10, 12, 16, 27, 28, 29, 30, 32, 92, 93, 96, 97, 99, 106], "v1": [22, 32], "v2": [14, 101], "v4": 97, "v_": 122, "v_num": 32, "v_t": 122, "val_idx": 29, "val_indic": 29, "val_subset": 29, "valentin": 147, "valid": [2, 21, 26, 27, 31, 32, 68, 105, 117, 118, 119, 125, 133, 134, 147], "valid_acc": [3, 5, 9, 10, 11, 26, 28, 29, 30], "valid_accuraci": [3, 27, 28, 29, 30], "valid_bal_acc": [5, 9, 10, 11], "valid_loss": [2, 3, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31], "valid_misclass": [27, 28], "valid_neg_root_mean_squared_error": 31, "valid_pearson_r": 8, "valid_r2": 8, "valid_sampl": [5, 9, 10, 11], "valid_set": [2, 3, 8, 9, 10, 11, 27, 28, 31], "valid_y_pr": 5, "validation_scor": 4, "validsplit": [26, 30, 68, 125], "valu": [2, 4, 5, 8, 9, 10, 11, 12, 26, 27, 28, 30, 31, 32, 43, 46, 63, 68, 71, 72, 79, 82, 94, 99, 101, 107, 113, 114, 116, 117, 118, 119, 125, 134, 135, 136, 147], "valueerror": [14, 26, 31, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109], "vaquerizo": [92, 93], "var_nam": [3, 4, 11, 26, 27, 28, 29, 32, 95], "variabl": [2, 4, 8, 29, 30, 69, 138], "varianc": [29, 30, 122], "varun": 30, "vazquez": [92, 93], "ve": 141, "vector": [9, 10, 101, 113, 116], "verbos": [2, 3, 4, 8, 29, 30, 68, 69, 111, 113, 114, 116, 117, 118, 119, 120, 125, 147], "veri": [11, 29, 32, 71, 99, 119, 124], "verif": 27, "verifi": 145, "version": [2, 3, 4, 5, 9, 10, 18, 20, 21, 22, 29, 30, 31, 68, 75, 86, 87, 90, 95, 99, 101, 111, 112, 113, 114, 116, 117, 125, 141, 143, 144, 145], "version_0": 32, "versu": 31, "verticalalign": 29, "via": [26, 28, 29, 30, 109, 113, 143, 144, 147], "view": [2, 4, 8, 22, 69], "villar": [92, 93], "vinai": [28, 29, 30], "viridi": 5, "virtual": 117, "vision": 94, "visit": [26, 29], "visual": [2, 8, 9, 10, 11, 12, 26, 27, 28, 30, 31, 35, 73, 88, 90, 98, 100, 101, 102, 142, 147], "vmax": 140, "vmin": 140, "vol": [10, 105], "volt": 12, "volta": [68, 125], "volum": 35, "volv": 73, "vqsnp": 101, "vytauta": 147, "w": [5, 9, 10, 11, 12, 27, 28, 29, 30, 75], "w_1": 10, "w_2": 10, "wa": [4, 5, 9, 10, 11, 27, 28, 29, 32, 68, 70, 73, 87, 90, 105, 125, 126, 147], "wai": [2, 5, 8, 16, 21, 24, 26, 29, 105, 143, 145], "wainrib": [5, 9, 10, 104], "wake": [9, 10, 11, 76], "wang": [44, 61], "want": [12, 14, 18, 21, 22, 24, 28, 29, 30, 32, 68, 125, 142, 145], "warm": [68, 125], "warm_start": [68, 125], "warn": [2, 3, 4, 5, 8, 9, 10, 12, 14, 16, 18, 19, 26, 27, 28, 29, 30, 31, 32, 70, 105, 112, 118, 119, 138, 147], "wave": [5, 9, 10, 11], "waytowich": [96, 97], "we": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 35, 73, 87, 90, 125, 138, 141, 144, 145], "weaker": 113, "websit": 4, "wei": 101, "weight": [5, 9, 10, 11, 29, 30, 32, 85, 87, 101, 140], "weight_decai": [2, 3, 4, 8, 27, 28, 29, 32], "welcom": 22, "well": [2, 5, 8, 12, 26, 27, 28, 29, 32, 82, 119, 142, 147], "were": [2, 8, 9, 11, 14, 19, 26, 30, 70, 71, 73, 90, 103, 113, 147], "westov": [40, 57, 87], "what": [26, 29, 68, 85, 118, 119, 125], "whatev": [68, 125], "whats_new": 147, "when": [5, 9, 10, 11, 14, 16, 22, 27, 29, 30, 32, 35, 41, 42, 47, 48, 49, 50, 54, 60, 64, 68, 69, 74, 80, 81, 82, 85, 90, 109, 112, 113, 114, 117, 118, 119, 124, 125, 138, 141, 147], "whenev": 16, "where": [2, 4, 8, 9, 10, 22, 27, 28, 29, 37, 46, 47, 52, 55, 63, 64, 66, 68, 69, 71, 80, 99, 101, 124, 125, 136, 138, 147], "whether": [5, 14, 26, 38, 39, 40, 42, 47, 48, 49, 50, 51, 53, 54, 60, 64, 68, 71, 79, 80, 81, 82, 83, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 106, 107, 109, 118, 123, 124, 125, 128, 133, 138, 141], "which": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 19, 20, 21, 24, 26, 27, 29, 30, 32, 35, 36, 39, 42, 47, 58, 60, 64, 68, 71, 72, 73, 79, 95, 99, 105, 108, 113, 116, 117, 125, 127, 128, 129, 141], "while": [4, 5, 14, 29, 32, 73, 85, 86, 90, 94, 99, 103, 137], "white": [44, 61], "whitespac": 147, "who": 142, "whole": [2, 8, 9, 10], "whose": [68, 82, 119, 125], "wide": 94, "width": [12, 30, 99, 107, 113], "wil": 20, "wild": 87, "wilson": [20, 147], "wimpff": [86, 147], "win_len_": 14, "winddow_size_sampl": 118, "window": [14, 16, 18, 19, 21, 26, 68, 71, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 118, 119, 125, 126, 127, 128, 129, 136, 137, 147], "window_ind": 17, "window_kwarg": [27, 28, 71], "window_len": 134, "window_len_": 14, "window_len_sampl": 14, "window_preproc_kwarg": 71, "window_s": 147, "window_size_": [5, 9, 10, 11], "window_size_sampl": [2, 5, 8, 9, 10, 11, 12, 14, 17, 19, 22, 27, 31, 80, 81, 82, 118, 119, 120], "window_stride_sampl": [2, 5, 9, 10, 11, 12, 14, 17, 19, 22, 27, 31, 80, 81, 82, 118, 119], "windows_d": [14, 16], "windows_dataset": [3, 4, 5, 8, 9, 10, 11, 17, 18, 19, 27, 28, 29, 30, 31, 32, 80, 81, 82, 118, 119], "windows_dataset_load": 18, "windowsattentionblock": 101, "windowsdataset": [3, 18, 26, 71, 80, 81, 82, 83, 118, 119, 124, 125, 147], "winner": [92, 93], "wise": [3, 4, 5, 9, 10, 11], "with_f1_scor": 140, "with_skip_connect": [11, 109], "within": [3, 4, 73, 85, 86, 90, 94, 99, 107, 128, 147], "withinconsist": 82, "without": [16, 26, 27, 29, 30, 32, 68, 125, 135, 147], "wolfram": 35, "work": [2, 3, 4, 5, 8, 9, 10, 12, 16, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 68, 95, 109, 111, 125, 133, 142, 144, 147], "worker": [14, 32, 136, 147], "worker_init_fn": 14, "world": 32, "wors": 133, "would": [3, 26, 27, 29, 32, 68, 88, 102, 125], "wrap": [5, 26, 32, 71], "wrapper": [26, 28, 29, 87], "write": [16, 18], "written": [11, 124, 143], "wrong": 147, "wspace": 12, "wu": 89, "www": [12, 14, 35, 69, 77, 78], "x": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 80, 81, 82, 85, 86, 87, 89, 90, 94, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 116, 121, 122, 125, 130, 133, 134, 136], "x1": [5, 128], "x2": [5, 128], "x27": 4, "x_i": 17, "x_t": [121, 122], "x_tr": 3, "x_train": 29, "xlabel": [3, 12, 29, 30], "xlim": 12, "xxx": 14, "y": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 80, 81, 82, 89, 90, 94, 116, 125, 133], "y1": 5, "y2": 5, "y_estim": 31, "y_gt": 31, "y_hat": 32, "y_i": 17, "y_pred": [5, 9, 10, 11, 27, 28, 68, 109, 132], "y_proba": [68, 125], "y_test": [2, 8, 29], "y_train": [2, 8, 9, 10, 11, 29], "y_true": [5, 9, 10, 11, 27, 28, 68], "y_valid": [2, 8], "yang": [86, 87], "yang2023": 87, "yann": [46, 63, 135], "yao2001": 117, "yassin": [99, 147], "yassine2023": 99, "yassine2023cod": 99, "ycq091044": 87, "ye": 101, "year": [12, 35], "yerr": 4, "yet": [17, 19, 95, 145], "yield": [5, 14, 20, 70, 107, 141], "ylabel": [3, 12, 30], "ylgnbu": 30, "ylim": 12, "yml": 147, "yonghao": 147, "you": [2, 3, 4, 5, 8, 9, 11, 12, 16, 17, 18, 19, 21, 22, 24, 27, 28, 29, 32, 35, 68, 125, 133, 141, 143, 144, 145], "your": [2, 3, 4, 8, 14, 16, 21, 24, 25, 27, 28, 30, 33, 35, 68, 71, 74, 85, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 106, 107, 109, 115, 119, 122, 124, 125, 138, 141, 143, 146], "ys1": 5, "ys2": 5, "ytick": 12, "z": [5, 9, 10, 31, 47, 50, 64, 106], "z1": 5, "z2": 5, "zachari": 30, "zamboni": 147, "zeghidour": [38, 39, 56, 58], "zenodo": 35, "zerfowski": 86, "zero": [11, 16, 52, 66, 113, 116, 119, 122, 147], "zero_divis": 10, "zero_grad": [14, 32], "zhang": [46, 63, 94, 135], "zhao": 101, "zheng": 90, "zhiliang": 101, "zhong": [44, 61], "zip": [5, 16, 24], "zipbal": 145, "zk881ps0522": [2, 8, 69], "zscore": 147, "zwinderman": [5, 9, 10, 11], "\u015bliwowski": 147, "\u03bcv": 70, "\u03c6max": 4}, "titles": ["API Reference", "Advanced neural network training strategies", "Fingers flexion cropped decoding on BCIC IV 4 ECoG Dataset", "Data Augmentation on BCIC IV 2a Dataset", "Searching the best data augmentation on BCIC IV 2a Dataset", "Self-supervised learning on EEG with relative positioning", "Computation times", "Applied examples on real-world datasets", "Fingers flexion decoding on BCIC IV 4 ECoG Dataset", "Sleep staging on the Sleep Physionet dataset using Chambon2018 network", "Sleep staging on the Sleep Physionet dataset using Eldele2021", "Sleep staging on the Sleep Physionet dataset using U-Sleep network", "Process a big data EEG resource (TUH EEG Corpus)", "Computation times", "Benchmarking eager and lazy loading", "Loading and organizing data", "Benchmarking preprocessing with parallelization and serialization", "Custom Dataset Example", "Load and save dataset example", "MNE Dataset Example", "MOABB Dataset Example", "Split Dataset Example", "Multiple discrete targets with the TUH EEG Corpus", "Computation times", "Examples", "Basic model building and training", "Simple training on MNE epochs", "Cropped Decoding on BCIC IV 2a Dataset", "Basic Brain Decoding on EEG Data", "How to train, test and tune your model?", "Hyperparameter tuning with scikit-learn", "Convolutional neural network regression model on fake data.", "Training a Braindecode model in PyTorch", "Computation times", "Computation times", "How to cite Braindecode", "braindecode.augmentation.AugmentedDataLoader", "braindecode.augmentation.BandstopFilter", "braindecode.augmentation.ChannelsDropout", "braindecode.augmentation.ChannelsShuffle", "braindecode.augmentation.ChannelsSymmetry", "braindecode.augmentation.Compose", "braindecode.augmentation.FTSurrogate", "braindecode.augmentation.FrequencyShift", "braindecode.augmentation.GaussianNoise", "braindecode.augmentation.IdentityTransform", "braindecode.augmentation.Mixup", "braindecode.augmentation.SensorsRotation", "braindecode.augmentation.SensorsXRotation", "braindecode.augmentation.SensorsYRotation", "braindecode.augmentation.SensorsZRotation", "braindecode.augmentation.SignFlip", "braindecode.augmentation.SmoothTimeMask", "braindecode.augmentation.TimeReverse", "braindecode.augmentation.Transform", "braindecode.augmentation.functional.bandstop_filter", "braindecode.augmentation.functional.channels_dropout", "braindecode.augmentation.functional.channels_permute", "braindecode.augmentation.functional.channels_shuffle", "braindecode.augmentation.functional.frequency_shift", "braindecode.augmentation.functional.ft_surrogate", "braindecode.augmentation.functional.gaussian_noise", "braindecode.augmentation.functional.identity", "braindecode.augmentation.functional.mixup", "braindecode.augmentation.functional.sensors_rotation", "braindecode.augmentation.functional.sign_flip", "braindecode.augmentation.functional.smooth_time_mask", "braindecode.augmentation.functional.time_reverse", "braindecode.classifier.EEGClassifier", "braindecode.datasets.BCICompetitionIVDataset4", "braindecode.datasets.BNCI2014001", "braindecode.datasets.BaseConcatDataset", "braindecode.datasets.BaseDataset", "braindecode.datasets.HGD", "braindecode.datasets.MOABBDataset", "braindecode.datasets.NMT", "braindecode.datasets.SleepPhysionet", "braindecode.datasets.TUH", "braindecode.datasets.TUHAbnormal", "braindecode.datasets.WindowsDataset", "braindecode.datasets.create_from_X_y", "braindecode.datasets.create_from_mne_epochs", "braindecode.datasets.create_from_mne_raw", "braindecode.datautil.load_concat_dataset", "braindecode.datautil.save_concat_dataset", "braindecode.models.ATCNet", "braindecode.models.AttentionBaseNet", "braindecode.models.BIOT", "braindecode.models.Deep4Net", "braindecode.models.DeepSleepNet", "braindecode.models.EEGConformer", "braindecode.models.EEGITNet", "braindecode.models.EEGInception", "braindecode.models.EEGInceptionERP", "braindecode.models.EEGInceptionMI", "braindecode.models.EEGModuleMixin", "braindecode.models.EEGNetv1", "braindecode.models.EEGNetv4", "braindecode.models.EEGResNet", "braindecode.models.EEGSimpleConv", "braindecode.models.HybridNet", "braindecode.models.Labram", "braindecode.models.ShallowFBCSPNet", "braindecode.models.SleepStagerBlanco2020", "braindecode.models.SleepStagerChambon2018", "braindecode.models.SleepStagerEldele2021", "braindecode.models.TCN", "braindecode.models.TIDNet", "braindecode.models.TimeDistributed", "braindecode.models.USleep", "braindecode.models.get_output_shape", "braindecode.preprocessing.Crop", "braindecode.preprocessing.DropChannels", "braindecode.preprocessing.Filter", "braindecode.preprocessing.Pick", "braindecode.preprocessing.Preprocessor", "braindecode.preprocessing.Resample", "braindecode.preprocessing.SetEEGReference", "braindecode.preprocessing.create_fixed_length_windows", "braindecode.preprocessing.create_windows_from_events", "braindecode.preprocessing.create_windows_from_target_channels", "braindecode.preprocessing.exponential_moving_demean", "braindecode.preprocessing.exponential_moving_standardize", "braindecode.preprocessing.filterbank", "braindecode.preprocessing.preprocess", "braindecode.regressor.EEGRegressor", "braindecode.samplers.BalancedSequenceSampler", "braindecode.samplers.RecordingSampler", "braindecode.samplers.RelativePositioningSampler", "braindecode.samplers.SequenceSampler", "braindecode.training.CroppedLoss", "braindecode.training.CroppedTimeSeriesEpochScoring", "braindecode.training.CroppedTrialEpochScoring", "braindecode.training.PostEpochTrainScoring", "braindecode.training.TimeSeriesLoss", "braindecode.training.mixup_criterion", "braindecode.training.predict_trials", "braindecode.training.trial_preds_from_window_preds", "braindecode.util.set_random_seeds", "braindecode.visualization.compute_amplitude_gradients", "braindecode.visualization.plot_confusion_matrix", "Frequently Asked Questions (FAQ)", "Braindecode", "Installation", "Installing from PyPI", "Installing from sources", "Computation times", "What\u2019s new"], "titleterms": {"": [29, 147], "0": 147, "06": 147, "07": 147, "1": [29, 32, 147], "10": 147, "11": 147, "12": 147, "14": 147, "2": [29, 32], "2021": 147, "2022": 147, "2a": [3, 4, 27], "3": 29, "4": [2, 8], "5": 147, "6": 147, "7": 147, "8": 147, "9": 147, "By": 21, "about": [29, 32], "advanc": [1, 24], "algorithm": 35, "an": [3, 4], "analys": 4, "api": [0, 147], "appli": [7, 24], "ask": 141, "atcnet": 85, "attentionbasenet": 86, "augment": [0, 3, 4, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "augmenteddataload": 36, "author": 147, "balancedsequencesampl": 126, "bandstop_filt": 55, "bandstopfilt": 37, "baseconcatdataset": 71, "basedataset": 72, "basic": [24, 25, 28], "bcic": [2, 3, 4, 8, 27], "bcicompetitionivdataset4": 69, "benchmark": [14, 16], "best": [4, 30], "between": 31, "big": 12, "biot": 87, "bnci2014001": 70, "brain": 28, "braindecod": [26, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145], "bug": [141, 147], "build": [24, 25], "can": 141, "care": [29, 32], "chambon2018": 9, "chang": 147, "channels_dropout": 56, "channels_permut": 57, "channels_shuffl": 58, "channelsdropout": 38, "channelsshuffl": 39, "channelssymmetri": 40, "choos": 31, "cite": [35, 141], "classifi": [0, 68], "clone": 145, "cnn": 31, "combin": 12, "compat": 26, "compos": [3, 41], "comput": [2, 6, 8, 12, 13, 23, 27, 28, 30, 32, 33, 34, 146], "compute_amplitude_gradi": 139, "conclus": 5, "confus": [27, 28], "convolut": 31, "corpu": [12, 22], "cover": [3, 4, 5, 12, 21, 26, 27, 28, 29, 30, 32], "cpu": 31, "creat": [2, 3, 4, 5, 8, 9, 10, 11, 12, 22, 27, 28, 29, 30, 32], "create_fixed_length_window": 118, "create_from_mne_epoch": 81, "create_from_mne_raw": 82, "create_from_x_i": 80, "create_windows_from_ev": 119, "create_windows_from_target_channel": 120, "crop": [2, 27, 111], "croppedloss": 130, "croppedtimeseriesepochscor": 131, "croppedtrialepochscor": 132, "cross": 29, "current": 147, "custom": 17, "cut": [2, 8, 12, 27, 32], "data": [0, 3, 4, 12, 15, 22, 24, 26, 27, 28, 29, 31], "dataload": 22, "dataset": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "datautil": [83, 84], "decod": [2, 8, 27, 28], "deep4net": 88, "deepsleepnet": 89, "defin": [3, 4, 29, 31, 32], "descript": 21, "desir": [3, 4], "dev0": 147, "discret": 22, "do": [30, 141], "document": 26, "dropchannel": 112, "eager": 14, "ecog": [2, 8], "eeg": [5, 12, 22, 28], "eegclassifi": [3, 4, 68], "eegconform": 90, "eegincept": 92, "eeginceptionerp": 93, "eeginceptionmi": 94, "eegitnet": 91, "eegmodulemixin": 95, "eegnetv1": 96, "eegnetv4": 97, "eegregressor": 125, "eegresnet": 98, "eegsimpleconv": 99, "eldele2021": 10, "enhanc": 147, "epoch": 26, "etc": [29, 32], "evalu": [29, 31, 32], "examin": 26, "exampl": [3, 4, 5, 7, 12, 17, 18, 19, 20, 21, 24, 26, 27, 28, 29, 30, 32, 36, 38, 41, 42, 43, 51, 52, 54, 69, 71, 72, 74, 76, 77, 78, 80, 81, 82, 83, 88, 95, 102, 104, 105, 108, 109, 110, 115, 118, 119, 120, 122, 124, 127, 128, 129, 130, 131, 132, 134, 138, 140], "explor": [22, 26], "exponential_moving_demean": 121, "exponential_moving_standard": 122, "extract": [3, 4, 5, 9, 10, 11, 28, 29, 30], "fake": 31, "faq": 141, "filter": 113, "filterbank": 123, "find": 26, "finger": [2, 8], "first": 29, "fit": 4, "flexion": [2, 8], "fold": 29, "found": 141, "frequency_shift": 59, "frequencyshift": 43, "frequent": 141, "from": [144, 145], "ft_surrog": 60, "ftsurrog": 42, "function": [29, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "gaussian_nois": 61, "gaussiannois": 44, "gener": 31, "get": [30, 141], "get_output_shap": 110, "github": 145, "gpu": 31, "help": 141, "hgd": 73, "homepag": 142, "hospit": 22, "how": [29, 32, 35, 141], "hybridnet": 100, "hyperparamet": [29, 30], "i": [29, 32, 141, 145], "ident": 62, "identitytransform": 45, "index": 21, "inform": 21, "inspect": 5, "instal": [143, 144, 145], "iv": [2, 3, 4, 8, 27], "k": 29, "labram": 101, "lazi": 14, "learn": [5, 26, 30], "let": 29, "level": 3, "lightn": 32, "list": 4, "load": [2, 3, 4, 5, 8, 9, 10, 11, 14, 15, 18, 21, 24, 26, 27, 28, 29, 30, 32], "load_concat_dataset": 83, "loop": 32, "manipul": 3, "manual": 3, "matrix": [27, 28], "mixup": [46, 63], "mixup_criterion": 135, "mne": [19, 26, 35], "moabb": 20, "moabbdataset": 74, "model": [0, 2, 3, 4, 5, 8, 9, 10, 11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "multipl": 22, "need": 30, "network": [1, 9, 11, 24, 30, 31], "neural": [1, 24, 30, 31], "new": 147, "nmt": 75, "observ": 21, "offlin": 32, "one": 3, "onlin": 26, "option": [29, 32], "organ": [15, 24], "other": 35, "own": 26, "parallel": 16, "paramet": 27, "perform": 5, "physionet": [9, 10, 11], "pick": 114, "plot": [2, 4, 8, 9, 10, 11, 27, 28, 30], "plot_confusion_matrix": 140, "posit": 5, "postepochtrainscor": 133, "predict_tri": 136, "prepar": [2, 8, 28], "preprocess": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 32, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "preprocessor": 115, "pretext": 5, "process": 12, "processor": 31, "pure": 32, "pypi": 144, "python": 141, "pytorch": 32, "question": 141, "raw": [5, 32], "real": [7, 24], "record": [5, 12], "recordingsampl": 127, "refer": [0, 4, 5, 9, 10, 11, 26, 27, 28, 29, 30, 31, 141], "regress": 31, "regressor": [0, 125], "rel": 5, "relativepositioningsampl": 128, "repositori": 145, "represent": 5, "resampl": 116, "resourc": 12, "result": [2, 4, 5, 8, 9, 10, 11, 27, 28, 30], "row": 21, "sampler": [0, 5, 9, 10, 11, 126, 127, 128, 129], "save": 18, "save_concat_dataset": 84, "scikit": [26, 30], "search": 4, "second": 29, "select": 12, "self": 5, "sensors_rot": 64, "sensorsrot": 47, "sensorsxrot": 48, "sensorsyrot": 49, "sensorszrot": 50, "sequenc": [9, 10, 11], "sequencesampl": 129, "serial": 16, "session": 3, "set": [3, 5, 28], "set_random_se": 138, "seteegrefer": 117, "shallowfbcspnet": 102, "should": [29, 32], "sign_flip": 65, "signflip": 51, "simpl": [26, 29], "sleep": [5, 9, 10, 11], "sleepphysionet": 76, "sleepstagerblanco2020": 103, "sleepstagerchambon2018": 104, "sleepstagereldele2021": 105, "smooth_time_mask": 66, "smoothtimemask": 52, "sourc": 145, "split": [2, 3, 4, 5, 8, 9, 10, 11, 21, 27, 28, 29, 30, 32], "stage": [5, 9, 10, 11], "step": 12, "still": 141, "strategi": [1, 24], "structur": 32, "summari": [70, 73], "supervis": 5, "t": 141, "target": 22, "task": 5, "tcn": 106, "templ": 22, "test": [2, 5, 8, 29, 31, 32, 145], "thi": [3, 4, 5, 12, 21, 26, 27, 28, 29, 30, 32], "think": 141, "third": 29, "tidnet": 107, "time": [6, 13, 23, 33, 34, 146], "time_revers": 67, "timedistribut": 108, "timerevers": 53, "timeseriesloss": 134, "train": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 130, 131, 132, 133, 134, 135, 136, 137], "transform": [3, 4, 32, 54], "trial_preds_from_window_pr": 137, "tuh": [12, 22, 77], "tuhabnorm": 78, "tuhmock": 12, "tune": [29, 30], "u": 11, "univers": 22, "us": [5, 9, 10, 11, 12, 36, 38, 41, 42, 43, 51, 52, 54, 69, 71, 72, 74, 76, 77, 78, 80, 81, 82, 83, 88, 95, 102, 104, 105, 108, 109, 110, 115, 118, 119, 120, 122, 124, 127, 128, 129, 130, 131, 132, 134, 138, 140], "usleep": 109, "util": [0, 29, 138], "val": 29, "valid": [3, 4, 5, 8, 9, 10, 11, 28, 29, 30], "version": 147, "visual": [0, 3, 5, 29, 139, 140], "want": 26, "what": [141, 147], "why": [29, 30, 32], "window": [2, 3, 4, 5, 8, 9, 10, 11, 12, 22, 27, 28, 29, 30, 31, 32], "windowsdataset": 79, "work": [141, 145], "world": [7, 24], "you": [26, 30], "your": [26, 29, 32, 145]}})