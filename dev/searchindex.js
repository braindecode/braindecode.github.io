Search.setIndex({"alltitles": {"API Reference": [[0, null]], "API changes": [[153, "api-changes"], [153, "id13"], [153, "id16"], [153, "id19"], [153, "id22"]], "Advanced neural network training strategies": [[1, null], [24, "advanced-neural-network-training-strategies"]], "Analysing the best fit": [[4, "analysing-the-best-fit"]], "Applied examples on real-world datasets": [[7, null], [24, "applied-examples-on-real-world-datasets"]], "Augmentation": [[0, "augmentation"]], "Authors": [[153, "authors"]], "Basic Brain Decoding on EEG Data": [[28, null]], "Basic model building and training": [[24, "basic-model-building-and-training"], [25, null]], "Benchmarking eager and lazy loading": [[14, null]], "Benchmarking preprocessing with parallelization and serialization": [[16, null]], "Braindecode Homepage": [[148, null]], "Bugs": [[153, "bugs"], [153, "id12"], [153, "id15"], [153, "id18"], [153, "id21"]], "By description information": [[21, "by-description-information"]], "By row index": [[21, "by-row-index"]], "Choosing between GPU and CPU processors": [[31, "choosing-between-gpu-and-cpu-processors"]], "Citing other algorithms": [[35, "citing-other-algorithms"]], "Citing the Braindecode": [[35, "citing-the-braindecode"]], "Citing the MNE": [[35, "citing-the-mne"]], "Classifier": [[0, "classifier"]], "Clone the repository from GitHub": [[151, "clone-the-repository-from-github"]], "Combining preprocessing steps": [[12, "combining-preprocessing-steps"]], "Computation times": [[6, null], [13, null], [23, null], [33, null], [34, null], [152, null]], "Conclusion": [[5, "conclusion"]], "Convolutional neural network regression model on fake data.": [[31, null]], "Create Pytorch model": [[32, "create-pytorch-model"]], "Create an EEGClassifier with the desired augmentation": [[3, "create-an-eegclassifier-with-the-desired-augmentation"], [4, "create-an-eegclassifier-with-the-desired-augmentation"]], "Create model": [[2, "create-model"], [3, "create-model"], [4, "create-model"], [8, "create-model"], [9, "create-model"], [10, "create-model"], [11, "create-model"], [29, "create-model"], [30, "create-model"]], "Create model and compute windowing parameters": [[27, "create-model-and-compute-windowing-parameters"]], "Create sequence samplers": [[9, "create-sequence-samplers"], [10, "create-sequence-samplers"], [11, "create-sequence-samplers"]], "Creating Temple University Hospital (TUH) EEG Corpus Dataset": [[22, "creating-temple-university-hospital-tuh-eeg-corpus-dataset"]], "Creating Windows": [[22, "creating-windows"]], "Creating a model": [[28, "creating-a-model"]], "Creating samplers": [[5, "creating-samplers"]], "Creating the dataset using TUHMock": [[12, "creating-the-dataset-using-tuhmock"]], "Creating the model": [[5, "creating-the-model"]], "Cropped Decoding on BCIC IV 2a Dataset": [[27, null]], "Current 0.7 (10-2022)": [[153, "current-0-7-10-2022"]], "Current 0.8 (11-2022)": [[153, "current-0-8-11-2022"]], "Current 0.9 (dev0)": [[153, "current-0-9-dev0"]], "Custom Dataset Example": [[17, null]], "Cut Compute Windows": [[2, "cut-compute-windows"], [8, "cut-compute-windows"], [12, "cut-compute-windows"], [32, "cut-compute-windows"]], "Cut the data into windows": [[27, "cut-the-data-into-windows"]], "Data Augmentation": [[4, null]], "Data Augmentation on BCIC IV 2a Dataset": [[3, null]], "Data Utils": [[0, "data-utils"]], "Data windowing": [[31, "data-windowing"]], "DataLoader for Model Training": [[22, "dataloader-for-model-training"]], "Dataset summary": [[74, null], [77, null]], "Datasets": [[0, "datasets"]], "Defining a CNN regression model": [[31, "defining-a-cnn-regression-model"]], "Defining a Transform": [[3, "defining-a-transform"]], "Defining a list of transforms": [[4, "defining-a-list-of-transforms"]], "Enhancements": [[153, "enhancements"], [153, "id7"], [153, "id14"], [153, "id17"], [153, "id20"]], "Examining the model": [[26, "examining-the-model"]], "Examples": [[24, null]], "Examples using braindecode.augmentation.AugmentedDataLoader": [[36, "examples-using-braindecode-augmentation-augmenteddataloader"]], "Examples using braindecode.augmentation.ChannelsDropout": [[38, "examples-using-braindecode-augmentation-channelsdropout"]], "Examples using braindecode.augmentation.Compose": [[41, "examples-using-braindecode-augmentation-compose"]], "Examples using braindecode.augmentation.FTSurrogate": [[42, "examples-using-braindecode-augmentation-ftsurrogate"]], "Examples using braindecode.augmentation.FrequencyShift": [[43, "examples-using-braindecode-augmentation-frequencyshift"]], "Examples using braindecode.augmentation.SignFlip": [[53, "examples-using-braindecode-augmentation-signflip"]], "Examples using braindecode.augmentation.SmoothTimeMask": [[54, "examples-using-braindecode-augmentation-smoothtimemask"]], "Examples using braindecode.augmentation.Transform": [[56, "examples-using-braindecode-augmentation-transform"]], "Examples using braindecode.datasets.BCICompetitionIVDataset4": [[73, "examples-using-braindecode-datasets-bcicompetitionivdataset4"]], "Examples using braindecode.datasets.BaseConcatDataset": [[75, "examples-using-braindecode-datasets-baseconcatdataset"]], "Examples using braindecode.datasets.BaseDataset": [[76, "examples-using-braindecode-datasets-basedataset"]], "Examples using braindecode.datasets.MOABBDataset": [[78, "examples-using-braindecode-datasets-moabbdataset"]], "Examples using braindecode.datasets.SleepPhysionet": [[80, "examples-using-braindecode-datasets-sleepphysionet"]], "Examples using braindecode.datasets.TUH": [[81, "examples-using-braindecode-datasets-tuh"]], "Examples using braindecode.datasets.TUHAbnormal": [[82, "examples-using-braindecode-datasets-tuhabnormal"]], "Examples using braindecode.datasets.create_from_X_y": [[84, "examples-using-braindecode-datasets-create-from-x-y"]], "Examples using braindecode.datasets.create_from_mne_epochs": [[85, "examples-using-braindecode-datasets-create-from-mne-epochs"]], "Examples using braindecode.datasets.create_from_mne_raw": [[86, "examples-using-braindecode-datasets-create-from-mne-raw"]], "Examples using braindecode.datautil.load_concat_dataset": [[87, "examples-using-braindecode-datautil-load-concat-dataset"]], "Examples using braindecode.models.Deep4Net": [[93, "examples-using-braindecode-models-deep4net"]], "Examples using braindecode.models.EEGModuleMixin": [[100, "examples-using-braindecode-models-eegmodulemixin"]], "Examples using braindecode.models.ShallowFBCSPNet": [[108, "examples-using-braindecode-models-shallowfbcspnet"]], "Examples using braindecode.models.SleepStagerChambon2018": [[110, "examples-using-braindecode-models-sleepstagerchambon2018"]], "Examples using braindecode.models.SleepStagerEldele2021": [[111, "examples-using-braindecode-models-sleepstagereldele2021"]], "Examples using braindecode.models.TimeDistributed": [[114, "examples-using-braindecode-models-timedistributed"]], "Examples using braindecode.models.USleep": [[115, "examples-using-braindecode-models-usleep"]], "Examples using braindecode.models.get_output_shape": [[116, "examples-using-braindecode-models-get-output-shape"]], "Examples using braindecode.preprocessing.Preprocessor": [[121, "examples-using-braindecode-preprocessing-preprocessor"]], "Examples using braindecode.preprocessing.create_fixed_length_windows": [[124, "examples-using-braindecode-preprocessing-create-fixed-length-windows"]], "Examples using braindecode.preprocessing.create_windows_from_events": [[125, "examples-using-braindecode-preprocessing-create-windows-from-events"]], "Examples using braindecode.preprocessing.create_windows_from_target_channels": [[126, "examples-using-braindecode-preprocessing-create-windows-from-target-channels"]], "Examples using braindecode.preprocessing.exponential_moving_standardize": [[128, "examples-using-braindecode-preprocessing-exponential-moving-standardize"]], "Examples using braindecode.preprocessing.preprocess": [[130, "examples-using-braindecode-preprocessing-preprocess"]], "Examples using braindecode.samplers.RecordingSampler": [[133, "examples-using-braindecode-samplers-recordingsampler"]], "Examples using braindecode.samplers.RelativePositioningSampler": [[134, "examples-using-braindecode-samplers-relativepositioningsampler"]], "Examples using braindecode.samplers.SequenceSampler": [[135, "examples-using-braindecode-samplers-sequencesampler"]], "Examples using braindecode.training.CroppedLoss": [[136, "examples-using-braindecode-training-croppedloss"]], "Examples using braindecode.training.CroppedTimeSeriesEpochScoring": [[137, "examples-using-braindecode-training-croppedtimeseriesepochscoring"]], "Examples using braindecode.training.CroppedTrialEpochScoring": [[138, "examples-using-braindecode-training-croppedtrialepochscoring"]], "Examples using braindecode.training.TimeSeriesLoss": [[140, "examples-using-braindecode-training-timeseriesloss"]], "Examples using braindecode.util.set_random_seeds": [[144, "examples-using-braindecode-util-set-random-seeds"]], "Examples using braindecode.visualization.plot_confusion_matrix": [[146, "examples-using-braindecode-visualization-plot-confusion-matrix"]], "Exploring Data": [[22, "exploring-data"]], "Exploring DataLoader": [[22, "exploring-dataloader"]], "Exploring Windows": [[22, "exploring-windows"]], "Exploring the braindecode online documentation": [[26, "exploring-the-braindecode-online-documentation"]], "Extract windows": [[9, "extract-windows"], [10, "extract-windows"], [11, "extract-windows"]], "Extracting Compute Windows": [[28, "extracting-compute-windows"]], "Extracting windows": [[3, "extracting-windows"], [4, "extracting-windows"], [5, "extracting-windows"]], "Extraction of the Compute Windows": [[30, "extraction-of-the-compute-windows"]], "Extraction of the Windows": [[29, "extraction-of-the-windows"], [30, "extraction-of-the-windows"]], "Fake regression data": [[31, "fake-regression-data"]], "Finding the model you want": [[26, "finding-the-model-you-want"]], "Fingers flexion cropped decoding on BCIC IV 4 ECoG Dataset": [[2, null]], "Fingers flexion decoding on BCIC IV 4 ECoG Dataset": [[8, null]], "Frequently Asked Questions (FAQ)": [[147, null]], "Generating fake regression dataset": [[31, "generating-fake-regression-dataset"]], "Get the best hyperparameters": [[30, "get-the-best-hyperparameters"]], "Help! I can\u2019t get Python and Braindecode working!": [[147, "help-i-can-t-get-python-and-braindecode-working"]], "How do I cite Braindecode?": [[147, "how-do-i-cite-braindecode"]], "How to cite Braindecode": [[35, null]], "How to train and evaluate your model": [[29, "how-to-train-and-evaluate-your-model"], [32, "how-to-train-and-evaluate-your-model"]], "How to train, test and tune your model?": [[29, null]], "How to tune your hyperparameters": [[29, "how-to-tune-your-hyperparameters"]], "Hyperparameter tuning with scikit-learn": [[30, null]], "I still can\u2019t get it to work!": [[147, "i-still-can-t-get-it-to-work"]], "I think I found a bug, what do I do?": [[147, "i-think-i-found-a-bug-what-do-i-do"]], "Inspecting pretext task performance": [[5, "inspecting-pretext-task-performance"]], "Installation": [[149, null]], "Installing Braindecode from the source": [[151, "installing-braindecode-from-the-source"]], "Installing from PyPI": [[150, null]], "Installing from sources": [[151, null]], "Let\u2019s visualize the first option with a util function.": [[29, "let-s-visualize-the-first-option-with-a-util-function"]], "Let\u2019s visualize the second option with a util function.": [[29, "let-s-visualize-the-second-option-with-a-util-function"]], "Let\u2019s visualize the third option with a util function.": [[29, "let-s-visualize-the-third-option-with-a-util-function"]], "Load and save dataset example": [[18, null]], "Loading": [[2, "loading"], [3, "loading"], [4, "loading"], [8, "loading"], [9, "loading"], [10, "loading"], [11, "loading"], [30, "loading"]], "Loading and organizing data": [[15, null], [24, "loading-and-organizing-data"]], "Loading and preparing the data": [[28, "loading-and-preparing-the-data"]], "Loading and preparing the dataset": [[2, "loading-and-preparing-the-dataset"], [8, "loading-and-preparing-the-dataset"]], "Loading and preprocessing of data, defining a model, etc.": [[29, "loading-and-preprocessing-of-data-defining-a-model-etc"]], "Loading and preprocessing the dataset": [[3, "loading-and-preprocessing-the-dataset"], [4, "loading-and-preprocessing-the-dataset"], [5, "loading-and-preprocessing-the-dataset"], [9, "loading-and-preprocessing-the-dataset"], [10, "loading-and-preprocessing-the-dataset"], [11, "loading-and-preprocessing-the-dataset"], [27, "loading-and-preprocessing-the-dataset"], [30, "loading-and-preprocessing-the-dataset"]], "Loading data": [[29, "loading-data"]], "Loading the Dataset Structure": [[32, "loading-the-dataset-structure"]], "Loading the dataset": [[21, "loading-the-dataset"], [28, "loading-the-dataset"]], "Loading the raw recordings": [[5, "loading-the-raw-recordings"]], "Loading your own data with MNE": [[26, "loading-your-own-data-with-mne"]], "Loading, preprocessing, defining a model, etc.": [[32, "loading-preprocessing-defining-a-model-etc"]], "MNE Dataset Example": [[19, null]], "MOABB Dataset Example": [[20, null]], "Manipulating one session and visualizing the transformed data": [[3, "manipulating-one-session-and-visualizing-the-transformed-data"]], "Manually composing Transforms": [[3, "manually-composing-transforms"]], "Model Training": [[28, "model-training"]], "Model evaluation": [[31, "model-evaluation"]], "Model testing": [[31, "model-testing"]], "Model training": [[31, "model-training"]], "Models": [[0, "models"]], "Multiple discrete targets with the TUH EEG Corpus": [[22, null]], "Observation": [[21, "observation"]], "Option 1: Pure PyTorch training loop": [[32, "option-1-pure-pytorch-training-loop"]], "Option 1: Simple Train-Test Split": [[29, "option-1-simple-train-test-split"]], "Option 1: Train-Val-Test Split": [[29, "option-1-train-val-test-split"]], "Option 2: Train it with PyTorch Lightning": [[32, "option-2-train-it-with-pytorch-lightning"]], "Option 2: Train-Val-Test Split": [[29, "option-2-train-val-test-split"]], "Option 2: k-Fold Cross Validation": [[29, "option-2-k-fold-cross-validation"]], "Option 3: k-Fold Cross Validation": [[29, "option-3-k-fold-cross-validation"]], "Plot Confusion Matrix": [[27, "plot-confusion-matrix"]], "Plot Results": [[2, "plot-results"], [8, "plot-results"], [27, "plot-results"]], "Plot results": [[4, "plot-results"], [9, "plot-results"], [10, "plot-results"], [11, "plot-results"]], "Plotting Results": [[28, "plotting-results"]], "Plotting a  Confusion Matrix": [[28, "plotting-a-confusion-matrix"]], "Plotting the results": [[30, "plotting-the-results"]], "Preprocessing": [[0, "preprocessing"], [2, "preprocessing"], [3, "preprocessing"], [4, "preprocessing"], [5, "preprocessing"], [8, "preprocessing"], [9, "preprocessing"], [10, "preprocessing"], [11, "preprocessing"], [12, "preprocessing"], [28, "preprocessing"], [30, "preprocessing"]], "Preprocessing data": [[29, "preprocessing-data"]], "Preprocessing windows": [[5, "preprocessing-windows"]], "Preprocessing, the offline transformation of the raw dataset": [[32, "preprocessing-the-offline-transformation-of-the-raw-dataset"]], "Process a big data EEG resource (TUH EEG Corpus)": [[12, null]], "References": [[4, "references"], [5, "references"], [9, "references"], [10, "references"], [11, "references"], [26, "references"], [27, "references"], [28, "references"], [29, "references"], [30, "references"], [31, "references"], [147, "references"]], "Regressor": [[0, "regressor"]], "Samplers": [[0, "samplers"]], "Searching the best data augmentation on BCIC IV 2a Dataset": [[4, null]], "Selecting recordings": [[12, "selecting-recordings"]], "Self-supervised learning": [[5, null]], "Self-supervised learning on EEG with relative positioning": [[5, null]], "Setting the data augmentation at the Dataset level": [[3, "setting-the-data-augmentation-at-the-dataset-level"]], "Simple training on MNE epochs": [[26, null]], "Sleep staging on the Sleep Physionet dataset using Chambon2018 network": [[9, null]], "Sleep staging on the Sleep Physionet dataset using Eldele2021": [[10, null]], "Sleep staging on the Sleep Physionet dataset using U-Sleep network": [[11, null]], "Split Dataset Example": [[21, null]], "Split dataset into train and test": [[2, "split-dataset-into-train-and-test"], [29, "split-dataset-into-train-and-test"], [32, "split-dataset-into-train-and-test"]], "Split dataset into train and valid": [[3, "split-dataset-into-train-and-valid"], [4, "split-dataset-into-train-and-valid"], [9, "split-dataset-into-train-and-valid"], [10, "split-dataset-into-train-and-valid"], [11, "split-dataset-into-train-and-valid"], [30, "split-dataset-into-train-and-valid"]], "Split dataset into train, valid, and test": [[8, "split-dataset-into-train-valid-and-test"]], "Split the dataset": [[27, "split-the-dataset"]], "Splitting": [[21, "splitting"]], "Splitting dataset into train, valid and test sets": [[5, "splitting-dataset-into-train-valid-and-test-sets"]], "Splitting the dataset into training and validation sets": [[28, "splitting-the-dataset-into-training-and-validation-sets"]], "Testing if your installation is working": [[151, "testing-if-your-installation-is-working"]], "This example covers:": [[3, "this-example-covers"], [4, "this-example-covers"], [5, "this-example-covers"], [12, "this-example-covers"], [21, "this-example-covers"], [26, "this-example-covers"], [27, "this-example-covers"], [28, "this-example-covers"], [29, "this-example-covers"], [30, "this-example-covers"], [32, "this-example-covers"]], "Training": [[0, "training"], [2, "training"], [5, "training"], [8, "training"], [9, "training"], [10, "training"], [11, "training"], [27, "training"], [30, "training"]], "Training a Braindecode model in PyTorch": [[32, null]], "Training a model with data augmentation": [[3, "training-a-model-with-data-augmentation"], [4, "training-a-model-with-data-augmentation"]], "Training your model (scikit-learn compatible)": [[26, "training-your-model-scikit-learn-compatible"]], "Using the learned representation for sleep staging": [[5, "using-the-learned-representation-for-sleep-staging"]], "Utils": [[0, "utils"]], "Version 0.5.1 (2021-07-14)": [[153, "version-0-5-1-2021-07-14"]], "Version 0.6 (2021-12-06)": [[153, "version-0-6-2021-12-06"]], "Visualization": [[0, "visualization"]], "Visualizing the results": [[5, "visualizing-the-results"]], "What\u2019s new": [[153, null]], "Why do you need to tune the neural networks model?": [[30, null]], "Why should I care about model evaluation?": [[29, "why-should-i-care-about-model-evaluation"], [32, "why-should-i-care-about-model-evaluation"]], "Window preprocessing": [[9, "window-preprocessing"], [10, "window-preprocessing"]], "braindecode.augmentation.AugmentedDataLoader": [[36, null]], "braindecode.augmentation.BandstopFilter": [[37, null]], "braindecode.augmentation.ChannelsDropout": [[38, null]], "braindecode.augmentation.ChannelsShuffle": [[39, null]], "braindecode.augmentation.ChannelsSymmetry": [[40, null]], "braindecode.augmentation.Compose": [[41, null]], "braindecode.augmentation.FTSurrogate": [[42, null]], "braindecode.augmentation.FrequencyShift": [[43, null]], "braindecode.augmentation.GaussianNoise": [[44, null]], "braindecode.augmentation.IdentityTransform": [[45, null]], "braindecode.augmentation.MaskEncoding": [[46, null]], "braindecode.augmentation.Mixup": [[47, null]], "braindecode.augmentation.SegmentationReconstruction": [[48, null]], "braindecode.augmentation.SensorsRotation": [[49, null]], "braindecode.augmentation.SensorsXRotation": [[50, null]], "braindecode.augmentation.SensorsYRotation": [[51, null]], "braindecode.augmentation.SensorsZRotation": [[52, null]], "braindecode.augmentation.SignFlip": [[53, null]], "braindecode.augmentation.SmoothTimeMask": [[54, null]], "braindecode.augmentation.TimeReverse": [[55, null]], "braindecode.augmentation.Transform": [[56, null]], "braindecode.augmentation.functional.bandstop_filter": [[57, null]], "braindecode.augmentation.functional.channels_dropout": [[58, null]], "braindecode.augmentation.functional.channels_permute": [[59, null]], "braindecode.augmentation.functional.channels_shuffle": [[60, null]], "braindecode.augmentation.functional.frequency_shift": [[61, null]], "braindecode.augmentation.functional.ft_surrogate": [[62, null]], "braindecode.augmentation.functional.gaussian_noise": [[63, null]], "braindecode.augmentation.functional.identity": [[64, null]], "braindecode.augmentation.functional.mask_encoding": [[65, null]], "braindecode.augmentation.functional.mixup": [[66, null]], "braindecode.augmentation.functional.segmentation_reconstruction": [[67, null]], "braindecode.augmentation.functional.sensors_rotation": [[68, null]], "braindecode.augmentation.functional.sign_flip": [[69, null]], "braindecode.augmentation.functional.smooth_time_mask": [[70, null]], "braindecode.augmentation.functional.time_reverse": [[71, null]], "braindecode.classifier.EEGClassifier": [[72, null]], "braindecode.datasets.BCICompetitionIVDataset4": [[73, null]], "braindecode.datasets.BNCI2014001": [[74, null]], "braindecode.datasets.BaseConcatDataset": [[75, null]], "braindecode.datasets.BaseDataset": [[76, null]], "braindecode.datasets.HGD": [[77, null]], "braindecode.datasets.MOABBDataset": [[78, null]], "braindecode.datasets.NMT": [[79, null]], "braindecode.datasets.SleepPhysionet": [[80, null]], "braindecode.datasets.TUH": [[81, null]], "braindecode.datasets.TUHAbnormal": [[82, null]], "braindecode.datasets.WindowsDataset": [[83, null]], "braindecode.datasets.create_from_X_y": [[84, null]], "braindecode.datasets.create_from_mne_epochs": [[85, null]], "braindecode.datasets.create_from_mne_raw": [[86, null]], "braindecode.datautil.load_concat_dataset": [[87, null]], "braindecode.datautil.save_concat_dataset": [[88, null]], "braindecode.models.ATCNet": [[89, null]], "braindecode.models.AttentionBaseNet": [[90, null]], "braindecode.models.BIOT": [[91, null]], "braindecode.models.ContraWR": [[92, null]], "braindecode.models.Deep4Net": [[93, null]], "braindecode.models.DeepSleepNet": [[94, null]], "braindecode.models.EEGConformer": [[95, null]], "braindecode.models.EEGITNet": [[96, null]], "braindecode.models.EEGInception": [[97, null]], "braindecode.models.EEGInceptionERP": [[98, null]], "braindecode.models.EEGInceptionMI": [[99, null]], "braindecode.models.EEGModuleMixin": [[100, null]], "braindecode.models.EEGNetv1": [[101, null]], "braindecode.models.EEGNetv4": [[102, null]], "braindecode.models.EEGResNet": [[103, null]], "braindecode.models.EEGSimpleConv": [[104, null]], "braindecode.models.HybridNet": [[105, null]], "braindecode.models.Labram": [[106, null]], "braindecode.models.SPARCNet": [[107, null]], "braindecode.models.ShallowFBCSPNet": [[108, null]], "braindecode.models.SleepStagerBlanco2020": [[109, null]], "braindecode.models.SleepStagerChambon2018": [[110, null]], "braindecode.models.SleepStagerEldele2021": [[111, null]], "braindecode.models.TCN": [[112, null]], "braindecode.models.TIDNet": [[113, null]], "braindecode.models.TimeDistributed": [[114, null]], "braindecode.models.USleep": [[115, null]], "braindecode.models.get_output_shape": [[116, null]], "braindecode.preprocessing.Crop": [[117, null]], "braindecode.preprocessing.DropChannels": [[118, null]], "braindecode.preprocessing.Filter": [[119, null]], "braindecode.preprocessing.Pick": [[120, null]], "braindecode.preprocessing.Preprocessor": [[121, null]], "braindecode.preprocessing.Resample": [[122, null]], "braindecode.preprocessing.SetEEGReference": [[123, null]], "braindecode.preprocessing.create_fixed_length_windows": [[124, null]], "braindecode.preprocessing.create_windows_from_events": [[125, null]], "braindecode.preprocessing.create_windows_from_target_channels": [[126, null]], "braindecode.preprocessing.exponential_moving_demean": [[127, null]], "braindecode.preprocessing.exponential_moving_standardize": [[128, null]], "braindecode.preprocessing.filterbank": [[129, null]], "braindecode.preprocessing.preprocess": [[130, null]], "braindecode.regressor.EEGRegressor": [[131, null]], "braindecode.samplers.BalancedSequenceSampler": [[132, null]], "braindecode.samplers.RecordingSampler": [[133, null]], "braindecode.samplers.RelativePositioningSampler": [[134, null]], "braindecode.samplers.SequenceSampler": [[135, null]], "braindecode.training.CroppedLoss": [[136, null]], "braindecode.training.CroppedTimeSeriesEpochScoring": [[137, null]], "braindecode.training.CroppedTrialEpochScoring": [[138, null]], "braindecode.training.PostEpochTrainScoring": [[139, null]], "braindecode.training.TimeSeriesLoss": [[140, null]], "braindecode.training.mixup_criterion": [[141, null]], "braindecode.training.predict_trials": [[142, null]], "braindecode.training.trial_preds_from_window_preds": [[143, null]], "braindecode.util.set_random_seeds": [[144, null]], "braindecode.visualization.compute_amplitude_gradients": [[145, null]], "braindecode.visualization.plot_confusion_matrix": [[146, null]]}, "docnames": ["api", "auto_examples/advanced_training/index", "auto_examples/advanced_training/plot_bcic_iv_4_ecog_cropped", "auto_examples/advanced_training/plot_data_augmentation", "auto_examples/advanced_training/plot_data_augmentation_search", "auto_examples/advanced_training/plot_relative_positioning", "auto_examples/advanced_training/sg_execution_times", "auto_examples/applied_examples/index", "auto_examples/applied_examples/plot_bcic_iv_4_ecog_trial", "auto_examples/applied_examples/plot_sleep_staging_chambon2018", "auto_examples/applied_examples/plot_sleep_staging_eldele2021", "auto_examples/applied_examples/plot_sleep_staging_usleep", "auto_examples/applied_examples/plot_tuh_eeg_corpus", "auto_examples/applied_examples/sg_execution_times", "auto_examples/datasets_io/benchmark_lazy_eager_loading", "auto_examples/datasets_io/index", "auto_examples/datasets_io/plot_benchmark_preprocessing", "auto_examples/datasets_io/plot_custom_dataset_example", "auto_examples/datasets_io/plot_load_save_datasets", "auto_examples/datasets_io/plot_mne_dataset_example", "auto_examples/datasets_io/plot_moabb_dataset_example", "auto_examples/datasets_io/plot_split_dataset", "auto_examples/datasets_io/plot_tuh_discrete_multitarget", "auto_examples/datasets_io/sg_execution_times", "auto_examples/index", "auto_examples/model_building/index", "auto_examples/model_building/plot_basic_training_epochs", "auto_examples/model_building/plot_bcic_iv_2a_moabb_cropped", "auto_examples/model_building/plot_bcic_iv_2a_moabb_trial", "auto_examples/model_building/plot_how_train_test_and_tune", "auto_examples/model_building/plot_hyperparameter_tuning_with_scikit-learn", "auto_examples/model_building/plot_regression", "auto_examples/model_building/plot_train_in_pure_pytorch_and_pytorch_lightning", "auto_examples/model_building/sg_execution_times", "auto_examples/sg_execution_times", "cite", "generated/braindecode.augmentation.AugmentedDataLoader", "generated/braindecode.augmentation.BandstopFilter", "generated/braindecode.augmentation.ChannelsDropout", "generated/braindecode.augmentation.ChannelsShuffle", "generated/braindecode.augmentation.ChannelsSymmetry", "generated/braindecode.augmentation.Compose", "generated/braindecode.augmentation.FTSurrogate", "generated/braindecode.augmentation.FrequencyShift", "generated/braindecode.augmentation.GaussianNoise", "generated/braindecode.augmentation.IdentityTransform", "generated/braindecode.augmentation.MaskEncoding", "generated/braindecode.augmentation.Mixup", "generated/braindecode.augmentation.SegmentationReconstruction", "generated/braindecode.augmentation.SensorsRotation", "generated/braindecode.augmentation.SensorsXRotation", "generated/braindecode.augmentation.SensorsYRotation", "generated/braindecode.augmentation.SensorsZRotation", "generated/braindecode.augmentation.SignFlip", "generated/braindecode.augmentation.SmoothTimeMask", "generated/braindecode.augmentation.TimeReverse", "generated/braindecode.augmentation.Transform", "generated/braindecode.augmentation.functional.bandstop_filter", "generated/braindecode.augmentation.functional.channels_dropout", "generated/braindecode.augmentation.functional.channels_permute", "generated/braindecode.augmentation.functional.channels_shuffle", "generated/braindecode.augmentation.functional.frequency_shift", "generated/braindecode.augmentation.functional.ft_surrogate", "generated/braindecode.augmentation.functional.gaussian_noise", "generated/braindecode.augmentation.functional.identity", "generated/braindecode.augmentation.functional.mask_encoding", "generated/braindecode.augmentation.functional.mixup", "generated/braindecode.augmentation.functional.segmentation_reconstruction", "generated/braindecode.augmentation.functional.sensors_rotation", "generated/braindecode.augmentation.functional.sign_flip", "generated/braindecode.augmentation.functional.smooth_time_mask", "generated/braindecode.augmentation.functional.time_reverse", "generated/braindecode.classifier.EEGClassifier", "generated/braindecode.datasets.BCICompetitionIVDataset4", "generated/braindecode.datasets.BNCI2014001", "generated/braindecode.datasets.BaseConcatDataset", "generated/braindecode.datasets.BaseDataset", "generated/braindecode.datasets.HGD", "generated/braindecode.datasets.MOABBDataset", "generated/braindecode.datasets.NMT", "generated/braindecode.datasets.SleepPhysionet", "generated/braindecode.datasets.TUH", "generated/braindecode.datasets.TUHAbnormal", "generated/braindecode.datasets.WindowsDataset", "generated/braindecode.datasets.create_from_X_y", "generated/braindecode.datasets.create_from_mne_epochs", "generated/braindecode.datasets.create_from_mne_raw", "generated/braindecode.datautil.load_concat_dataset", "generated/braindecode.datautil.save_concat_dataset", "generated/braindecode.models.ATCNet", "generated/braindecode.models.AttentionBaseNet", "generated/braindecode.models.BIOT", "generated/braindecode.models.ContraWR", "generated/braindecode.models.Deep4Net", "generated/braindecode.models.DeepSleepNet", "generated/braindecode.models.EEGConformer", "generated/braindecode.models.EEGITNet", "generated/braindecode.models.EEGInception", "generated/braindecode.models.EEGInceptionERP", "generated/braindecode.models.EEGInceptionMI", "generated/braindecode.models.EEGModuleMixin", "generated/braindecode.models.EEGNetv1", "generated/braindecode.models.EEGNetv4", "generated/braindecode.models.EEGResNet", "generated/braindecode.models.EEGSimpleConv", "generated/braindecode.models.HybridNet", "generated/braindecode.models.Labram", "generated/braindecode.models.SPARCNet", "generated/braindecode.models.ShallowFBCSPNet", "generated/braindecode.models.SleepStagerBlanco2020", "generated/braindecode.models.SleepStagerChambon2018", "generated/braindecode.models.SleepStagerEldele2021", "generated/braindecode.models.TCN", "generated/braindecode.models.TIDNet", "generated/braindecode.models.TimeDistributed", "generated/braindecode.models.USleep", "generated/braindecode.models.get_output_shape", "generated/braindecode.preprocessing.Crop", "generated/braindecode.preprocessing.DropChannels", "generated/braindecode.preprocessing.Filter", "generated/braindecode.preprocessing.Pick", "generated/braindecode.preprocessing.Preprocessor", "generated/braindecode.preprocessing.Resample", "generated/braindecode.preprocessing.SetEEGReference", "generated/braindecode.preprocessing.create_fixed_length_windows", "generated/braindecode.preprocessing.create_windows_from_events", "generated/braindecode.preprocessing.create_windows_from_target_channels", "generated/braindecode.preprocessing.exponential_moving_demean", "generated/braindecode.preprocessing.exponential_moving_standardize", "generated/braindecode.preprocessing.filterbank", "generated/braindecode.preprocessing.preprocess", "generated/braindecode.regressor.EEGRegressor", "generated/braindecode.samplers.BalancedSequenceSampler", "generated/braindecode.samplers.RecordingSampler", "generated/braindecode.samplers.RelativePositioningSampler", "generated/braindecode.samplers.SequenceSampler", "generated/braindecode.training.CroppedLoss", "generated/braindecode.training.CroppedTimeSeriesEpochScoring", "generated/braindecode.training.CroppedTrialEpochScoring", "generated/braindecode.training.PostEpochTrainScoring", "generated/braindecode.training.TimeSeriesLoss", "generated/braindecode.training.mixup_criterion", "generated/braindecode.training.predict_trials", "generated/braindecode.training.trial_preds_from_window_preds", "generated/braindecode.util.set_random_seeds", "generated/braindecode.visualization.compute_amplitude_gradients", "generated/braindecode.visualization.plot_confusion_matrix", "help", "index", "install/install", "install/install_pip", "install/install_source", "sg_execution_times", "whats_new"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["api.rst", "auto_examples/advanced_training/index.rst", "auto_examples/advanced_training/plot_bcic_iv_4_ecog_cropped.rst", "auto_examples/advanced_training/plot_data_augmentation.rst", "auto_examples/advanced_training/plot_data_augmentation_search.rst", "auto_examples/advanced_training/plot_relative_positioning.rst", "auto_examples/advanced_training/sg_execution_times.rst", "auto_examples/applied_examples/index.rst", "auto_examples/applied_examples/plot_bcic_iv_4_ecog_trial.rst", "auto_examples/applied_examples/plot_sleep_staging_chambon2018.rst", "auto_examples/applied_examples/plot_sleep_staging_eldele2021.rst", "auto_examples/applied_examples/plot_sleep_staging_usleep.rst", "auto_examples/applied_examples/plot_tuh_eeg_corpus.rst", "auto_examples/applied_examples/sg_execution_times.rst", "auto_examples/datasets_io/benchmark_lazy_eager_loading.rst", "auto_examples/datasets_io/index.rst", "auto_examples/datasets_io/plot_benchmark_preprocessing.rst", "auto_examples/datasets_io/plot_custom_dataset_example.rst", "auto_examples/datasets_io/plot_load_save_datasets.rst", "auto_examples/datasets_io/plot_mne_dataset_example.rst", "auto_examples/datasets_io/plot_moabb_dataset_example.rst", "auto_examples/datasets_io/plot_split_dataset.rst", "auto_examples/datasets_io/plot_tuh_discrete_multitarget.rst", "auto_examples/datasets_io/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/model_building/index.rst", "auto_examples/model_building/plot_basic_training_epochs.rst", "auto_examples/model_building/plot_bcic_iv_2a_moabb_cropped.rst", "auto_examples/model_building/plot_bcic_iv_2a_moabb_trial.rst", "auto_examples/model_building/plot_how_train_test_and_tune.rst", "auto_examples/model_building/plot_hyperparameter_tuning_with_scikit-learn.rst", "auto_examples/model_building/plot_regression.rst", "auto_examples/model_building/plot_train_in_pure_pytorch_and_pytorch_lightning.rst", "auto_examples/model_building/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "cite.rst", "generated/braindecode.augmentation.AugmentedDataLoader.rst", "generated/braindecode.augmentation.BandstopFilter.rst", "generated/braindecode.augmentation.ChannelsDropout.rst", "generated/braindecode.augmentation.ChannelsShuffle.rst", "generated/braindecode.augmentation.ChannelsSymmetry.rst", "generated/braindecode.augmentation.Compose.rst", "generated/braindecode.augmentation.FTSurrogate.rst", "generated/braindecode.augmentation.FrequencyShift.rst", "generated/braindecode.augmentation.GaussianNoise.rst", "generated/braindecode.augmentation.IdentityTransform.rst", "generated/braindecode.augmentation.MaskEncoding.rst", "generated/braindecode.augmentation.Mixup.rst", "generated/braindecode.augmentation.SegmentationReconstruction.rst", "generated/braindecode.augmentation.SensorsRotation.rst", "generated/braindecode.augmentation.SensorsXRotation.rst", "generated/braindecode.augmentation.SensorsYRotation.rst", "generated/braindecode.augmentation.SensorsZRotation.rst", "generated/braindecode.augmentation.SignFlip.rst", "generated/braindecode.augmentation.SmoothTimeMask.rst", "generated/braindecode.augmentation.TimeReverse.rst", "generated/braindecode.augmentation.Transform.rst", "generated/braindecode.augmentation.functional.bandstop_filter.rst", "generated/braindecode.augmentation.functional.channels_dropout.rst", "generated/braindecode.augmentation.functional.channels_permute.rst", "generated/braindecode.augmentation.functional.channels_shuffle.rst", "generated/braindecode.augmentation.functional.frequency_shift.rst", "generated/braindecode.augmentation.functional.ft_surrogate.rst", "generated/braindecode.augmentation.functional.gaussian_noise.rst", "generated/braindecode.augmentation.functional.identity.rst", "generated/braindecode.augmentation.functional.mask_encoding.rst", "generated/braindecode.augmentation.functional.mixup.rst", "generated/braindecode.augmentation.functional.segmentation_reconstruction.rst", "generated/braindecode.augmentation.functional.sensors_rotation.rst", "generated/braindecode.augmentation.functional.sign_flip.rst", "generated/braindecode.augmentation.functional.smooth_time_mask.rst", "generated/braindecode.augmentation.functional.time_reverse.rst", "generated/braindecode.classifier.EEGClassifier.rst", "generated/braindecode.datasets.BCICompetitionIVDataset4.rst", "generated/braindecode.datasets.BNCI2014001.rst", "generated/braindecode.datasets.BaseConcatDataset.rst", "generated/braindecode.datasets.BaseDataset.rst", "generated/braindecode.datasets.HGD.rst", "generated/braindecode.datasets.MOABBDataset.rst", "generated/braindecode.datasets.NMT.rst", "generated/braindecode.datasets.SleepPhysionet.rst", "generated/braindecode.datasets.TUH.rst", "generated/braindecode.datasets.TUHAbnormal.rst", "generated/braindecode.datasets.WindowsDataset.rst", "generated/braindecode.datasets.create_from_X_y.rst", "generated/braindecode.datasets.create_from_mne_epochs.rst", "generated/braindecode.datasets.create_from_mne_raw.rst", "generated/braindecode.datautil.load_concat_dataset.rst", "generated/braindecode.datautil.save_concat_dataset.rst", "generated/braindecode.models.ATCNet.rst", "generated/braindecode.models.AttentionBaseNet.rst", "generated/braindecode.models.BIOT.rst", "generated/braindecode.models.ContraWR.rst", "generated/braindecode.models.Deep4Net.rst", "generated/braindecode.models.DeepSleepNet.rst", "generated/braindecode.models.EEGConformer.rst", "generated/braindecode.models.EEGITNet.rst", "generated/braindecode.models.EEGInception.rst", "generated/braindecode.models.EEGInceptionERP.rst", "generated/braindecode.models.EEGInceptionMI.rst", "generated/braindecode.models.EEGModuleMixin.rst", "generated/braindecode.models.EEGNetv1.rst", "generated/braindecode.models.EEGNetv4.rst", "generated/braindecode.models.EEGResNet.rst", "generated/braindecode.models.EEGSimpleConv.rst", "generated/braindecode.models.HybridNet.rst", "generated/braindecode.models.Labram.rst", "generated/braindecode.models.SPARCNet.rst", "generated/braindecode.models.ShallowFBCSPNet.rst", "generated/braindecode.models.SleepStagerBlanco2020.rst", "generated/braindecode.models.SleepStagerChambon2018.rst", "generated/braindecode.models.SleepStagerEldele2021.rst", "generated/braindecode.models.TCN.rst", "generated/braindecode.models.TIDNet.rst", "generated/braindecode.models.TimeDistributed.rst", "generated/braindecode.models.USleep.rst", "generated/braindecode.models.get_output_shape.rst", "generated/braindecode.preprocessing.Crop.rst", "generated/braindecode.preprocessing.DropChannels.rst", "generated/braindecode.preprocessing.Filter.rst", "generated/braindecode.preprocessing.Pick.rst", "generated/braindecode.preprocessing.Preprocessor.rst", "generated/braindecode.preprocessing.Resample.rst", "generated/braindecode.preprocessing.SetEEGReference.rst", "generated/braindecode.preprocessing.create_fixed_length_windows.rst", "generated/braindecode.preprocessing.create_windows_from_events.rst", "generated/braindecode.preprocessing.create_windows_from_target_channels.rst", "generated/braindecode.preprocessing.exponential_moving_demean.rst", "generated/braindecode.preprocessing.exponential_moving_standardize.rst", "generated/braindecode.preprocessing.filterbank.rst", "generated/braindecode.preprocessing.preprocess.rst", "generated/braindecode.regressor.EEGRegressor.rst", "generated/braindecode.samplers.BalancedSequenceSampler.rst", "generated/braindecode.samplers.RecordingSampler.rst", "generated/braindecode.samplers.RelativePositioningSampler.rst", "generated/braindecode.samplers.SequenceSampler.rst", "generated/braindecode.training.CroppedLoss.rst", "generated/braindecode.training.CroppedTimeSeriesEpochScoring.rst", "generated/braindecode.training.CroppedTrialEpochScoring.rst", "generated/braindecode.training.PostEpochTrainScoring.rst", "generated/braindecode.training.TimeSeriesLoss.rst", "generated/braindecode.training.mixup_criterion.rst", "generated/braindecode.training.predict_trials.rst", "generated/braindecode.training.trial_preds_from_window_preds.rst", "generated/braindecode.util.set_random_seeds.rst", "generated/braindecode.visualization.compute_amplitude_gradients.rst", "generated/braindecode.visualization.plot_confusion_matrix.rst", "help.rst", "index.rst", "install/install.rst", "install/install_pip.rst", "install/install_source.rst", "sg_execution_times.rst", "whats_new.rst"], "indexentries": {"_criteria (braindecode.classifier.eegclassifier attribute)": [[72, "braindecode.classifier.EEGClassifier._criteria", false]], "_criteria (braindecode.regressor.eegregressor attribute)": [[131, "braindecode.regressor.EEGRegressor._criteria", false]], "_modules (braindecode.classifier.eegclassifier attribute)": [[72, "braindecode.classifier.EEGClassifier._modules", false]], "_modules (braindecode.regressor.eegregressor attribute)": [[131, "braindecode.regressor.EEGRegressor._modules", false]], "_optimizers (braindecode.classifier.eegclassifier attribute)": [[72, "braindecode.classifier.EEGClassifier._optimizers", false]], "_optimizers (braindecode.regressor.eegregressor attribute)": [[131, "braindecode.regressor.EEGRegressor._optimizers", false]], "apply() (braindecode.preprocessing.preprocessor method)": [[121, "braindecode.preprocessing.Preprocessor.apply", false]], "atcnet (class in braindecode.models)": [[89, "braindecode.models.ATCNet", false]], "attentionbasenet (class in braindecode.models)": [[90, "braindecode.models.AttentionBaseNet", false]], "augmenteddataloader (class in braindecode.augmentation)": [[36, "braindecode.augmentation.AugmentedDataLoader", false]], "balancedsequencesampler (class in braindecode.samplers)": [[132, "braindecode.samplers.BalancedSequenceSampler", false]], "bandstop_filter() (in module braindecode.augmentation.functional)": [[57, "braindecode.augmentation.functional.bandstop_filter", false]], "bandstopfilter (class in braindecode.augmentation)": [[37, "braindecode.augmentation.BandstopFilter", false]], "baseconcatdataset (class in braindecode.datasets)": [[75, "braindecode.datasets.BaseConcatDataset", false]], "basedataset (class in braindecode.datasets)": [[76, "braindecode.datasets.BaseDataset", false]], "bcicompetitionivdataset4 (class in braindecode.datasets)": [[73, "braindecode.datasets.BCICompetitionIVDataset4", false]], "biot (class in braindecode.models)": [[91, "braindecode.models.BIOT", false]], "bnci2014001 (class in braindecode.datasets)": [[74, "braindecode.datasets.BNCI2014001", false]], "braindecode": [[0, "module-braindecode", false]], "callbacks_ (braindecode.classifier.eegclassifier attribute)": [[72, "braindecode.classifier.EEGClassifier.callbacks_", false]], "callbacks_ (braindecode.regressor.eegregressor attribute)": [[131, "braindecode.regressor.EEGRegressor.callbacks_", false]], "channels_dropout() (in module braindecode.augmentation.functional)": [[58, "braindecode.augmentation.functional.channels_dropout", false]], "channels_permute() (in module braindecode.augmentation.functional)": [[59, "braindecode.augmentation.functional.channels_permute", false]], "channels_shuffle() (in module braindecode.augmentation.functional)": [[60, "braindecode.augmentation.functional.channels_shuffle", false]], "channelsdropout (class in braindecode.augmentation)": [[38, "braindecode.augmentation.ChannelsDropout", false]], "channelsshuffle (class in braindecode.augmentation)": [[39, "braindecode.augmentation.ChannelsShuffle", false]], "channelssymmetry (class in braindecode.augmentation)": [[40, "braindecode.augmentation.ChannelsSymmetry", false]], "classes_ (braindecode.classifier.eegclassifier attribute)": [[72, "braindecode.classifier.EEGClassifier.classes_", false]], "compose (class in braindecode.augmentation)": [[41, "braindecode.augmentation.Compose", false]], "compute_amplitude_gradients() (in module braindecode.visualization)": [[145, "braindecode.visualization.compute_amplitude_gradients", false]], "contrawr (class in braindecode.models)": [[92, "braindecode.models.ContraWR", false]], "create_fixed_length_windows() (in module braindecode.preprocessing)": [[124, "braindecode.preprocessing.create_fixed_length_windows", false]], "create_from_mne_epochs() (in module braindecode.datasets)": [[85, "braindecode.datasets.create_from_mne_epochs", false]], "create_from_mne_raw() (in module braindecode.datasets)": [[86, "braindecode.datasets.create_from_mne_raw", false]], "create_from_x_y() (in module braindecode.datasets)": [[84, "braindecode.datasets.create_from_X_y", false]], "create_windows_from_events() (in module braindecode.preprocessing)": [[125, "braindecode.preprocessing.create_windows_from_events", false]], "create_windows_from_target_channels() (in module braindecode.preprocessing)": [[126, "braindecode.preprocessing.create_windows_from_target_channels", false]], "criterion_ (braindecode.classifier.eegclassifier attribute)": [[72, "braindecode.classifier.EEGClassifier.criterion_", false]], "criterion_ (braindecode.regressor.eegregressor attribute)": [[131, "braindecode.regressor.EEGRegressor.criterion_", false]], "crop (class in braindecode.preprocessing)": [[117, "braindecode.preprocessing.Crop", false]], "croppedloss (class in braindecode.training)": [[136, "braindecode.training.CroppedLoss", false]], "croppedtimeseriesepochscoring (class in braindecode.training)": [[137, "braindecode.training.CroppedTimeSeriesEpochScoring", false]], "croppedtrialepochscoring (class in braindecode.training)": [[138, "braindecode.training.CroppedTrialEpochScoring", false]], "cuda_dependent_attributes_ (braindecode.classifier.eegclassifier attribute)": [[72, "braindecode.classifier.EEGClassifier.cuda_dependent_attributes_", false]], "cuda_dependent_attributes_ (braindecode.regressor.eegregressor attribute)": [[131, "braindecode.regressor.EEGRegressor.cuda_dependent_attributes_", false]], "deep4net (class in braindecode.models)": [[93, "braindecode.models.Deep4Net", false]], "deepsleepnet (class in braindecode.models)": [[94, "braindecode.models.DeepSleepNet", false]], "download() (braindecode.datasets.bcicompetitionivdataset4 static method)": [[73, "braindecode.datasets.BCICompetitionIVDataset4.download", false]], "dropchannels (class in braindecode.preprocessing)": [[118, "braindecode.preprocessing.DropChannels", false]], "eegclassifier (class in braindecode.classifier)": [[72, "braindecode.classifier.EEGClassifier", false]], "eegconformer (class in braindecode.models)": [[95, "braindecode.models.EEGConformer", false]], "eeginception (class in braindecode.models)": [[97, "braindecode.models.EEGInception", false]], "eeginceptionerp (class in braindecode.models)": [[98, "braindecode.models.EEGInceptionERP", false]], "eeginceptionmi (class in braindecode.models)": [[99, "braindecode.models.EEGInceptionMI", false]], "eegitnet (class in braindecode.models)": [[96, "braindecode.models.EEGITNet", false]], "eegmodulemixin (class in braindecode.models)": [[100, "braindecode.models.EEGModuleMixin", false]], "eegnetv1 (class in braindecode.models)": [[101, "braindecode.models.EEGNetv1", false]], "eegnetv4 (class in braindecode.models)": [[102, "braindecode.models.EEGNetv4", false]], "eegregressor (class in braindecode.regressor)": [[131, "braindecode.regressor.EEGRegressor", false]], "eegresnet (class in braindecode.models)": [[103, "braindecode.models.EEGResNet", false]], "eegsimpleconv (class in braindecode.models)": [[104, "braindecode.models.EEGSimpleConv", false]], "exponential_moving_demean() (in module braindecode.preprocessing)": [[127, "braindecode.preprocessing.exponential_moving_demean", false]], "exponential_moving_standardize() (in module braindecode.preprocessing)": [[128, "braindecode.preprocessing.exponential_moving_standardize", false]], "file_ids (braindecode.samplers.sequencesampler attribute)": [[135, "braindecode.samplers.SequenceSampler.file_ids", false]], "filter (class in braindecode.preprocessing)": [[119, "braindecode.preprocessing.Filter", false]], "filterbank() (in module braindecode.preprocessing)": [[129, "braindecode.preprocessing.filterbank", false]], "fit() (braindecode.regressor.eegregressor method)": [[131, "braindecode.regressor.EEGRegressor.fit", false]], "fix_init_weight_and_init_embedding() (braindecode.models.labram method)": [[106, "braindecode.models.Labram.fix_init_weight_and_init_embedding", false]], "forward() (braindecode.augmentation.compose method)": [[41, "braindecode.augmentation.Compose.forward", false]], "forward() (braindecode.augmentation.transform method)": [[56, "braindecode.augmentation.Transform.forward", false]], "forward() (braindecode.models.atcnet method)": [[89, "braindecode.models.ATCNet.forward", false]], "forward() (braindecode.models.attentionbasenet method)": [[90, "braindecode.models.AttentionBaseNet.forward", false]], "forward() (braindecode.models.biot method)": [[91, "braindecode.models.BIOT.forward", false]], "forward() (braindecode.models.contrawr method)": [[92, "braindecode.models.ContraWR.forward", false]], "forward() (braindecode.models.deepsleepnet method)": [[94, "braindecode.models.DeepSleepNet.forward", false]], "forward() (braindecode.models.eegconformer method)": [[95, "braindecode.models.EEGConformer.forward", false]], "forward() (braindecode.models.eeginceptionmi method)": [[99, "braindecode.models.EEGInceptionMI.forward", false]], "forward() (braindecode.models.eegmodulemixin method)": [[100, "braindecode.models.EEGModuleMixin.forward", false]], "forward() (braindecode.models.eegsimpleconv method)": [[104, "braindecode.models.EEGSimpleConv.forward", false]], "forward() (braindecode.models.hybridnet method)": [[105, "braindecode.models.HybridNet.forward", false]], "forward() (braindecode.models.labram method)": [[106, "braindecode.models.Labram.forward", false]], "forward() (braindecode.models.sleepstagerblanco2020 method)": [[109, "braindecode.models.SleepStagerBlanco2020.forward", false]], "forward() (braindecode.models.sleepstagerchambon2018 method)": [[110, "braindecode.models.SleepStagerChambon2018.forward", false]], "forward() (braindecode.models.sleepstagereldele2021 method)": [[111, "braindecode.models.SleepStagerEldele2021.forward", false]], "forward() (braindecode.models.sparcnet method)": [[107, "braindecode.models.SPARCNet.forward", false]], "forward() (braindecode.models.tcn method)": [[112, "braindecode.models.TCN.forward", false]], "forward() (braindecode.models.tidnet method)": [[113, "braindecode.models.TIDNet.forward", false]], "forward() (braindecode.models.timedistributed method)": [[114, "braindecode.models.TimeDistributed.forward", false]], "forward() (braindecode.models.usleep method)": [[115, "braindecode.models.USleep.forward", false]], "forward() (braindecode.training.croppedloss method)": [[136, "braindecode.training.CroppedLoss.forward", false]], "forward() (braindecode.training.timeseriesloss method)": [[140, "braindecode.training.TimeSeriesLoss.forward", false]], "forward_features() (braindecode.models.labram method)": [[106, "braindecode.models.Labram.forward_features", false]], "frequency_shift() (in module braindecode.augmentation.functional)": [[61, "braindecode.augmentation.functional.frequency_shift", false]], "frequencyshift (class in braindecode.augmentation)": [[43, "braindecode.augmentation.FrequencyShift", false]], "ft_surrogate() (in module braindecode.augmentation.functional)": [[62, "braindecode.augmentation.functional.ft_surrogate", false]], "ftsurrogate (class in braindecode.augmentation)": [[42, "braindecode.augmentation.FTSurrogate", false]], "gaussian_noise() (in module braindecode.augmentation.functional)": [[63, "braindecode.augmentation.functional.gaussian_noise", false]], "gaussiannoise (class in braindecode.augmentation)": [[44, "braindecode.augmentation.GaussianNoise", false]], "get_augmentation_params() (braindecode.augmentation.bandstopfilter method)": [[37, "braindecode.augmentation.BandstopFilter.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.channelsdropout method)": [[38, "braindecode.augmentation.ChannelsDropout.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.channelsshuffle method)": [[39, "braindecode.augmentation.ChannelsShuffle.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.channelssymmetry method)": [[40, "braindecode.augmentation.ChannelsSymmetry.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.frequencyshift method)": [[43, "braindecode.augmentation.FrequencyShift.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.ftsurrogate method)": [[42, "braindecode.augmentation.FTSurrogate.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.gaussiannoise method)": [[44, "braindecode.augmentation.GaussianNoise.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.maskencoding method)": [[46, "braindecode.augmentation.MaskEncoding.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.mixup method)": [[47, "braindecode.augmentation.Mixup.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.segmentationreconstruction method)": [[48, "braindecode.augmentation.SegmentationReconstruction.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.sensorsrotation method)": [[49, "braindecode.augmentation.SensorsRotation.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.smoothtimemask method)": [[54, "braindecode.augmentation.SmoothTimeMask.get_augmentation_params", false]], "get_augmentation_params() (braindecode.augmentation.transform method)": [[56, "braindecode.augmentation.Transform.get_augmentation_params", false]], "get_classifier() (braindecode.models.labram method)": [[106, "braindecode.models.Labram.get_classifier", false]], "get_fc_size() (braindecode.models.eegconformer method)": [[95, "braindecode.models.EEGConformer.get_fc_size", false]], "get_iterator() (braindecode.classifier.eegclassifier method)": [[72, "braindecode.classifier.EEGClassifier.get_iterator", false]], "get_iterator() (braindecode.regressor.eegregressor method)": [[131, "braindecode.regressor.EEGRegressor.get_iterator", false]], "get_loss() (braindecode.classifier.eegclassifier method)": [[72, "braindecode.classifier.EEGClassifier.get_loss", false]], "get_metadata() (braindecode.datasets.baseconcatdataset method)": [[75, "braindecode.datasets.BaseConcatDataset.get_metadata", false]], "get_num_layers() (braindecode.models.labram method)": [[106, "braindecode.models.Labram.get_num_layers", false]], "get_output_shape() (braindecode.models.eegmodulemixin method)": [[100, "braindecode.models.EEGModuleMixin.get_output_shape", false]], "get_output_shape() (in module braindecode.models)": [[116, "braindecode.models.get_output_shape", false]], "get_torchinfo_statistics() (braindecode.models.eegmodulemixin method)": [[100, "braindecode.models.EEGModuleMixin.get_torchinfo_statistics", false]], "hgd (class in braindecode.datasets)": [[77, "braindecode.datasets.HGD", false]], "hybridnet (class in braindecode.models)": [[105, "braindecode.models.HybridNet", false]], "identity() (in module braindecode.augmentation.functional)": [[64, "braindecode.augmentation.functional.identity", false]], "identitytransform (class in braindecode.augmentation)": [[45, "braindecode.augmentation.IdentityTransform", false]], "info (braindecode.samplers.recordingsampler attribute)": [[133, "braindecode.samplers.RecordingSampler.info", false]], "info (braindecode.samplers.sequencesampler attribute)": [[135, "braindecode.samplers.SequenceSampler.info", false]], "initialized_ (braindecode.classifier.eegclassifier attribute)": [[72, "braindecode.classifier.EEGClassifier.initialized_", false]], "initialized_ (braindecode.regressor.eegregressor attribute)": [[131, "braindecode.regressor.EEGRegressor.initialized_", false]], "labram (class in braindecode.models)": [[106, "braindecode.models.Labram", false]], "load_concat_dataset() (in module braindecode.datautil)": [[87, "braindecode.datautil.load_concat_dataset", false]], "load_state_dict() (braindecode.models.eegmodulemixin method)": [[100, "braindecode.models.EEGModuleMixin.load_state_dict", false]], "mask_encoding() (in module braindecode.augmentation.functional)": [[65, "braindecode.augmentation.functional.mask_encoding", false]], "maskencoding (class in braindecode.augmentation)": [[46, "braindecode.augmentation.MaskEncoding", false]], "mixup (class in braindecode.augmentation)": [[47, "braindecode.augmentation.Mixup", false]], "mixup() (in module braindecode.augmentation.functional)": [[66, "braindecode.augmentation.functional.mixup", false]], "mixup_criterion() (in module braindecode.training)": [[141, "braindecode.training.mixup_criterion", false]], "moabbdataset (class in braindecode.datasets)": [[78, "braindecode.datasets.MOABBDataset", false]], "module": [[0, "module-braindecode", false]], "module_ (braindecode.classifier.eegclassifier attribute)": [[72, "braindecode.classifier.EEGClassifier.module_", false]], "module_ (braindecode.regressor.eegregressor attribute)": [[131, "braindecode.regressor.EEGRegressor.module_", false]], "modules() (braindecode.models.eegmodulemixin method)": [[100, "braindecode.models.EEGModuleMixin.modules", false]], "n_recordings (braindecode.samplers.recordingsampler attribute)": [[133, "braindecode.samplers.RecordingSampler.n_recordings", false]], "nmt (class in braindecode.datasets)": [[79, "braindecode.datasets.NMT", false]], "on_batch_end() (braindecode.training.croppedtrialepochscoring method)": [[138, "braindecode.training.CroppedTrialEpochScoring.on_batch_end", false]], "on_epoch_end() (braindecode.training.croppedtimeseriesepochscoring method)": [[137, "braindecode.training.CroppedTimeSeriesEpochScoring.on_epoch_end", false]], "on_epoch_end() (braindecode.training.croppedtrialepochscoring method)": [[138, "braindecode.training.CroppedTrialEpochScoring.on_epoch_end", false]], "on_epoch_end() (braindecode.training.postepochtrainscoring method)": [[139, "braindecode.training.PostEpochTrainScoring.on_epoch_end", false]], "operation() (braindecode.augmentation.bandstopfilter static method)": [[37, "braindecode.augmentation.BandstopFilter.operation", false]], "operation() (braindecode.augmentation.channelsdropout static method)": [[38, "braindecode.augmentation.ChannelsDropout.operation", false]], "operation() (braindecode.augmentation.channelsshuffle static method)": [[39, "braindecode.augmentation.ChannelsShuffle.operation", false]], "operation() (braindecode.augmentation.channelssymmetry static method)": [[40, "braindecode.augmentation.ChannelsSymmetry.operation", false]], "operation() (braindecode.augmentation.frequencyshift static method)": [[43, "braindecode.augmentation.FrequencyShift.operation", false]], "operation() (braindecode.augmentation.ftsurrogate static method)": [[42, "braindecode.augmentation.FTSurrogate.operation", false]], "operation() (braindecode.augmentation.gaussiannoise static method)": [[44, "braindecode.augmentation.GaussianNoise.operation", false]], "operation() (braindecode.augmentation.identitytransform static method)": [[45, "braindecode.augmentation.IdentityTransform.operation", false]], "operation() (braindecode.augmentation.maskencoding static method)": [[46, "braindecode.augmentation.MaskEncoding.operation", false]], "operation() (braindecode.augmentation.mixup static method)": [[47, "braindecode.augmentation.Mixup.operation", false]], "operation() (braindecode.augmentation.segmentationreconstruction static method)": [[48, "braindecode.augmentation.SegmentationReconstruction.operation", false]], "operation() (braindecode.augmentation.sensorsrotation static method)": [[49, "braindecode.augmentation.SensorsRotation.operation", false]], "operation() (braindecode.augmentation.signflip static method)": [[53, "braindecode.augmentation.SignFlip.operation", false]], "operation() (braindecode.augmentation.smoothtimemask static method)": [[54, "braindecode.augmentation.SmoothTimeMask.operation", false]], "operation() (braindecode.augmentation.timereverse static method)": [[55, "braindecode.augmentation.TimeReverse.operation", false]], "parameters() (braindecode.models.eegmodulemixin method)": [[100, "braindecode.models.EEGModuleMixin.parameters", false]], "pick (class in braindecode.preprocessing)": [[120, "braindecode.preprocessing.Pick", false]], "plot_confusion_matrix() (in module braindecode.visualization)": [[146, "braindecode.visualization.plot_confusion_matrix", false]], "postepochtrainscoring (class in braindecode.training)": [[139, "braindecode.training.PostEpochTrainScoring", false]], "predict() (braindecode.classifier.eegclassifier method)": [[72, "braindecode.classifier.EEGClassifier.predict", false]], "predict_proba() (braindecode.classifier.eegclassifier method)": [[72, "braindecode.classifier.EEGClassifier.predict_proba", false]], "predict_proba() (braindecode.regressor.eegregressor method)": [[131, "braindecode.regressor.EEGRegressor.predict_proba", false]], "predict_trials() (braindecode.classifier.eegclassifier method)": [[72, "braindecode.classifier.EEGClassifier.predict_trials", false]], "predict_trials() (braindecode.regressor.eegregressor method)": [[131, "braindecode.regressor.EEGRegressor.predict_trials", false]], "predict_trials() (in module braindecode.training)": [[142, "braindecode.training.predict_trials", false]], "prefixes_ (braindecode.classifier.eegclassifier attribute)": [[72, "braindecode.classifier.EEGClassifier.prefixes_", false]], "prefixes_ (braindecode.regressor.eegregressor attribute)": [[131, "braindecode.regressor.EEGRegressor.prefixes_", false]], "preprocess() (in module braindecode.preprocessing)": [[130, "braindecode.preprocessing.preprocess", false]], "preprocessor (class in braindecode.preprocessing)": [[121, "braindecode.preprocessing.Preprocessor", false]], "presample() (braindecode.samplers.relativepositioningsampler method)": [[134, "braindecode.samplers.RelativePositioningSampler.presample", false]], "recordingsampler (class in braindecode.samplers)": [[133, "braindecode.samplers.RecordingSampler", false]], "relativepositioningsampler (class in braindecode.samplers)": [[134, "braindecode.samplers.RelativePositioningSampler", false]], "resample (class in braindecode.preprocessing)": [[122, "braindecode.preprocessing.Resample", false]], "reset_classifier() (braindecode.models.labram method)": [[106, "braindecode.models.Labram.reset_classifier", false]], "sample_class() (braindecode.samplers.balancedsequencesampler method)": [[132, "braindecode.samplers.BalancedSequenceSampler.sample_class", false]], "sample_recording() (braindecode.samplers.recordingsampler method)": [[133, "braindecode.samplers.RecordingSampler.sample_recording", false]], "sample_window() (braindecode.samplers.recordingsampler method)": [[133, "braindecode.samplers.RecordingSampler.sample_window", false]], "save() (braindecode.datasets.baseconcatdataset method)": [[75, "braindecode.datasets.BaseConcatDataset.save", false]], "save_concat_dataset() (in module braindecode.datautil)": [[88, "braindecode.datautil.save_concat_dataset", false]], "segmentation_reconstruction() (in module braindecode.augmentation.functional)": [[67, "braindecode.augmentation.functional.segmentation_reconstruction", false]], "segmentationreconstruction (class in braindecode.augmentation)": [[48, "braindecode.augmentation.SegmentationReconstruction", false]], "sensors_rotation() (in module braindecode.augmentation.functional)": [[68, "braindecode.augmentation.functional.sensors_rotation", false]], "sensorsrotation (class in braindecode.augmentation)": [[49, "braindecode.augmentation.SensorsRotation", false]], "sensorsxrotation (class in braindecode.augmentation)": [[50, "braindecode.augmentation.SensorsXRotation", false]], "sensorsyrotation (class in braindecode.augmentation)": [[51, "braindecode.augmentation.SensorsYRotation", false]], "sensorszrotation (class in braindecode.augmentation)": [[52, "braindecode.augmentation.SensorsZRotation", false]], "sequencesampler (class in braindecode.samplers)": [[135, "braindecode.samplers.SequenceSampler", false]], "set_description() (braindecode.datasets.baseconcatdataset method)": [[75, "braindecode.datasets.BaseConcatDataset.set_description", false]], "set_description() (braindecode.datasets.basedataset method)": [[76, "braindecode.datasets.BaseDataset.set_description", false]], "set_description() (braindecode.datasets.windowsdataset method)": [[83, "braindecode.datasets.WindowsDataset.set_description", false]], "set_random_seeds() (in module braindecode.util)": [[144, "braindecode.util.set_random_seeds", false]], "seteegreference (class in braindecode.preprocessing)": [[123, "braindecode.preprocessing.SetEEGReference", false]], "shallowfbcspnet (class in braindecode.models)": [[108, "braindecode.models.ShallowFBCSPNet", false]], "sign_flip() (in module braindecode.augmentation.functional)": [[69, "braindecode.augmentation.functional.sign_flip", false]], "signflip (class in braindecode.augmentation)": [[53, "braindecode.augmentation.SignFlip", false]], "sleepphysionet (class in braindecode.datasets)": [[80, "braindecode.datasets.SleepPhysionet", false]], "sleepstagerblanco2020 (class in braindecode.models)": [[109, "braindecode.models.SleepStagerBlanco2020", false]], "sleepstagerchambon2018 (class in braindecode.models)": [[110, "braindecode.models.SleepStagerChambon2018", false]], "sleepstagereldele2021 (class in braindecode.models)": [[111, "braindecode.models.SleepStagerEldele2021", false]], "smooth_time_mask() (in module braindecode.augmentation.functional)": [[70, "braindecode.augmentation.functional.smooth_time_mask", false]], "smoothtimemask (class in braindecode.augmentation)": [[54, "braindecode.augmentation.SmoothTimeMask", false]], "sparcnet (class in braindecode.models)": [[107, "braindecode.models.SPARCNet", false]], "split() (braindecode.datasets.baseconcatdataset method)": [[75, "braindecode.datasets.BaseConcatDataset.split", false]], "tcn (class in braindecode.models)": [[112, "braindecode.models.TCN", false]], "tidnet (class in braindecode.models)": [[113, "braindecode.models.TIDNet", false]], "time_reverse() (in module braindecode.augmentation.functional)": [[71, "braindecode.augmentation.functional.time_reverse", false]], "timedistributed (class in braindecode.models)": [[114, "braindecode.models.TimeDistributed", false]], "timereverse (class in braindecode.augmentation)": [[55, "braindecode.augmentation.TimeReverse", false]], "timeseriesloss (class in braindecode.training)": [[140, "braindecode.training.TimeSeriesLoss", false]], "to_dense_prediction_model() (braindecode.models.eegmodulemixin method)": [[100, "braindecode.models.EEGModuleMixin.to_dense_prediction_model", false]], "torch_stft() (braindecode.models.contrawr method)": [[92, "braindecode.models.ContraWR.torch_stft", false]], "transform (class in braindecode.augmentation)": [[56, "braindecode.augmentation.Transform", false]], "trial_preds_from_window_preds() (in module braindecode.training)": [[143, "braindecode.training.trial_preds_from_window_preds", false]], "tuh (class in braindecode.datasets)": [[81, "braindecode.datasets.TUH", false]], "tuhabnormal (class in braindecode.datasets)": [[82, "braindecode.datasets.TUHAbnormal", false]], "usleep (class in braindecode.models)": [[115, "braindecode.models.USleep", false]], "windowsdataset (class in braindecode.datasets)": [[83, "braindecode.datasets.WindowsDataset", false]]}, "objects": {"": [[0, 0, 0, "-", "braindecode"]], "braindecode.augmentation": [[36, 1, 1, "", "AugmentedDataLoader"], [37, 1, 1, "", "BandstopFilter"], [38, 1, 1, "", "ChannelsDropout"], [39, 1, 1, "", "ChannelsShuffle"], [40, 1, 1, "", "ChannelsSymmetry"], [41, 1, 1, "", "Compose"], [42, 1, 1, "", "FTSurrogate"], [43, 1, 1, "", "FrequencyShift"], [44, 1, 1, "", "GaussianNoise"], [45, 1, 1, "", "IdentityTransform"], [46, 1, 1, "", "MaskEncoding"], [47, 1, 1, "", "Mixup"], [48, 1, 1, "", "SegmentationReconstruction"], [49, 1, 1, "", "SensorsRotation"], [50, 1, 1, "", "SensorsXRotation"], [51, 1, 1, "", "SensorsYRotation"], [52, 1, 1, "", "SensorsZRotation"], [53, 1, 1, "", "SignFlip"], [54, 1, 1, "", "SmoothTimeMask"], [55, 1, 1, "", "TimeReverse"], [56, 1, 1, "", "Transform"]], "braindecode.augmentation.BandstopFilter": [[37, 2, 1, "", "get_augmentation_params"], [37, 2, 1, "", "operation"]], "braindecode.augmentation.ChannelsDropout": [[38, 2, 1, "", "get_augmentation_params"], [38, 2, 1, "", "operation"]], "braindecode.augmentation.ChannelsShuffle": [[39, 2, 1, "", "get_augmentation_params"], [39, 2, 1, "", "operation"]], "braindecode.augmentation.ChannelsSymmetry": [[40, 2, 1, "", "get_augmentation_params"], [40, 2, 1, "", "operation"]], "braindecode.augmentation.Compose": [[41, 2, 1, "", "forward"]], "braindecode.augmentation.FTSurrogate": [[42, 2, 1, "", "get_augmentation_params"], [42, 2, 1, "", "operation"]], "braindecode.augmentation.FrequencyShift": [[43, 2, 1, "", "get_augmentation_params"], [43, 2, 1, "", "operation"]], "braindecode.augmentation.GaussianNoise": [[44, 2, 1, "", "get_augmentation_params"], [44, 2, 1, "", "operation"]], "braindecode.augmentation.IdentityTransform": [[45, 2, 1, "", "operation"]], "braindecode.augmentation.MaskEncoding": [[46, 2, 1, "", "get_augmentation_params"], [46, 2, 1, "", "operation"]], "braindecode.augmentation.Mixup": [[47, 2, 1, "", "get_augmentation_params"], [47, 2, 1, "", "operation"]], "braindecode.augmentation.SegmentationReconstruction": [[48, 2, 1, "", "get_augmentation_params"], [48, 2, 1, "", "operation"]], "braindecode.augmentation.SensorsRotation": [[49, 2, 1, "", "get_augmentation_params"], [49, 2, 1, "", "operation"]], "braindecode.augmentation.SignFlip": [[53, 2, 1, "", "operation"]], "braindecode.augmentation.SmoothTimeMask": [[54, 2, 1, "", "get_augmentation_params"], [54, 2, 1, "", "operation"]], "braindecode.augmentation.TimeReverse": [[55, 2, 1, "", "operation"]], "braindecode.augmentation.Transform": [[56, 2, 1, "", "forward"], [56, 2, 1, "", "get_augmentation_params"]], "braindecode.augmentation.functional": [[57, 3, 1, "", "bandstop_filter"], [58, 3, 1, "", "channels_dropout"], [59, 3, 1, "", "channels_permute"], [60, 3, 1, "", "channels_shuffle"], [61, 3, 1, "", "frequency_shift"], [62, 3, 1, "", "ft_surrogate"], [63, 3, 1, "", "gaussian_noise"], [64, 3, 1, "", "identity"], [65, 3, 1, "", "mask_encoding"], [66, 3, 1, "", "mixup"], [67, 3, 1, "", "segmentation_reconstruction"], [68, 3, 1, "", "sensors_rotation"], [69, 3, 1, "", "sign_flip"], [70, 3, 1, "", "smooth_time_mask"], [71, 3, 1, "", "time_reverse"]], "braindecode.classifier": [[72, 1, 1, "", "EEGClassifier"]], "braindecode.classifier.EEGClassifier": [[72, 4, 1, "", "_criteria"], [72, 4, 1, "", "_modules"], [72, 4, 1, "", "_optimizers"], [72, 4, 1, "", "callbacks_"], [72, 4, 1, "", "classes_"], [72, 4, 1, "", "criterion_"], [72, 4, 1, "", "cuda_dependent_attributes_"], [72, 2, 1, "", "get_iterator"], [72, 2, 1, "", "get_loss"], [72, 4, 1, "", "initialized_"], [72, 4, 1, "", "module_"], [72, 2, 1, "", "predict"], [72, 2, 1, "", "predict_proba"], [72, 2, 1, "", "predict_trials"], [72, 4, 1, "", "prefixes_"]], "braindecode.datasets": [[73, 1, 1, "", "BCICompetitionIVDataset4"], [74, 1, 1, "", "BNCI2014001"], [75, 1, 1, "", "BaseConcatDataset"], [76, 1, 1, "", "BaseDataset"], [77, 1, 1, "", "HGD"], [78, 1, 1, "", "MOABBDataset"], [79, 1, 1, "", "NMT"], [80, 1, 1, "", "SleepPhysionet"], [81, 1, 1, "", "TUH"], [82, 1, 1, "", "TUHAbnormal"], [83, 1, 1, "", "WindowsDataset"], [84, 3, 1, "", "create_from_X_y"], [85, 3, 1, "", "create_from_mne_epochs"], [86, 3, 1, "", "create_from_mne_raw"]], "braindecode.datasets.BCICompetitionIVDataset4": [[73, 2, 1, "", "download"]], "braindecode.datasets.BaseConcatDataset": [[75, 2, 1, "", "get_metadata"], [75, 2, 1, "", "save"], [75, 2, 1, "", "set_description"], [75, 2, 1, "", "split"]], "braindecode.datasets.BaseDataset": [[76, 2, 1, "", "set_description"]], "braindecode.datasets.WindowsDataset": [[83, 2, 1, "", "set_description"]], "braindecode.datautil": [[87, 3, 1, "", "load_concat_dataset"], [88, 3, 1, "", "save_concat_dataset"]], "braindecode.models": [[89, 1, 1, "", "ATCNet"], [90, 1, 1, "", "AttentionBaseNet"], [91, 1, 1, "", "BIOT"], [92, 1, 1, "", "ContraWR"], [93, 1, 1, "", "Deep4Net"], [94, 1, 1, "", "DeepSleepNet"], [95, 1, 1, "", "EEGConformer"], [96, 1, 1, "", "EEGITNet"], [97, 1, 1, "", "EEGInception"], [98, 1, 1, "", "EEGInceptionERP"], [99, 1, 1, "", "EEGInceptionMI"], [100, 1, 1, "", "EEGModuleMixin"], [101, 1, 1, "", "EEGNetv1"], [102, 1, 1, "", "EEGNetv4"], [103, 1, 1, "", "EEGResNet"], [104, 1, 1, "", "EEGSimpleConv"], [105, 1, 1, "", "HybridNet"], [106, 1, 1, "", "Labram"], [107, 1, 1, "", "SPARCNet"], [108, 1, 1, "", "ShallowFBCSPNet"], [109, 1, 1, "", "SleepStagerBlanco2020"], [110, 1, 1, "", "SleepStagerChambon2018"], [111, 1, 1, "", "SleepStagerEldele2021"], [112, 1, 1, "", "TCN"], [113, 1, 1, "", "TIDNet"], [114, 1, 1, "", "TimeDistributed"], [115, 1, 1, "", "USleep"], [116, 3, 1, "", "get_output_shape"]], "braindecode.models.ATCNet": [[89, 2, 1, "", "forward"]], "braindecode.models.AttentionBaseNet": [[90, 2, 1, "", "forward"]], "braindecode.models.BIOT": [[91, 2, 1, "", "forward"]], "braindecode.models.ContraWR": [[92, 2, 1, "", "forward"], [92, 2, 1, "", "torch_stft"]], "braindecode.models.DeepSleepNet": [[94, 2, 1, "", "forward"]], "braindecode.models.EEGConformer": [[95, 2, 1, "", "forward"], [95, 2, 1, "", "get_fc_size"]], "braindecode.models.EEGInceptionMI": [[99, 2, 1, "", "forward"]], "braindecode.models.EEGModuleMixin": [[100, 2, 1, "", "forward"], [100, 2, 1, "", "get_output_shape"], [100, 2, 1, "", "get_torchinfo_statistics"], [100, 2, 1, "", "load_state_dict"], [100, 2, 1, "", "modules"], [100, 2, 1, "", "parameters"], [100, 2, 1, "", "to_dense_prediction_model"]], "braindecode.models.EEGSimpleConv": [[104, 2, 1, "", "forward"]], "braindecode.models.HybridNet": [[105, 2, 1, "", "forward"]], "braindecode.models.Labram": [[106, 2, 1, "", "fix_init_weight_and_init_embedding"], [106, 2, 1, "", "forward"], [106, 2, 1, "", "forward_features"], [106, 2, 1, "", "get_classifier"], [106, 2, 1, "", "get_num_layers"], [106, 2, 1, "", "reset_classifier"]], "braindecode.models.SPARCNet": [[107, 2, 1, "", "forward"]], "braindecode.models.SleepStagerBlanco2020": [[109, 2, 1, "", "forward"]], "braindecode.models.SleepStagerChambon2018": [[110, 2, 1, "", "forward"]], "braindecode.models.SleepStagerEldele2021": [[111, 2, 1, "", "forward"]], "braindecode.models.TCN": [[112, 2, 1, "", "forward"]], "braindecode.models.TIDNet": [[113, 2, 1, "", "forward"]], "braindecode.models.TimeDistributed": [[114, 2, 1, "", "forward"]], "braindecode.models.USleep": [[115, 2, 1, "", "forward"]], "braindecode.preprocessing": [[117, 1, 1, "", "Crop"], [118, 1, 1, "", "DropChannels"], [119, 1, 1, "", "Filter"], [120, 1, 1, "", "Pick"], [121, 1, 1, "", "Preprocessor"], [122, 1, 1, "", "Resample"], [123, 1, 1, "", "SetEEGReference"], [124, 3, 1, "", "create_fixed_length_windows"], [125, 3, 1, "", "create_windows_from_events"], [126, 3, 1, "", "create_windows_from_target_channels"], [127, 3, 1, "", "exponential_moving_demean"], [128, 3, 1, "", "exponential_moving_standardize"], [129, 3, 1, "", "filterbank"], [130, 3, 1, "", "preprocess"]], "braindecode.preprocessing.Preprocessor": [[121, 2, 1, "", "apply"]], "braindecode.regressor": [[131, 1, 1, "", "EEGRegressor"]], "braindecode.regressor.EEGRegressor": [[131, 4, 1, "", "_criteria"], [131, 4, 1, "", "_modules"], [131, 4, 1, "", "_optimizers"], [131, 4, 1, "", "callbacks_"], [131, 4, 1, "", "criterion_"], [131, 4, 1, "", "cuda_dependent_attributes_"], [131, 2, 1, "", "fit"], [131, 2, 1, "", "get_iterator"], [131, 4, 1, "", "initialized_"], [131, 4, 1, "", "module_"], [131, 2, 1, "", "predict_proba"], [131, 2, 1, "", "predict_trials"], [131, 4, 1, "", "prefixes_"]], "braindecode.samplers": [[132, 1, 1, "", "BalancedSequenceSampler"], [133, 1, 1, "", "RecordingSampler"], [134, 1, 1, "", "RelativePositioningSampler"], [135, 1, 1, "", "SequenceSampler"]], "braindecode.samplers.BalancedSequenceSampler": [[132, 2, 1, "", "sample_class"]], "braindecode.samplers.RecordingSampler": [[133, 4, 1, "", "info"], [133, 4, 1, "", "n_recordings"], [133, 2, 1, "", "sample_recording"], [133, 2, 1, "", "sample_window"]], "braindecode.samplers.RelativePositioningSampler": [[134, 2, 1, "", "presample"]], "braindecode.samplers.SequenceSampler": [[135, 4, 1, "", "file_ids"], [135, 4, 1, "", "info"]], "braindecode.training": [[136, 1, 1, "", "CroppedLoss"], [137, 1, 1, "", "CroppedTimeSeriesEpochScoring"], [138, 1, 1, "", "CroppedTrialEpochScoring"], [139, 1, 1, "", "PostEpochTrainScoring"], [140, 1, 1, "", "TimeSeriesLoss"], [141, 3, 1, "", "mixup_criterion"], [142, 3, 1, "", "predict_trials"], [143, 3, 1, "", "trial_preds_from_window_preds"]], "braindecode.training.CroppedLoss": [[136, 2, 1, "", "forward"]], "braindecode.training.CroppedTimeSeriesEpochScoring": [[137, 2, 1, "", "on_epoch_end"]], "braindecode.training.CroppedTrialEpochScoring": [[138, 2, 1, "", "on_batch_end"], [138, 2, 1, "", "on_epoch_end"]], "braindecode.training.PostEpochTrainScoring": [[139, 2, 1, "", "on_epoch_end"]], "braindecode.training.TimeSeriesLoss": [[140, 2, 1, "", "forward"]], "braindecode.util": [[144, 3, 1, "", "set_random_seeds"]], "braindecode.visualization": [[145, 3, 1, "", "compute_amplitude_gradients"], [146, 3, 1, "", "plot_confusion_matrix"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "terms": {"": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 21, 22, 26, 27, 28, 30, 31, 32, 40, 42, 44, 48, 49, 50, 51, 52, 59, 62, 63, 68, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 89, 98, 99, 101, 102, 106, 107, 110, 112, 115, 118, 119, 121, 123, 131, 132, 136, 139, 140], "0": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 42, 44, 45, 46, 47, 56, 58, 60, 62, 66, 72, 74, 75, 79, 80, 81, 82, 86, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 133, 142, 146, 152], "00": [6, 10, 13, 16, 18, 23, 26, 27, 29, 32, 33, 34, 152], "000": [5, 16, 17, 18, 19, 22, 23, 31, 34, 152], "0000": [2, 3, 8, 27, 28, 29, 30, 31], "00000000": 22, "00000058": 22, "0000625": 30, "00009932": 22, "0001": [2, 30, 103, 128], "00012331": 22, "00014928": 22, "0002": [2, 3, 28], "0004": 2, "0005": [2, 3, 22, 28, 31], "000525": 22, "0006": [2, 3, 8, 27, 28, 29], "000625": 29, "001": [3, 4, 18, 20, 21, 27, 28, 29, 30, 31, 74, 106, 127, 128], "0010": 31, "00267": 35, "004": 11, "0040": 5, "00625": [29, 30], "0063": [29, 30], "0078": 30, "0082": 26, "0083": 26, "0085": 26, "0087": 26, "0088": 26, "0090": 26, "0091": 30, "0092": 26, "0095": 2, "00m": 16, "01": [2, 3, 4, 6, 8, 16, 18, 23, 26, 27, 28, 29, 32, 72, 97, 98, 131, 152], "0100": 26, "011": 11, "0127": 29, "01271": 112, "0152": 26, "0165": [22, 29], "0168": 22, "0173": 29, "018": [3, 6, 152], "019": [2, 8, 73, 109], "0193": 35, "0194": 16, "01_tcp_ar": 22, "01m": 16, "02": [6, 11, 13, 16, 18, 23, 26, 27, 33, 91, 92, 106, 107, 152], "0208": 29, "0234": 28, "0243": 10, "0254": 30, "0258": 29, "0260": 22, "0273": 22, "02736802": 22, "028": [4, 6, 152], "0280": 22, "02_tcp_le": 22, "02it": 32, "02m12": 16, "03": [9, 10, 11, 13, 16, 23, 90, 106, 152], "0308": 22, "0308012": 22, "0311": 22, "0366": 29, "0370": [27, 30], "03_tcp_ar_a": 22, "03m": 16, "04": [3, 4, 11, 16, 18, 23, 26, 27, 28, 29, 32, 152], "0408": 22, "0412": 31, "04174": 109, "0419": 22, "04194231": 22, "0426": 22, "044": [3, 4, 28, 29, 32], "0448": 22, "045496": 32, "046014": 99, "046020": 4, "0480": 30, "04871": [37, 44, 54, 57, 63, 70], "04it": 32, "05": [6, 10, 11, 12, 16, 18, 27, 81, 82, 113], "0506": 22, "0508": 22, "0511": 29, "0537782": 22, "0538": 22, "05458383": 22, "0546": 22, "055109": 32, "056": 33, "056008": 113, "0591": 31, "0593": 22, "059300": 32, "05it": 32, "05m": 16, "06": [10, 11, 16], "060": 11, "061": [22, 23, 152], "0625": [2, 3, 4, 8, 27, 28, 29, 32], "06366": 106, "0643": 2, "066011": [28, 29, 30], "0672": 30, "0678": [2, 8, 27, 73], "0680": 28, "0681": 29, "06m": 16, "07": [10, 13, 16, 29, 30, 33, 152], "0703125": 115, "07159": 104, "0720": 2, "0741": 31, "0759": 29, "08": [4, 16, 18, 27, 29], "08024": [101, 102], "0842": 30, "08675": [42, 62], "0884": 2, "0888": 9, "08m": 16, "09": [16, 18, 27], "09237": 31, "09412": [47, 66, 141], "0966": 9, "0967": 9, "09702": [40, 59], "0980": 5, "099": 22, "09m": 16, "0m": [16, 27], "0mb": [18, 27], "0test": 29, "0train": [3, 4, 18, 20, 21, 27, 28, 29, 30, 32], "0x7f810de30160": 5, "0x7f810de308e0": 21, "0x7f810de31870": 21, "0x7f810de324d0": 21, "0x7f810de32770": 21, "0x7f810de32ce0": 5, "0x7f810ec68310": 5, "0x7f810ecbb3a0": 9, "0x7f810ecf57e0": 4, "0x7f811f5d64a0": 16, "0x7f811f7fe2c0": 3, "0x7f811fe6c190": 10, "0x7f811fe6c5e0": 10, "0x7f81251adf00": 9, "0x7f81251cf550": 5, "0x7f8125423b80": 27, "0x7f812559ca00": 30, "0x7f81258010c0": 16, "0x7f8125801180": 9, "0x7f812583cf70": 11, "0x7f81289b93c0": 2, "0x7f81e850fbb0": 8, "0x7f81e92374c0": 16, "0x7f81e925c2e0": 28, "0x7f81e92dc670": 32, "0x7f81ead50460": 21, "0x7f81ead50610": 21, "0x7f81ead50790": 21, "0x7f81ead50850": 21, "0x7f81ead50880": 21, "0x7f81ead508b0": 21, "0x7f81ead50910": 21, "0x7f81ead50ca0": 21, "0x7f81ead50df0": 21, "0x7f81ead50ee0": 21, "0x7f81ead513c0": 21, "0x7f81ead51ba0": 21, "0x7f81ead51db0": 21, "0x7f81eb31e680": 21, "0x7f82009d3c10": 31, "0x7f8200a11de0": 16, "0x7f8200a12170": 21, "0x7f8200a43a00": 29, "0x7f8200caf3d0": 18, "1": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 31, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 70, 72, 73, 74, 75, 77, 79, 80, 81, 82, 87, 89, 90, 92, 93, 97, 98, 99, 100, 103, 104, 106, 108, 109, 111, 113, 115, 116, 119, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 141, 142, 143, 146, 152], "10": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 35, 40, 49, 50, 51, 52, 68, 72, 73, 81, 82, 89, 93, 95, 96, 97, 98, 103, 105, 106, 108, 109, 111, 113, 119, 123, 131, 132, 146], "100": [3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 20, 26, 27, 28, 29, 30, 31, 32, 37, 54, 74, 91, 93, 104, 107, 115, 122], "1000": [2, 3, 4, 8, 12, 22, 26, 27, 28, 29, 30, 32, 77, 97, 98, 133], "1002": [26, 27, 28, 29, 30, 35, 93, 103, 105, 108, 146], "1007": 109, "100hz": 111, "101": [5, 9, 10, 11, 12], "102": 11, "1024": 26, "103": [48, 67], "1031": 11, "1038": [2, 8, 73], "105": 5, "1064": [18, 27], "107": [5, 26], "108": 11, "1088": [5, 113], "109": 5, "1097": 35, "10it": 32, "11": [2, 3, 4, 5, 8, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 28, 29, 31, 32, 33, 73, 94, 152], "110": 11, "1101": [3, 4, 28, 29, 32], "1109": [10, 89, 96, 97, 98, 111], "11198": 90, "1125": [3, 4, 28, 29, 32], "1128": [33, 152], "1129": 28, "1131": [6, 32, 33, 152], "1132": 3, "1143": [33, 152], "1144": 29, "1145": 22, "1149": [9, 29], "115": 11, "1175": 22, "11754766": 22, "1185": [5, 9, 10, 11, 22], "1194": [5, 9, 10, 11], "11m": 16, "12": [2, 4, 5, 10, 11, 13, 16, 17, 18, 19, 27, 28, 29, 30, 32, 33, 74, 104, 106, 115, 146, 152], "120": [10, 77, 111], "1209": 22, "1209397": 22, "121": [5, 12], "1215": 31, "122": 12, "1225": [2, 8, 73], "123": 22, "1230": 3, "1235": [2, 8, 73], "124": [17, 19, 27], "1244": 2, "1247": 5, "1249": 22, "12493701": 22, "125": [97, 98, 110], "1251": [3, 8, 22], "1256": 30, "125hz": 111, "126": 11, "128": [5, 10, 11, 72, 77, 92, 97, 98, 104, 110, 115, 131], "1281": 22, "129": [5, 11], "12mb": 27, "13": [2, 5, 9, 11, 16, 17, 19, 26, 27, 32, 77, 80, 91, 92, 107, 119, 129], "1313": 29, "1319": 22, "1322": 22, "132gb": 27, "133": [10, 11], "13440": 77, "1350": 22, "1355": 30, "13578887": 22, "1360": 22, "13694": [38, 39, 58, 60], "138": 153, "13m": 16, "13mb": 27, "14": [2, 5, 8, 9, 11, 16, 17, 18, 19, 27, 28, 32, 77, 119, 144, 152], "1409": 22, "1412": 31, "141gb": 16, "142": [5, 153], "1422": 22, "14345092": 22, "143gb": 18, "144": [4, 74, 104], "1441": 29, "1443": 31, "14483": 4, "145": 32, "146": 153, "147": 153, "1471": 10, "1473": 28, "1475": 29, "147gb": 16, "147k": 16, "148": 153, "14827406": 22, "1483": 22, "1486": 22, "1486133": 22, "149": 22, "14m": 16, "15": [2, 5, 9, 10, 11, 12, 14, 16, 18, 26, 27, 28, 29, 30, 49, 50, 51, 52, 79, 90, 95, 108, 113, 119, 122], "150": [9, 10, 11, 26, 33, 77, 152], "1500": [11, 113, 133], "1507": 8, "1508": 22, "1510": 8, "1514": [2, 6, 33, 152], "1515": 27, "152": [11, 153], "1531": 10, "1534": 29, "1535": 22, "15352039": 22, "1539": 3, "154": 11, "1544": 30, "15447331": 22, "15447332": 22, "1545": 22, "1547": 10, "155": 153, "1558": 30, "156": 11, "1567": 3, "1572": 30, "15756383": 22, "158": 153, "1585": 29, "159": 153, "1594": 11, "15m": 16, "15mb": 27, "16": [2, 5, 9, 10, 11, 16, 18, 27, 30, 89, 90, 102, 107, 110, 119], "160": [11, 77], "16017832": 22, "1602": 22, "1607": 22, "161": [11, 153], "16104": [5, 134], "1611": [101, 102], "1618": 31, "1625": 27, "1627": 29, "163": 11, "164": 153, "166": 153, "1662": 35, "167": 153, "1677": 22, "169": 153, "16m": 16, "17": [2, 5, 11, 16, 27, 104, 107, 113], "170": [5, 153], "1707": 11, "171": 153, "1710": [47, 66, 141], "1729": 22, "172kb": [18, 27], "173kb": 27, "1741": 113, "176": [10, 19], "1768": 22, "178": [9, 13, 152, 153], "1792846": 22, "1793": 22, "1795": 10, "18": [2, 3, 4, 5, 6, 11, 12, 16, 18, 27, 29, 99, 152], "180": 11, "1803": [40, 59, 112], "1806": [42, 62], "1807": 22, "180gb": 27, "180k": 16, "1811": 10, "1840": 2, "185": 153, "1853": 11, "1870": 2, "188": 11, "1882": 22, "1885": 10, "189": 32, "1897": 30, "18m": 16, "18mb": 27, "19": [5, 6, 9, 10, 11, 16, 18, 27, 33, 117, 123], "1904": 31, "193383": 32, "193k": 27, "194": 9, "195": 11, "1955": 10, "197": [11, 153], "19750": 16, "1975000": 16, "1976873874664307": 32, "198": 153, "199": 153, "1998": 94, "19999": [17, 19], "19it": 32, "19k": [18, 27], "19m": 16, "19mb": [18, 27], "1_": 89, "1d": [99, 104], "1e": [2, 3, 4, 8, 9, 10, 11, 27, 28, 29, 30, 32], "1e6": [2, 3, 4, 5, 8, 9, 10, 12, 27, 28, 29, 30, 32], "1f": [12, 32], "1hz": 37, "1k": [18, 27], "1kb": 18, "1m": [16, 18, 27], "1mb": [16, 27], "1test": [3, 4, 20, 21, 27, 28, 29, 30, 32], "2": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 30, 31, 33, 37, 38, 39, 42, 43, 44, 47, 54, 57, 62, 63, 66, 70, 72, 74, 77, 79, 80, 89, 92, 93, 97, 98, 100, 101, 102, 103, 104, 109, 111, 113, 115, 119, 123, 128, 131, 132, 133, 141, 142, 152], "20": [2, 5, 9, 10, 11, 12, 16, 26, 27, 29, 31, 32, 40, 49, 50, 51, 52, 68, 92, 103, 109, 123], "200": [2, 8, 10, 11, 14, 91, 93, 106], "2000": [5, 9, 10, 11, 22, 30, 133], "20000": 17, "2004": 77, "2007": [5, 37, 44, 54, 57, 63, 70, 134], "2008": [77, 94], "2010": [38, 39, 58, 60, 77], "2012": [27, 28, 29, 30], "2013": 35, "2014": [31, 74], "2015": [48, 67], "2016": [29, 101], "2017": [26, 27, 28, 29, 30, 31, 35, 49, 50, 51, 52, 68, 77, 93, 94, 103, 105, 108, 146], "2018": [5, 9, 10, 28, 29, 30, 40, 42, 44, 47, 59, 62, 63, 66, 102, 110, 112], "2019": [2, 8, 31, 73], "202": 26, "2020": [5, 37, 38, 39, 44, 54, 57, 58, 60, 63, 70, 97, 98, 109, 113, 134], "20200220": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "2021": [4, 10, 11, 97, 98, 99, 111, 115, 132], "2022": [4, 30, 79, 89, 95, 96, 97, 98], "2023": [90, 91, 92, 104, 107], "2024": [46, 90, 91, 92, 106, 107], "202gb": 18, "2031": 22, "2036": 9, "2037": 22, "2040": 11, "2069": 30, "209k": [18, 27], "20it": 32, "20m": 16, "20mb": 18, "21": [5, 9, 10, 11, 16, 17, 18, 27, 31, 123], "2102": 9, "2126": 9, "2136": 9, "2137": 22, "214": 11, "21543634": 22, "216": 11, "2171": 29, "217304": 32, "2174": 30, "2186": 10, "2196f3": 29, "21m": 16, "22": [3, 4, 5, 9, 11, 16, 17, 18, 19, 27, 28, 29, 32, 74], "2206": 4, "2208": 106, "2217": 29, "22222222222223": [9, 10, 11], "2224": 11, "223": 153, "224": 13, "22477157": 22, "2247716": 22, "2248": 22, "2249": 22, "225": 11, "228": 11, "2295": 10, "229k": 16, "22it": 32, "23": [5, 9, 10, 11, 16, 17, 18, 23, 27, 118, 152], "2309": 104, "2310": 90, "232164": 20, "2324": 9, "2331": 10, "2348": 30, "2351": 29, "237": [11, 18, 23, 152], "23730": [26, 27, 28, 29, 30, 35, 93, 103, 105, 108, 146], "2374": 22, "238": [37, 44, 54, 57, 63, 70], "23m": 16, "24": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 18, 27, 28, 29, 30, 31, 32, 109, 113, 120, 152], "240": [3, 4, 17, 26, 27, 28, 29, 32], "2414": 30, "2416": 30, "2431": 28, "2435": 30, "244": [5, 9, 16], "2465": 9, "24m": 16, "25": [2, 5, 8, 9, 11, 12, 13, 14, 16, 18, 27, 29, 31, 32, 74, 89, 90, 93, 94, 95, 97, 98, 101, 102, 108, 110, 119, 152], "250": [5, 20, 27, 74, 89, 95, 99, 103], "2500": [3, 22, 27, 28, 29, 133], "2505": 31, "25070": 16, "2507000": 16, "250hz": 74, "25153176": 22, "252112": 32, "2522": [22, 30], "2526": 22, "253": [37, 44, 54, 57, 63, 70], "2535": 3, "254": 153, "2552": 113, "2554": 3, "256": [14, 26, 91, 92, 153], "2565": 29, "2569": [28, 29], "256hz": 26, "2570": 28, "2581": 30, "2582": 8, "25829056": 22, "2583": 22, "25878426": 22, "2588": 22, "259046": 32, "25m": 16, "26": [4, 5, 9, 10, 11, 16, 18, 20, 27, 110], "260": 77, "2600": 22, "2603": 31, "2609": 29, "261": 153, "2626": 5, "263": 153, "2639": 3, "2641": 29, "2652": 29, "2657": 22, "267": 35, "269": 153, "2694": 27, "2699": 8, "26m": 16, "27": [2, 4, 9, 11, 16, 18, 27, 29, 77], "2708": 3, "2712": 2, "2727": 29, "274": 153, "2742": 22, "2759": 30, "2768": 9, "277": 153, "2778": 30, "2781": 10, "2783": 30, "279k": 16, "27m": 16, "28": [9, 11, 13, 16, 18, 27, 29, 90, 97, 98], "2812": 29, "28125": 32, "282": 153, "284001": 32, "28417889": 22, "287": 153, "2870": [29, 30], "2877": 29, "288": [74, 153], "28840": 16, "2884000": 16, "2885": 22, "2888": 9, "289975": 32, "28m": 16, "28mb": [18, 27], "29": [10, 11, 16, 18, 27, 31, 111], "2916": 30, "2919": 22, "292": 153, "2920": 31, "294": 153, "295": 153, "2952": 9, "2957": 30, "2975": 22, "298": 32, "2980": 29, "2997": 22, "2997373": 22, "2999": 31, "29m": 16, "2a": [1, 6, 20, 21, 24, 25, 26, 28, 29, 30, 32, 33, 36, 38, 41, 42, 43, 53, 54, 56, 75, 78, 89, 99, 100, 108, 121, 125, 128, 130, 136, 144, 146, 152, 153], "2d": [5, 146], "2darrai": 143, "2f": [4, 29, 30, 32], "2m": [16, 18, 27], "2mb": [18, 27], "2x2": 115, "2\u03c0": 4, "3": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 30, 31, 32, 33, 44, 47, 49, 63, 66, 68, 72, 73, 74, 77, 80, 89, 93, 97, 98, 99, 100, 103, 109, 112, 113, 131, 132, 133, 142, 149, 152, 153], "30": [2, 5, 8, 9, 10, 11, 16, 18, 27, 30, 31, 33, 80, 111, 112, 115, 152], "3000": [11, 22, 31], "30167542": 22, "302": 11, "3036": 22, "30362263": 22, "304": [11, 13, 152, 153], "3047": 2, "3048106": [97, 98], "305": 19, "3076234": [10, 111], "3086": 2, "30it": 32, "31": [5, 9, 10, 11, 13, 16, 26, 27, 32, 95, 152], "3103": 30, "3115": 10, "311k": 16, "312": 153, "3129": 31, "3130": 30, "3132": 2, "3153": 8, "3161489": 96, "31628": 144, "3169": 22, "318": 153, "3195": 11, "3197419": 89, "31m": 16, "32": [4, 5, 9, 10, 11, 16, 18, 26, 27, 46, 89, 92, 101, 113], "323": 11, "324": 11, "32600": 16, "3260000": 16, "327": 153, "3297": 3, "3299779": 22, "32m": 16, "33": [4, 6, 9, 11, 16, 18, 27, 29, 33, 152], "3300": 22, "3316": 2, "332": 153, "333": 153, "3348": 29, "336930": 32, "336kb": 18, "337kb": 27, "338": 11, "3389": 35, "33it": 32, "33m": 16, "34": [5, 6, 9, 11, 16, 27, 152], "3406": 22, "3407": 9, "341": 153, "3448": [29, 30], "3450": 9, "3459": 10, "3464": 11, "347": 153, "349": 153, "34it": 32, "34m": 16, "35": [3, 4, 11, 16, 18, 27, 28, 29, 30, 31, 32], "350": 5, "3500": 26, "350551": 32, "3522": 29, "353": 153, "3549": 2, "356": [31, 33, 152], "3565": 29, "35it": 32, "35m": 16, "36": [3, 4, 9, 11, 16, 18, 27, 28, 29, 32], "3600": [22, 80], "360k": 16, "361": [30, 33, 152], "3613": 22, "3621": 29, "363": 11, "364": [3, 4, 28, 29, 32], "3642": 30, "3648": 22, "365": 153, "3657": 30, "3667": 9, "367": 153, "368": 11, "3689": 9, "3692": 9, "36it": 32, "36m": 16, "37": [9, 11, 16, 18, 22, 26], "371": 153, "3712": 8, "372": [8, 9, 13, 17, 23, 152], "372kb": [18, 27], "3730": 22, "373041": 22, "3739": 30, "375": 11, "376": 11, "377": 11, "3778": 9, "378": 153, "3793": 30, "3796": 22, "3799": 9, "37m": 16, "38": [3, 4, 11, 16, 27, 28, 29, 30, 31, 32], "3814": 9, "3820": 9, "3829": 22, "383": 9, "3831": 9, "3853": 29, "386": 18, "38658058": 22, "3865806": 22, "3866": 22, "3868": 18, "3878": 22, "388": 153, "389": 153, "38m": 16, "39": [4, 11, 16, 18, 22, 27], "390": 153, "391": 153, "3910": 2, "3912": 22, "3913": [29, 30], "393k": 16, "3954": 9, "3966": 30, "397": 153, "3971": 8, "3976": 30, "3986": 22, "399": 11, "3993": 9, "3996": 22, "39it": 32, "39m": 16, "39mb": [18, 27], "39th": [49, 50, 51, 52, 68], "3a6190": 29, "3d": [49, 68, 153], "3f": 30, "3h": 80, "3k": [18, 27], "3m": [16, 18, 27], "3mb": [18, 27], "4": [1, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 73, 74, 75, 77, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 110, 113, 115, 116, 121, 124, 126, 128, 129, 130, 132, 133, 137, 138, 140, 144, 152], "40": [3, 4, 11, 14, 16, 26, 27, 28, 29, 31, 32, 33, 90, 95, 108, 152], "400": [10, 11, 153], "4000": 29, "400k": 91, "4013": 9, "4014": 9, "402": 153, "403": [32, 33, 152], "4033": 9, "405": 11, "406": 153, "4067": 109, "4076": [9, 30], "4079": 109, "409": 153, "409k": 27, "40mb": 18, "41": [5, 11, 16, 27], "411": 153, "4122": 22, "413": 153, "4138": 30, "415": 153, "417": [79, 153], "41m": 16, "42": [9, 11, 16, 18, 27, 30], "4237": 2, "424": 32, "4240": 30, "4261": 30, "427": [12, 13, 152], "428": [11, 153], "4288": 8, "429": 153, "42m": 16, "43": [5, 10, 11, 16, 18, 23], "431": 153, "432k": [18, 27], "4355": 30, "4398": 22, "43it": 32, "43m": 16, "44": [11, 16, 18, 27, 30, 77], "4401": 30, "4409": 2, "4418": 22, "4429": 22, "4429058": 22, "442k": 16, "443": 153, "4433": 22, "4436": 2, "4447": 2, "446": 153, "4471": 2, "4482": 2, "4483": 30, "4484": 2, "44it": 32, "44m": [16, 27], "45": [4, 5, 11, 16, 26, 29, 32], "450": 16, "451": 153, "4517": 9, "4518": 10, "452": 11, "4522": 30, "4526": 2, "4535": 22, "453x": 35, "454": 153, "4564": 22, "459110": 32, "45it": 32, "46": [5, 11, 16, 26], "460": 153, "4604": 22, "461": 153, "465": 153, "466": 153, "4660": 22, "4663": 2, "4664": 22, "4666": 2, "467": 153, "468": 153, "469": 5, "46it": 32, "46m": 16, "47": [3, 4, 5, 9, 10, 11, 16, 27, 28, 29, 32], "470": 153, "471": [49, 50, 51, 52, 68], "472": 153, "4721": 29, "473": 153, "4737": 28, "474": [49, 50, 51, 52, 68], "475k": 16, "4760": 10, "4788": 9, "479": 153, "47m": 16, "48": [5, 10, 11, 16, 18, 20, 21, 27, 28, 29, 30, 32, 74, 99], "482": 11, "4828": 30, "485": 153, "487": 153, "488": 153, "4880": 5, "489": 153, "489191": 32, "49": [11, 16, 18], "490": 153, "491": 153, "4914": 27, "4922": 5, "4928": 11, "4929": 10, "494": 153, "495": 153, "4957": 30, "497": 153, "4996": 31, "49m": 16, "49mb": 18, "4d": 153, "4f": 5, "4m": [16, 18, 27], "4mb": [18, 27], "4th": 119, "5": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 72, 74, 89, 90, 93, 94, 95, 97, 98, 99, 104, 106, 107, 108, 109, 110, 111, 112, 115, 122, 131, 152], "50": [3, 4, 5, 9, 10, 11, 14, 16, 19, 27, 28, 29, 32, 74, 93, 104, 152], "500": [17, 19, 28, 133, 153], "5000": 30, "500hz": 77, "501": [19, 23, 152], "5020": 9, "503": 153, "5030": 5, "5033": 22, "504": 153, "50407195": 22, "5041": 22, "505": 153, "5083": [8, 28], "50m": [16, 27], "51": [11, 16, 18], "512": [5, 11], "5120": 5, "513": 153, "514": 153, "515": [11, 152, 153], "5164": 5, "5169721": 22, "517": 153, "5170": 22, "5172": 22, "5181": 30, "5196": 9, "51m": 16, "52": [11, 16, 26, 27], "520": [11, 153], "5201": 22, "5210943": 22, "5211": [5, 22], "5215": 5, "521k": 16, "522": 11, "523": 153, "5234": 5, "52350": 16, "5235000": 16, "524": 153, "5241": 2, "5245": 5, "5263": 30, "5269": 9, "5272": 5, "5275": 30, "528": 153, "5285": 30, "529": 153, "5294": 9, "52m": 16, "53": [2, 6, 16, 22, 27, 152], "5301": 30, "5304": 30, "5307": 5, "5329": 31, "5333": 5, "535": 153, "536": 11, "5378": 2, "538": 153, "539": 153, "5391": [5, 27, 28, 29, 30, 31], "53910": 16, "5391000": 16, "5395": 22, "53it": 32, "53m": 16, "54": [16, 18, 23, 152], "5400": 5, "541": 153, "542": 23, "5420": [27, 28, 29, 30, 31], "5430": 11, "546": 153, "5472": 5, "5499": 5, "54it": 32, "54m": 16, "55": [5, 11, 16, 27, 28, 29, 30], "5500": 5, "5500m": 119, "5503989": 22, "5504": 22, "551": 153, "5510": 22, "5528": 30, "553": 153, "5546": 30, "5547": 30, "5550": 30, "5553": 30, "5555": 30, "556": 153, "5570": 8, "5572": 30, "557k": 16, "55m": [16, 27], "56": [9, 11, 16, 18], "5608": 5, "561": 153, "5612": 5, "5619": 22, "562": 5, "5638": 2, "5641": 5, "565": 11, "5658": 30, "5670986": 22, "5671": [9, 22], "5676": 5, "56835277": 22, "5686": 22, "5686462": 22, "569": 153, "56m": 16, "57": [5, 14, 16, 18, 26], "570": 153, "5709": 30, "5712": 5, "572": 153, "5724": 30, "573": 153, "5730": 5, "5735": 2, "5745": 30, "5746": 5, "5751": 29, "5755": 9, "5761": 30, "5765": 5, "5766": 30, "5768": 9, "5772": 5, "578": 153, "5786": 9, "5787": 5, "579": 153, "5790": 5, "5797": 5, "5798": 30, "57m": 16, "57mb": [18, 27], "58": [5, 11, 16, 27], "5805": 30, "5807": 11, "581": 153, "5813": 30, "5818": 30, "582": 153, "5829": 30, "5831": 30, "5835": 30, "5858": 30, "5862": 30, "5866": 11, "5876": 9, "5886": 30, "59": 16, "590": 153, "590727": 32, "591": 153, "592": 153, "5920": 5, "5927": 9, "593": 153, "5936": 5, "5938": 5, "594": 153, "5950": 5, "5953": 22, "5961": 3, "597": 153, "599": 153, "5990": 5, "59it": 32, "59m": 16, "5e": 5, "5k": 16, "5m": [16, 18, 27, 91], "5mb": [18, 27], "6": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 48, 67, 74, 77, 95, 119], "60": [5, 10, 12, 16, 19, 32], "600": 153, "6001": [28, 29], "600kb": 27, "6011": 5, "6026": 11, "602779": 32, "604": 11, "6052": 30, "606": 153, "606k": 16, "607": 153, "6073": 3, "608": 153, "608055": 32, "6089": 22, "6094": 5, "60_sleep": 80, "60it": 32, "60m": [16, 18], "61": [5, 9, 16, 26, 27], "610kb": 16, "611": 153, "6117": 5, "612": 153, "6120": 5, "6129": 11, "6138": 30, "6139": 8, "615": 153, "6155": 30, "6170": 5, "6172": 5, "6177": 5, "6179": 9, "6181": 2, "619": 153, "62": [5, 14, 16, 26, 27], "620": 11, "6213": 5, "62208": 74, "6227": 5, "6229": 22, "6235": 9, "6238": 5, "624": 153, "6240": [5, 30], "6246": 22, "625": 79, "6250": 5, "6251": 9, "6258": 28, "6259": 5, "6263": 5, "6267": [22, 28], "627": 153, "6272": 5, "6279": 22, "6281": 5, "6282": 22, "62it": 32, "62k": 16, "62m": [16, 18, 27], "63": [16, 18], "6309": 5, "631": 153, "6320": 5, "6322": 9, "6323": 5, "6328": 5, "6337": 9, "635": [11, 12, 13, 17, 19, 20, 21, 22, 23, 152], "6350": 3, "636": [9, 18, 23, 33, 152], "637": 31, "6372": 9, "6373": 30, "639k": 16, "63m": 16, "64": [2, 3, 4, 8, 10, 11, 14, 16, 17, 18, 19, 27, 28, 29, 32, 89, 92, 102, 104, 110], "6406": [5, 30], "640x480": [27, 28], "641": 11, "6422": 5, "642491": 32, "6440": 5, "645": 11, "6458": 3, "6460": 30, "6480": 5, "64m": 16, "65": [11, 16], "6509": 22, "6515615": 22, "6516": 22, "652kb": 18, "6533": 22, "653kb": 27, "654kb": 16, "6562": 5, "65902848": 22, "65it": 32, "65m": [16, 27], "66": [5, 16], "660": 11, "662kb": 18, "663kb": 16, "6641": 5, "6652": 22, "66521484": 22, "6671": 22, "6676": 9, "6680": 5, "6685": 22, "669kb": 16, "67": [16, 115], "6709": 30, "670kb": 16, "6719": 5, "672": [16, 23, 152], "6723": 28, "673kb": 16, "674": [26, 30, 33, 152], "6751": 5, "6760": 5, "676kb": 16, "6787": 2, "6790": 9, "67m": [16, 18], "68": [5, 16], "6800": 5, "68056549": 22, "680kb": 16, "682kb": 16, "683e00": 29, "683kb": 16, "6840": 5, "685": [10, 13, 152], "685kb": 16, "6860": 9, "686kb": 16, "6875": 5, "6877": 9, "6880": 5, "688k": 16, "6890": 22, "689kb": 16, "68it": 32, "68m": 16, "69": [2, 3, 4, 5, 8, 9, 10, 12, 16, 27, 28, 29, 30, 32], "690kb": 16, "691kb": 16, "6920": 5, "6926": 30, "692kb": 16, "693kb": 16, "694": 6, "695kb": 16, "6960": 5, "6966": 30, "696kb": 16, "6978": 22, "697kb": 16, "698": 11, "6980": 31, "698kb": 16, "699kb": 16, "6f": 32, "6m": [16, 18, 27], "6mb": [18, 27], "7": [2, 3, 4, 5, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 35, 77, 89, 99, 100, 109, 119, 122], "70": [5, 16, 18, 27, 104], "70052629": 22, "700kb": 16, "7013": 5, "701kb": 16, "7020": 30, "702kb": 16, "7031": 5, "70380673": 22, "703kb": 16, "7040": 5, "7045": 30, "704kb": 16, "705kb": 16, "706kb": 16, "7075": 22, "7076": 9, "707kb": 16, "7080": 5, "708kb": 16, "709kb": 16, "70m": [16, 27], "71": [5, 16, 18], "710": 95, "7109": 5, "710kb": 16, "711kb": 16, "7120": 5, "712kb": 16, "7131": 30, "713672": 32, "713kb": 16, "7149": 5, "714kb": 16, "7154": 9, "715kb": 16, "716": [21, 23, 152], "7160": 5, "716kb": 16, "717662": 32, "717kb": 16, "718kb": 16, "719": 95, "719kb": 16, "71m": 27, "72": [11, 16, 115, 132], "7200": [5, 10], "720kb": 16, "7216": 22, "721k": 16, "721kb": 16, "722kb": 16, "723kb": 16, "724kb": 16, "725kb": 16, "726": 11, "726kb": 16, "727": 11, "7276": 22, "727kb": 16, "7280": 5, "728kb": 16, "729kb": 16, "72m": 16, "73": 16, "730kb": 16, "731kb": 16, "7324": 2, "732kb": 16, "7337": 8, "733kb": 16, "734kb": 16, "735kb": 16, "7360": 5, "736kb": 16, "737kb": 16, "738kb": 16, "739kb": 16, "73it": 32, "73m": 16, "74": [5, 16], "7400": 5, "7402": 2, "7404": 22, "740kb": 16, "741kb": 16, "7422": 5, "7429778": 22, "742kb": 16, "7430": 22, "743kb": 16, "7443": 22, "7443461": 22, "7449": 9, "744kb": 16, "745kb": 16, "746kb": 16, "747kb": 16, "748kb": 16, "749kb": 16, "74it": 32, "74m": 18, "75": [3, 4, 5, 9, 14, 16, 26, 27, 28, 29, 32, 90, 95, 108, 113], "750": 11, "750kb": 16, "751kb": 16, "752kb": 16, "7539": 2, "753kb": 16, "754kb": 16, "755817": 79, "755kb": 16, "756kb": 16, "7578": 5, "757kb": 16, "758": [5, 9, 10, 110], "758kb": 16, "759kb": 16, "75it": 32, "75m": 16, "76": [16, 18], "7606": 3, "760kb": 16, "761kb": 16, "762kb": 16, "7638324": 22, "763kb": 16, "764kb": 16, "7656": 5, "7658": 30, "765kb": 16, "7664": 22, "7666": 22, "766kb": 16, "7673": 22, "7676": 30, "767kb": 16, "768kb": 16, "769": [5, 9, 10, 110], "769kb": 16, "76m": 18, "77": [5, 11, 16], "770kb": 16, "771kb": 16, "772kb": 16, "773": [16, 18], "7734": 5, "773kb": 16, "774kb": 16, "7754": 22, "775kb": 16, "7768": 2, "776kb": 16, "777kb": 16, "778kb": 16, "7799": 2, "779kb": 16, "77m": [16, 18], "78": [16, 18, 80], "780kb": 16, "781kb": 16, "782kb": 16, "783": [11, 13, 152], "783kb": 16, "784": [16, 18], "784kb": 16, "785kb": 16, "786": 11, "786k": 16, "786kb": 16, "787kb": 16, "788kb": 16, "7899": 3, "789kb": 16, "78m": 16, "79": [5, 16, 18, 27], "790kb": 16, "791kb": 16, "7925": 30, "792kb": 16, "793kb": 16, "794kb": 16, "795": [2, 6, 152], "795kb": 16, "796kb": 16, "7970": 2, "797kb": 16, "7986": 8, "798kb": 16, "799kb": 16, "79m": 16, "7kb": [18, 27], "7m": [16, 18, 27], "7mb": [16, 27], "8": [2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33, 89, 90, 91, 95, 97, 98, 101, 102, 104, 106, 110, 129, 149, 152], "80": [3, 4, 5, 10, 11, 16, 18, 19, 26, 27, 28, 29, 32, 77, 104, 111], "800": [12, 18, 29, 33, 152], "8000": 22, "800kb": 16, "8011": 30, "801kb": 16, "8024": 22, "802kb": 16, "8036": 22, "803k": 16, "803kb": 16, "804": 27, "804kb": 16, "805kb": 16, "8060": 11, "806kb": 16, "807998": 32, "807kb": 16, "808": [16, 23, 152], "808kb": 16, "809": [10, 111], "8095": 5, "8097": 22, "809kb": 16, "80m": [16, 18, 27], "81": [5, 16, 19, 27], "8104": 30, "8106": 5, "8108": 5, "810kb": 16, "811": [8, 13, 152], "811kb": 16, "812099": 32, "812333": 32, "812kb": 16, "8132": 5, "8138": 5, "813kb": 16, "8148": 9, "814kb": 16, "815kb": 16, "816": 9, "816kb": 16, "8174": 22, "817kb": 16, "818": [6, 10, 111, 152], "818kb": 16, "819": 4, "8193": 5, "819678": 32, "819kb": 16, "81it": 32, "81m": 16, "82": [16, 27, 29, 44, 63], "8201": 5, "8206": 22, "8209": 5, "820kb": 16, "8218": 22, "821kb": 16, "8224": 5, "8226": 5, "8228": 2, "822kb": 16, "8234": 5, "8235": 11, "8237": 5, "8239": 5, "823kb": 16, "824kb": 16, "8254": 5, "8255": 5, "825kb": 16, "826kb": 16, "8270": 5, "827kb": 16, "8285": 5, "828kb": 16, "8291": 30, "8294": 5, "829kb": 16, "83": [11, 16, 18, 22, 32], "8300": 5, "8308": 5, "830kb": 16, "8312": 5, "831kb": 16, "832kb": 16, "834kb": 16, "835": [6, 152], "8358": 5, "836": 5, "836kb": 16, "8380": 5, "838kb": 16, "83m": 16, "84": [11, 16], "840": 26, "8419": 22, "841k": 27, "841kb": 16, "842kb": 16, "844": 26, "844kb": 16, "8454": 5, "8458": 29, "847": [20, 23, 152], "848kb": 16, "849kb": 16, "84m": 16, "85": [16, 18, 27, 28], "8516": 22, "853": [5, 6, 152], "8537": 29, "853kb": 16, "8585": 22, "8595": 30, "85m": 16, "86": [5, 11, 16, 27], "86039335": 22, "8604": 22, "862kb": 16, "863": 11, "8635": [5, 29], "8651": 29, "868k": 16, "86m": 16, "87": [2, 5, 16, 31], "8701": 29, "871": [48, 67], "8710": 29, "8733": 30, "875": 46, "8750": 29, "876": 11, "8775": 29, "87it": 32, "87m": 16, "88": [5, 16, 18, 27], "880": 77, "8813": 29, "8815": 10, "882": 26, "885k": 16, "886": 46, "8870": 29, "8873": 29, "889k": [18, 27], "88m": 16, "89": [10, 16], "890": [48, 67], "8904": 9, "8924": 5, "8943": 22, "8949": 30, "898": 11, "8k": [18, 27], "8kb": 27, "8m": [16, 18, 27], "9": [2, 3, 4, 5, 6, 8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 32, 74, 77, 79, 90, 91, 92, 97, 99, 104, 106, 107, 115, 123, 152], "90": [5, 16, 18, 29, 30, 146], "9037": 2, "9042": 30, "9059": 29, "9077": 30, "90k": 16, "90m": 16, "91": [11, 16], "9100": 30, "912": 11, "9132": 22, "9157": 26, "9196": 27, "91m": 16, "92": [16, 18, 27], "9203": 2, "924": 26, "9266": 22, "9292": 22, "92922518": 22, "9292252": 22, "92m": 16, "93": [11, 16, 44, 63], "9353": 22, "935963004": 106, "9371": 31, "939559": 22, "9396": 22, "93m": 16, "94": [11, 16], "9406": 22, "9420": 29, "944": [10, 13, 152], "9481": 22, "948479": 32, "9486": 29, "95": [12, 16, 27, 72, 131], "950k": 16, "9596": 2, "95m": 16, "96": [16, 18, 27], "960": 11, "9601": 31, "963": 77, "96330007": 22, "9650": 29, "9662": 9, "967k": 16, "9685": 31, "96m": 16, "97": 16, "9711": 22, "976": [26, 27], "978": 31, "9781": 10, "98": 16, "9810": 28, "9825": 22, "9833": 29, "9844": 29, "9883": 22, "98m": 16, "99": [16, 18], "990": [27, 31, 33, 152], "9938": 30, "994": [17, 19], "9942": 22, "9948": 28, "996": [26, 28, 33, 152], "9991178": 95, "9k": 16, "9m": [16, 27], "9mb": [18, 27], "A": [2, 3, 4, 5, 8, 9, 10, 16, 27, 28, 29, 30, 31, 34, 36, 38, 39, 42, 46, 56, 58, 60, 62, 72, 73, 75, 78, 79, 81, 82, 90, 94, 97, 98, 99, 101, 102, 104, 109, 110, 113, 119, 123, 124, 125, 130, 131, 134, 142, 146, 153], "AND": 97, "And": [26, 27], "As": [5, 16, 26, 27, 29, 72, 131], "At": [27, 74], "BE": 97, "But": [29, 32], "By": [29, 30, 31, 47, 72, 131], "For": [2, 4, 5, 8, 14, 26, 27, 28, 29, 32, 72, 115, 119, 123, 131, 133, 139, 141, 144, 148, 149, 150, 151], "IN": 97, "If": [2, 8, 14, 18, 19, 22, 26, 29, 30, 32, 35, 37, 47, 48, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 120, 121, 122, 123, 124, 125, 129, 130, 131, 132, 134, 135, 139, 140, 141, 142, 147, 151], "In": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 20, 21, 26, 27, 28, 29, 30, 32, 37, 44, 47, 49, 50, 51, 52, 54, 57, 63, 66, 68, 70, 72, 74, 91, 119, 120, 123, 131, 144], "It": [2, 3, 4, 5, 8, 9, 10, 11, 18, 27, 28, 29, 30, 32, 42, 48, 62, 72, 75, 83, 86, 91, 111, 125, 131, 148], "NO": 5, "No": [11, 19, 26, 29, 32, 74], "Not": [19, 26], "OF": 97, "On": [4, 27, 30, 31, 76, 83], "One": [29, 30, 74, 97, 98], "THE": 97, "The": [2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 18, 20, 21, 26, 27, 29, 30, 31, 32, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 61, 72, 74, 76, 77, 79, 83, 89, 90, 91, 92, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 111, 115, 117, 118, 119, 120, 122, 123, 129, 131, 141, 142, 146, 149, 151], "Then": 128, "There": [4, 24, 26, 93, 108, 149, 151], "These": [2, 5, 8, 26, 27, 28, 30, 122], "To": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 106, 119, 150, 151], "WILL": 97, "Will": 54, "With": [10, 111], "_": [3, 5, 14, 16, 17, 26, 27, 28, 31, 32, 48, 153], "__doc__": 26, "__getitem__": [5, 72, 131], "__init__": [5, 32], "__len__": [72, 131], "__name__": 12, "__str__": 26, "__version__": [147, 151], "_causalconv1d": 10, "_check_optimize_result": 5, "_classif": 10, "_criteria": [72, 131], "_data": 31, "_decoderblock": 11, "_encoderblock": 11, "_encoderlay": 10, "_frequency_shift": 153, "_lazydatafram": 124, "_logist": 5, "_modul": [72, 131], "_mrcnn": 10, "_multiheadedattent": 10, "_nestedsequ": [84, 124, 125], "_optim": [72, 131], "_path": 73, "_positionwisefeedforward": 10, "_return_pair": 5, "_scalartype_co": [84, 127, 128], "_sebasicblock": 10, "_selay": 10, "_sublayeroutput": 10, "_supportsarrai": [84, 124, 125], "_t": [127, 128], "_tce": 10, "_tuhmock": [12, 22], "_warn_prf": 10, "a1": 12, "a2": 12, "a_max": 12, "a_min": 12, "aasm": [5, 9, 10, 11], "ab": [4, 5, 47, 66, 104, 141], "abb7a7": 113, "abbassalami": 96, "abbrevi": [3, 4, 18, 20, 21, 29, 30], "abl": [2, 3, 4, 5, 8, 9, 10, 11, 12, 27, 28, 30, 72, 131, 147], "ablat": 104, "abnorm": [14, 79, 82, 91], "about": [8, 9, 10, 12, 26, 30, 76, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 144, 147], "abov": [3, 14, 16, 22, 27, 29, 147, 149], "absolut": [43, 106], "acc": [5, 29, 32], "acceler": [72, 131], "accept": [72, 86, 114, 125, 131], "accepted_bads_ratio": [86, 125], "access": [5, 9, 10, 11, 12, 14, 26, 90, 91, 92, 96, 106, 107, 124, 133, 149], "accident": 153, "accommod": 14, "accord": [40, 59, 123], "accordingli": [9, 26, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 112, 113, 115, 117], "account": [5, 75, 124, 130], "accumul": 32, "accur": 99, "accuraci": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 32, 139, 153], "accuracyof": 4, "achiev": [5, 9, 10, 11, 104], "acoust": 74, "acquir": 77, "acquisit": 119, "across": [113, 123, 132, 136], "act": [16, 123], "action": 153, "activ": [4, 19, 26, 48, 67, 72, 77, 89, 91, 93, 97, 98, 99, 104], "actual": [3, 5, 12, 14, 22], "ad": [18, 19, 27, 75, 79, 81, 82, 90, 91, 92, 95, 104, 106, 107, 113, 115, 117, 118, 119, 120, 122, 123, 130, 153], "adam": [5, 9, 10, 11, 14, 31], "adamw": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "adapt": [9, 11, 16, 96, 97, 98, 106, 111, 112, 113], "adaptiveavgpool1d": [10, 113], "add": [3, 4, 5, 11, 26, 27, 28, 29, 32, 43, 44, 61, 63, 72, 75, 76, 83, 106, 119, 131, 139, 153], "add_log_softmax": [2, 8, 26, 31, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "add_physician_report": [12, 22, 81, 82], "add_safe_glob": 5, "addit": [2, 8, 12, 17, 20, 21, 26, 28, 29, 30, 32, 44, 63, 72, 74, 75, 76, 83, 86, 125, 131, 146], "addition": [12, 18, 26, 35, 72, 131, 142], "address": [42, 62], "adjust": [4, 26, 29, 32, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 112, 113, 115], "adjustmenty": 32, "admiss": 37, "advanc": [18, 27, 149], "advanced_train": [6, 152], "advantag": [16, 29, 97, 98], "advis": [3, 18, 27, 30, 42, 62, 131], "aertsen": [27, 28, 29, 30], "affect": [14, 27, 139], "affin": 10, "afr": [10, 111], "after": [5, 12, 16, 21, 26, 28, 29, 32, 74, 80, 93, 108, 109, 110, 122, 136, 139, 153], "after_reduced_cnn_s": 111, "afterward": [27, 29, 89, 90, 95, 99, 123], "ag": [5, 12, 18, 22, 74, 77, 79, 81, 82], "again": [18, 22, 29], "agcl": 74, "aggreg": [4, 95], "aggregate_predict": [2, 72, 131], "aggregate_proba": 153, "ah": [9, 10, 11], "ai": [92, 144], "aim": [21, 22, 104], "ain": 79, "al": [9, 10, 11, 26, 46, 77, 91, 93, 94, 96, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 115, 139], "alamgir": 79, "alex": 153, "alexandr": [28, 29, 30, 35], "algorithm": [14, 26, 28, 29, 30, 32], "alia": [26, 89, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 108, 109, 110, 111, 112, 113, 115], "all": [2, 3, 4, 8, 12, 14, 16, 24, 26, 27, 28, 29, 30, 32, 43, 44, 46, 54, 61, 63, 65, 70, 72, 73, 74, 77, 78, 80, 89, 90, 95, 97, 98, 99, 100, 106, 117, 119, 120, 122, 123, 124, 125, 131, 139, 152, 153], "all_dataset": 29, "all_n_job": 16, "all_n_rec": 16, "all_result": 14, "allow": [3, 5, 14, 26, 29, 30, 32, 41, 72, 78, 86, 97, 98, 104, 106, 125, 131, 153], "allowlist": 5, "almost": 79, "along": [26, 76, 83, 122, 150, 153], "alpha": [5, 9, 10, 11, 12, 47, 89, 97, 98], "alreadi": [2, 3, 5, 8, 9, 10, 11, 14, 19, 27, 28, 29, 75, 76, 83, 130, 131, 147, 149], "also": [3, 4, 5, 9, 10, 11, 12, 14, 18, 21, 26, 28, 35, 72, 83, 95, 97, 98, 111, 119, 120, 122, 131, 142, 147, 150, 151], "alsulaiman": 89, "altaheri": 89, "altern": [5, 26, 32, 72, 131], "although": [3, 72, 89, 90, 95, 99, 131], "alwai": [5, 29, 32, 35, 56, 72, 131], "amar": [5, 9, 10, 11], "among": 111, "amount": [9, 10, 11, 16, 122], "amper": [72, 131], "amplifi": 74, "amplitud": [43, 61, 124, 125, 153], "amplitur": 106, "an": [2, 5, 8, 9, 10, 12, 14, 16, 18, 19, 20, 21, 22, 26, 27, 29, 30, 32, 41, 49, 50, 51, 52, 56, 72, 74, 76, 77, 79, 83, 86, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 118, 119, 121, 122, 123, 125, 131, 133, 139, 147, 148, 153], "analaysi": [7, 24], "analog": [29, 139], "analys": [2, 8, 29, 30, 73], "analysi": [4, 5, 9, 10, 11, 26, 35, 90, 148], "analyz": 30, "andreu": 96, "angl": [49, 50, 51, 52, 68, 146], "ani": [5, 17, 18, 26, 27, 29, 32, 72, 78, 84, 92, 107, 111, 119, 123, 124, 125, 127, 128, 131, 151], "ann": 153, "annot": [9, 10, 11, 18, 19, 21, 27, 28, 29, 30, 32, 79, 119, 153], "annual": [49, 50, 51, 52, 68], "anonym": 147, "anoth": [5, 21, 29, 32, 134], "answer": [29, 32], "anyth": [27, 72], "anywher": [72, 131], "apart": 5, "api": [26, 151], "appear": [9, 10, 11, 74], "append": [2, 8, 12, 14, 16, 27, 28, 31, 72, 119, 131], "appli": [2, 3, 4, 5, 8, 9, 10, 12, 16, 18, 19, 20, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 72, 76, 83, 106, 109, 110, 114, 119, 121, 123, 129, 130, 131, 141, 153], "applic": [83, 119], "applied_exampl": [13, 152], "apply_batch_norm": [5, 109, 110], "apply_funct": 121, "apply_on_arrai": [9, 10, 12, 121], "apply_proj": 123, "approach": [4, 5, 9, 10, 11, 16, 24, 30, 46, 48, 67, 111, 132], "appropri": [35, 150], "approv": 77, "approx": 77, "approxim": [10, 50, 51, 52], "ar": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 35, 37, 47, 66, 72, 75, 83, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 123, 124, 125, 129, 131, 134, 136, 140, 147, 149, 150, 151, 153], "arang": [2, 8], "arbitrari": 5, "architectur": [2, 5, 8, 9, 10, 11, 26, 27, 28, 30, 72, 90, 91, 94, 95, 104, 106, 107, 109, 110, 111, 115, 131, 148], "arg": [72, 100, 131, 153], "argmax": 32, "argument": [3, 4, 16, 19, 26, 29, 32, 36, 38, 39, 40, 42, 48, 53, 55, 56, 72, 78, 117, 119, 120, 121, 122, 123, 129, 131, 139, 153], "aris": 16, "aristimunha": [4, 153], "armchair": 74, "arnal": [5, 9, 10, 110], "around": [4, 10, 32, 49, 50, 51, 52, 68, 91, 125, 132], "arrai": [2, 4, 8, 11, 17, 22, 26, 28, 29, 30, 37, 48, 49, 56, 57, 67, 68, 72, 84, 85, 86, 119, 120, 121, 122, 131, 135, 142, 146], "arrow": [74, 77], "articl": [26, 35], "artifici": 4, "arxiv": [4, 5, 31, 37, 38, 39, 40, 42, 44, 47, 54, 57, 58, 59, 60, 62, 63, 66, 70, 90, 101, 102, 104, 106, 112, 134, 141], "as_tensor": 3, "ascend": [79, 81, 82], "ask": [35, 74], "assert": [2, 3, 4, 8, 14, 27, 28, 29, 30, 32], "assign": [27, 28, 143], "assist": [97, 98], "associ": [97, 98], "assum": [14, 26, 72, 117, 131, 136, 140, 153], "astyp": [9, 10], "asynchron": 46, "atcnet": [26, 153], "aten": 11, "att_depth": 95, "att_drop_prob": 95, "att_dropout": 89, "att_head": 95, "att_head_dim": 89, "att_num_head": [89, 91, 106], "attempt": [26, 89, 90, 91, 93, 94, 100, 103, 105, 106, 108, 109, 110, 111, 112, 115, 123], "attent": [10, 89, 90, 91, 95, 106, 111], "attention_mod": 90, "attentionbasenet": [26, 153], "attenu": [16, 119], "attn_drop_r": 106, "attn_head_dim": 106, "attnsleep": 111, "attribut": [2, 8, 26, 28, 29, 30, 32, 72, 76, 83, 121, 131, 153], "attributeerror": 72, "aug": [26, 35, 93, 103, 105, 108, 146], "augment": [1, 6, 24, 75, 78, 95, 100, 108, 121, 125, 128, 130, 144, 148, 152, 153], "augmenteddataload": [3, 4, 153], "author": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31, 35, 92, 95, 96, 97, 98, 99, 101, 102, 104, 107], "auto": [3, 4, 8, 14, 17, 19, 26, 28, 29, 30, 32, 72, 93, 95, 101, 102, 103, 108, 119, 122, 123, 131, 153], "auto_exampl": [6, 13, 23, 33, 34], "auto_examples_jupyt": 24, "auto_examples_python": 24, "auto_tutori": 80, "autocorrel": 5, "autoencod": 115, "autom": [14, 29], "automat": [12, 14, 26, 48, 73, 92, 94, 113, 123, 153], "avail": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 19, 22, 26, 27, 28, 29, 30, 32, 73, 80, 90, 91, 95, 97, 98, 104, 111, 124, 125, 132, 133], "avenu": 5, "averag": [10, 12, 27, 29, 31, 32, 72, 89, 100, 104, 123, 131, 136], "avg": [5, 9, 10, 11], "avg_pool": 10, "avgpool1d": 11, "avgpool2d": [3, 4, 26, 27, 28, 29, 32], "avoid": [5, 9, 10, 11, 12, 14, 16, 22, 27, 29, 80, 153], "awar": [37, 44, 54, 57, 63, 70], "ax": [2, 3, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 30, 31, 100], "ax1": [2, 5, 8, 9, 10, 11, 27, 28], "ax2": [2, 5, 8, 9, 10, 11, 27, 28], "axhlin": 12, "axi": [2, 3, 5, 8, 27, 28, 31, 49, 50, 51, 52, 53, 55, 68, 69, 71, 100, 122, 143], "azemi": [37, 44, 54, 57, 63, 70], "b": [5, 9, 10, 11, 16, 18, 27, 40, 59, 90, 91, 92, 95, 101, 102, 104, 107, 115], "ba": 31, "back": 77, "backend": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 144, 153], "backtick": 147, "backward": [3, 4, 11, 14, 26, 27, 28, 29, 32, 100, 119, 153], "bad": [10, 14, 19, 119, 120, 123, 147], "bad_acq_skip": 119, "bai": 112, "bai2018": 112, "bal": 5, "balanc": [5, 9, 10, 11, 132, 153], "balanced_accuraci": [9, 10], "balanced_accuracy_multi": 11, "balanced_accuracy_scor": [5, 11], "balancedsequencesampl": 153, "ball": [26, 27, 28, 29, 30, 31, 35, 77, 93, 103, 105, 108, 146], "band": [37, 57, 119, 129, 153], "bandpass": [2, 3, 4, 8, 20, 27, 28, 29, 30, 32, 74, 119, 129], "bandwidth": [16, 37, 57], "bang": 106, "banvil": [4, 5, 9, 14, 16, 20, 134, 153], "banville2020": 134, "bao": 106, "bar": 4, "barach": [28, 29, 30], "barh": [12, 29], "base": [0, 2, 3, 4, 5, 8, 9, 10, 12, 16, 18, 20, 21, 27, 28, 29, 30, 31, 32, 36, 44, 46, 47, 48, 63, 65, 66, 67, 72, 74, 75, 89, 91, 94, 95, 96, 97, 98, 99, 101, 102, 107, 111, 117, 119, 120, 122, 124, 125, 131, 133, 141, 153], "baseconcatdataset": [2, 5, 9, 10, 12, 14, 16, 21, 31, 72, 84, 85, 86, 87, 124, 125, 130, 131, 133, 142, 153], "basedataset": [31, 36, 75, 83, 87, 130, 153], "baseepoch": [83, 85, 121], "baselin": [19, 26, 104], "baseraw": [76, 86, 121, 129], "basic": [15, 27, 29, 32, 33, 56, 75, 78, 99, 100, 108, 121, 125, 128, 130, 144, 146, 152, 153], "batch": [3, 4, 5, 26, 30, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 93, 94, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 131, 138, 142, 153], "batch_i": 22, "batch_idx": 32, "batch_ind": 22, "batch_loss": 32, "batch_norm": [14, 26, 93, 107, 108], "batch_norm_alpha": [14, 26, 93, 97, 98, 103, 108], "batch_norm_epsilon": 103, "batch_siz": [2, 3, 4, 5, 8, 9, 10, 11, 14, 22, 27, 28, 29, 30, 31, 32, 37, 47, 49, 57, 66, 68, 72, 91, 92, 94, 95, 100, 104, 105, 107, 109, 110, 111, 112, 113, 114, 116, 131, 136, 140, 142, 145], "batch_x": [5, 22], "batchnorm1d": [10, 11], "batchnorm2d": [3, 4, 26, 27, 28, 29, 32, 93, 97, 98, 108], "batchscor": [72, 131], "bbci": 73, "bbox_to_anchor": 29, "bcewithlogitsloss": [5, 72, 131], "bci": [2, 4, 8, 21, 26, 27, 28, 29, 30, 42, 46, 62, 73, 74, 89, 99, 104, 106, 113], "bci2000": 77, "bcic": [1, 6, 7, 13, 20, 24, 25, 29, 32, 33, 36, 38, 41, 42, 43, 53, 54, 56, 73, 75, 78, 100, 108, 116, 121, 124, 125, 126, 128, 130, 136, 137, 138, 140, 144, 146, 152, 153], "bcicomp": 8, "bcicompetitionivdataset4": [2, 8, 153], "bd_cmap": 29, "bear": 147, "becaus": [2, 16, 26, 27, 29, 30, 147, 153], "becom": [14, 16, 29], "been": [2, 3, 4, 8, 10, 14, 16, 18, 20, 21, 27, 28, 29, 30, 32, 92, 96, 97, 98, 99, 100, 101, 102, 107, 141, 147, 151, 153], "beetl": [97, 98], "befor": [2, 11, 16, 27, 28, 29, 30, 32, 72, 75, 76, 80, 83, 89, 93, 94, 95, 109, 110, 111, 127, 128, 131, 139, 144, 150, 153], "beforehand": 19, "begin": [2, 27, 29, 30, 74, 109, 119, 124], "beginn": 149, "behavior": [10, 32, 72, 119, 131, 153], "behaviour": [2, 8, 73], "behind": [29, 32], "being": [4, 10, 14, 18, 27, 72, 77, 131], "beit": 106, "beitv2": 106, "below": [3, 5, 35, 37, 147, 150, 153], "benchmark": [2, 3, 4, 5, 8, 9, 10, 11, 15, 23, 24, 27, 28, 29, 30, 31, 32, 75, 80, 82, 93, 108, 121, 124, 130, 144, 152, 153], "benchmark_lazy_eager_load": [14, 23, 152], "benefici": 28, "best": [1, 6, 24, 32, 36, 38, 42, 54, 56, 75, 78, 100, 108, 121, 125, 128, 130, 144, 152], "best_aug": 4, "best_estimator_": 4, "best_paramet": 29, "best_run": [4, 29, 30], "beta": 47, "beta_per_sampl": 47, "better": [2, 5, 8, 10, 14, 16, 27, 28, 29, 32, 95, 139, 153], "between": [2, 3, 4, 5, 8, 9, 11, 26, 27, 28, 29, 37, 38, 39, 42, 43, 47, 49, 50, 51, 52, 56, 57, 58, 60, 62, 66, 74, 84, 85, 86, 93, 95, 104, 108, 109, 117, 124, 125, 135, 140], "beyond": [31, 47, 66, 141], "bia": [9, 10, 11, 106, 107], "bias": 29, "bidirect": 94, "big": [7, 13, 24, 75, 81, 121, 124, 130, 152, 153], "bigger": 12, "bin": 12, "biologi": [49, 50, 51, 52, 68], "biomed": 5, "biosign": [37, 44, 54, 57, 63, 70, 91, 92, 107], "biot": [26, 92, 107, 153], "biotencod": 91, "bipolar": 123, "birbaum": [27, 28, 29, 30], "biswal": [40, 59], "black": [2, 8, 12, 27, 28, 74, 77, 146, 153], "blackman": 119, "blanco": 109, "blanco2020": 109, "blob": 5, "block": [89, 90, 92, 97, 98, 99, 104, 106, 107, 112, 115], "block_lay": 107, "block_postskip": 11, "block_prepool": 11, "block_preskip": 11, "blue": [2, 5, 8, 16, 27, 28], "bme": [9, 10, 11], "bn1": 10, "bn2": 10, "bnci": [4, 74], "bnci2014": [3, 4, 18, 20, 21, 29, 30, 74], "bnci2014001": [3, 4, 18, 20, 21, 29, 30], "bnci2014_001": [3, 4, 18, 20, 21, 27, 28, 29, 30, 32], "bnorm": [3, 4, 26, 27, 28, 29, 32], "bold": 146, "bonsmann": 153, "bool": [14, 26, 42, 47, 49, 50, 51, 52, 62, 68, 72, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 120, 121, 122, 123, 124, 125, 129, 130, 131, 134, 135, 139, 142, 144, 146], "boost": 5, "bose": 99, "both": [4, 5, 16, 22, 30, 74, 77, 109, 110, 115], "bottleneck": [16, 32, 97, 98, 113], "bottleneck_s": 107, "bottom": 11, "bouallegu": [104, 153], "box": [72, 131], "boxcar": 122, "br": 4, "brain": [4, 24, 25, 26, 27, 29, 30, 31, 33, 35, 48, 67, 75, 78, 79, 93, 97, 98, 100, 101, 102, 103, 105, 106, 108, 121, 125, 128, 130, 144, 146, 148, 152], "braincod": 150, "braindecod": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 33, 149, 150, 152, 153], "branch": 99, "brandt": [3, 20, 153], "braun": [27, 28, 29, 30], "break": [20, 74], "brodbeck": 35, "brook": 35, "bruna": 153, "brunner": [27, 28, 29, 30], "bruno": [4, 153], "bsd": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31], "bug": 100, "build": [12, 27, 32, 149, 151], "built": [35, 147], "bundl": 14, "burgard": [27, 28, 29, 30, 35], "butt": 79, "butterworth": 119, "byte": [84, 124, 125], "c": [4, 5, 9, 10, 11, 20, 27, 28, 29, 30, 42, 62, 91, 92, 94, 99, 101, 102, 106, 107, 115, 132, 147], "c0": 4, "c1": 4, "c2": 4, "c3": [12, 26], "c4": [12, 26], "c_tuab": 82, "c_tueg": [12, 81], "ca": 113, "cach": [72, 131, 153], "cache_config": 78, "cagig": [97, 98], "cakmak": [42, 62], "cal": 26, "calcul": [2, 3, 4, 27, 28, 29, 30, 32, 72, 113, 131], "calibr": [48, 67], "call": [3, 16, 26, 27, 29, 32, 72, 75, 83, 86, 89, 90, 95, 99, 117, 121, 124, 125, 131, 137, 138, 139], "callabl": [3, 26, 41, 56, 72, 75, 76, 83, 93, 108, 121, 131, 139], "callback": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 72, 131, 139], "callbacks_": [72, 131], "callbacks__print_log__keys_ignor": [72, 131], "callbacks__valid_acc": 11, "camelcas": 0, "can": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 26, 27, 28, 29, 30, 32, 35, 43, 49, 68, 72, 75, 79, 80, 81, 82, 83, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 122, 123, 131, 142, 149, 150, 153], "candid": [4, 29, 30], "cannot": [2, 3, 4, 5, 8, 9, 10, 11, 12, 27, 28, 29, 30, 32, 72, 117, 131], "canon": 35, "capabl": [12, 16, 29, 32, 72, 131], "capac": [29, 30], "capit": 10, "captur": 111, "care": [89, 90, 95, 99], "carri": [39, 60, 74], "cartesian": [49, 68], "case": [2, 5, 8, 16, 21, 26, 27, 28, 29, 30, 32, 72, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 123, 131, 144, 150, 153], "cast": [4, 41], "categor": [4, 132], "categori": [2, 4, 31], "catplot": 14, "caus": [2, 8], "causal": [16, 119], "cbar": 30, "cd": 151, "cdot": [127, 128], "cedric": [3, 4, 153], "ceil": [9, 10, 113], "ceil_mod": [9, 10], "cell": 4, "center": [2, 8, 9, 10, 29, 37, 57], "certain": [72, 131], "certif": [18, 27], "ch": [26, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "ch_dim": 90, "ch_name": [12, 14, 17, 26, 84, 118, 129], "ch_po": [49, 68], "ch_type": [12, 26, 123], "chambon": [5, 9, 10, 110], "chambon2018": [7, 13, 24, 75, 80, 100, 110, 114, 121, 125, 130, 133, 135, 144, 146, 152], "chan": [2, 3, 4, 8, 27, 28, 29, 30, 32, 74, 77], "chanc": [5, 9, 10], "chang": [2, 5, 8, 14, 18, 31, 45, 72, 119, 123, 131, 139, 151], "channel": [2, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 38, 39, 40, 42, 43, 44, 46, 47, 49, 50, 51, 52, 54, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 123, 124, 125, 129, 153], "channel_indep": [42, 62], "channel_wis": [5, 9, 10, 11, 16], "channelsdropout": 4, "character": 16, "chat": 147, "check": [2, 3, 4, 8, 9, 10, 11, 26, 27, 28, 29, 30, 32, 35, 89, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 112, 113, 115, 147, 150, 153], "checker": 153, "checkpoint": [5, 32], "checkpoint_connector": 32, "chehab": [4, 5, 11, 134, 153], "cheng": [37, 44, 54, 57, 63, 70], "chevalli": 153, "choic": [2, 3, 4, 5, 8, 9, 10, 12, 27, 28, 29, 30, 32, 90, 95, 104, 153], "choos": [2, 3, 4, 8, 18, 27, 28, 29, 30, 32], "chose": 3, "chosen": [2, 16, 18, 27, 32, 46, 54, 72, 119, 131, 142], "christian": 35, "christoph": 30, "chronolog": [12, 79, 81, 82], "chs_info": [26, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 131], "ci": 153, "cifar10": [47, 66, 141], "circl": 16, "circul": [5, 9, 10, 11], "ciss": [47, 66, 141], "cite": [2, 8, 73], "ckpt": 32, "ckpt_path": 32, "cl": 106, "clariti": 153, "class": [0, 3, 4, 5, 9, 10, 11, 12, 14, 18, 20, 21, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 146, 153], "class_nam": [9, 10, 11, 27, 28, 146], "class_names_fonts": 146, "class_weight": [5, 9, 10, 11], "classes_": 72, "classic": 28, "classif": [5, 9, 10, 11, 26, 27, 30, 37, 42, 44, 54, 57, 62, 63, 70, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "classifi": [3, 4, 5, 9, 10, 11, 26, 29, 31, 106, 153], "classification_report": [5, 9, 10, 11], "classificationhead": [90, 91, 95], "claus": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26], "clear": 16, "clench": 77, "clf": [3, 4, 5, 9, 10, 11, 27, 28, 29, 30], "clf_pipe": 5, "clifford": [42, 62], "cliffordlab": [42, 62], "clinic": [4, 5, 7, 24, 80, 134], "clip": 12, "clone": [111, 153], "cloneabl": 153, "close": [5, 16, 18, 134, 147], "cm": [74, 146], "cmap": 30, "cmsaugment": [38, 39, 58, 60], "cnn": 107, "cnosid": 8, "co": [40, 59], "code": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 89, 90, 91, 95, 96, 97, 98, 104, 106, 111, 112, 113, 147, 149, 151, 153], "code2023": [91, 92, 107], "code2024": 106, "codebas": 153, "coeffici": [2, 8, 47, 66, 141], "cognit": [7, 24], "coil_typ": 26, "col": 14, "col_nam": 100, "cold": [72, 131], "collect": [26, 72, 77, 131], "color": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 146], "colormap": [5, 146, 153], "column": [2, 8, 19, 21, 22, 27, 28, 29, 30, 32, 75, 83, 87, 100, 132, 133, 146], "com": [2, 3, 5, 8, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31, 74, 77, 81, 82, 151], "combin": [14, 16, 75], "combinedconv": [3, 4, 26, 27, 28, 29, 32], "come": [2, 8, 14, 28, 30, 32, 135, 144], "comfort": 74, "command": [150, 151], "commit": 153, "committe": 77, "common": [12, 14, 123, 150, 153], "commonli": 3, "compact": [29, 101, 102], "compar": [5, 14, 16, 22, 27, 29, 32, 90], "comparison": [4, 14, 27, 28], "compat": [3, 14, 17, 19, 30, 72, 84, 85, 86, 119, 131, 153], "compens": [29, 119], "competit": [2, 4, 8, 11, 14, 21, 26, 27, 28, 29, 30, 73, 74, 97, 98, 104], "compil": [72, 131], "compile__dynam": [72, 131], "complet": [12, 14, 16, 17, 27, 72, 131], "complex": [5, 9, 10, 11, 29, 32, 77, 84, 109, 124, 125], "complexity_factor": 115, "complianc": 18, "compon": [5, 9, 10, 11, 77, 97, 98], "compos": [90, 95], "composed_transform": 3, "composit": [3, 41], "compris": 74, "comput": [3, 4, 5, 9, 10, 11, 18, 22, 35, 48, 50, 51, 52, 67, 72, 74, 86, 89, 90, 92, 95, 97, 98, 99, 101, 102, 109, 123, 124, 125, 127, 128, 131, 136, 137, 138, 140, 144, 147, 151, 153], "compute_amplitude_gradi": 153, "compute_class_weight": [9, 10, 11], "concat": [18, 75, 89, 124, 125, 130], "concat_d": [12, 16, 18, 124, 125, 126, 130], "concat_dataset": [87, 88], "concatdataset": 124, "concaten": [5, 9, 10, 75, 89, 114, 119, 124, 125], "concatenate_raw": 119, "conda": 153, "condit": 153, "conf": [27, 28], "confer": [44, 47, 49, 50, 51, 52, 63, 66, 68, 91, 106], "config": [27, 73], "configur": [12, 16, 27, 29, 32], "configure_optim": 32, "conflict": [32, 72, 131], "conform": 95, "conformercod": 95, "confus": [5, 9, 10, 11, 146, 153], "confusion_mat": [9, 10, 11, 27, 28, 146], "confusion_matrix": [5, 9, 10, 11, 27, 28, 146], "connect": [29, 30, 89, 95, 99, 109, 115], "connectionpool": [18, 27], "connector": 32, "consecut": [9, 10, 11, 54, 70, 114, 125, 132, 135], "consid": [2, 4, 29, 32, 50, 51, 52, 72, 131, 139], "consider": 16, "consist": [2, 3, 4, 5, 8, 9, 11, 27, 28, 50, 51, 52, 74, 77], "constant": 2, "constant_valu": 2, "constantpad1d": 11, "constraint": [89, 153], "construct": [5, 119, 123], "construct_iir_filt": 119, "contain": [2, 5, 8, 12, 14, 16, 18, 21, 22, 26, 31, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 54, 57, 65, 66, 68, 70, 72, 73, 75, 78, 79, 80, 83, 123, 124, 125, 131, 132, 133, 134, 140, 141, 147, 153], "content": 80, "context": [4, 5, 29, 35, 111, 134], "contigu": [16, 46, 54, 65, 70], "continu": [14, 16, 20, 76, 77, 84, 85, 86, 124, 125, 150, 153], "continuum": 107, "contrari": 89, "contrast": [2, 4, 5, 27, 37, 44, 54, 57, 63, 70, 91, 92], "contrastivenet": 5, "contrawr": [26, 153], "contribut": [149, 151], "contributor": [147, 151], "control": [4, 5, 10, 29, 72, 109, 117, 119, 120, 122, 123, 124, 125, 130, 131, 153], "conv": [10, 11, 115], "conv1": 10, "conv1d": [10, 11, 115], "conv2": 10, "conv2d": [3, 4, 9, 26, 27, 28, 29, 32], "conv_bia": 107, "conv_block_depth_mult": 89, "conv_block_dropout": 89, "conv_block_kernel_length_1": 89, "conv_block_kernel_length_2": 89, "conv_block_n_filt": 89, "conv_block_pool_size_1": 89, "conv_block_pool_size_2": 89, "conv_classifi": [3, 4, 26, 27, 28, 29, 32], "conv_nonlin": [26, 108], "conv_nonlin_exp": [3, 4, 26, 27, 28, 29, 32], "conv_time_spat": [3, 4, 26, 27, 28, 29, 32], "conv_weight_init_fn": 103, "conveni": [5, 106, 123], "converg": [5, 29, 31], "convergencewarn": 5, "convert": [2, 3, 4, 5, 8, 9, 10, 12, 17, 19, 27, 28, 29, 30, 31, 32, 119], "convnet": [2, 8, 26, 27, 28, 93, 105, 108], "convolut": [2, 5, 8, 9, 11, 24, 25, 26, 27, 28, 29, 30, 33, 35, 42, 44, 62, 63, 75, 76, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 124, 136, 144, 146, 152, 153], "coord_fram": 26, "coordin": [49, 68], "copi": [2, 11, 16, 42, 62, 73, 117, 147], "core": [12, 16, 32], "corpu": [7, 13, 14, 15, 23, 24, 75, 81, 82, 91, 121, 124, 130, 152, 153], "corr_coeff": [2, 8], "corrcoef": [2, 8], "correct": [19, 26, 32, 72, 92, 96, 97, 98, 99, 101, 102, 107, 131, 153], "correctli": [9, 10, 11, 100, 151, 153], "correl": [2, 8, 27, 29], "correspond": [2, 5, 8, 12, 21, 29, 30, 31, 37, 40, 72, 73, 74, 75, 83, 84, 86, 123, 125, 130, 131, 132, 140], "corrupt": 147, "cortex": 77, "cosineannealinglr": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "cost": [2, 3, 4, 5, 8, 9, 11, 27, 28], "could": [4, 5, 14, 29, 32, 100, 151], "count": [12, 72, 131], "cours": [16, 73], "cover": [77, 146], "coverag": 153, "cp": 5, "cpp": 11, "cpu": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 32, 72, 131], "creat": [14, 16, 17, 18, 19, 20, 21, 31, 72, 75, 83, 84, 85, 86, 123, 124, 125, 131, 142, 153], "create_example_model": 14, "create_filt": 119, "create_fixed_length_window": [2, 5, 12, 14, 16, 22, 31, 153], "create_from_mne_epoch": 19, "create_from_mne_raw": 19, "create_from_x_i": 17, "create_info": 26, "create_mne_dummy_raw": 31, "create_windows_from_ev": [3, 4, 5, 9, 10, 11, 18, 21, 27, 28, 29, 30, 32, 153], "create_windows_from_target_channel": [8, 153], "creation": [12, 22], "credibl": [29, 32], "criteria": [20, 72, 131], "criterion": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 72, 131], "criterion_": [72, 131], "criterion__loss_funct": [2, 27, 31], "criterion__weight": [9, 10, 11], "crop": [1, 6, 8, 10, 11, 12, 16, 20, 24, 25, 29, 30, 31, 32, 33, 72, 73, 75, 78, 80, 83, 100, 108, 116, 121, 124, 125, 128, 130, 131, 136, 137, 138, 140, 142, 144, 146, 152, 153], "crop_wake_min": [5, 9, 10, 11, 16, 80], "croppedloss": [2, 27, 31], "croppedtimeseriesepochscor": 2, "cross": [2, 8, 16, 27, 28, 74, 91, 92, 104, 107], "cross_entropi": 27, "cross_val_scor": 29, "crossentropyloss": [3, 4, 9, 10, 11, 14, 26, 28, 29, 30, 32, 72, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 112, 113, 115, 131], "csr": [72, 131], "csv": 14, "csvlogger": 32, "cuda": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 72, 119, 122, 131, 144, 150], "cuda_dependent_attributes_": [72, 131], "cuda_path": 150, "cudnn": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 144, 153], "cudnn_benchmark": [2, 3, 4, 5, 8, 9, 11, 27, 28, 144], "cue": [74, 77], "cumbersom": [72, 131], "cupi": [119, 122], "current": [5, 11, 72, 123, 131, 147], "curv": [2, 8, 28], "custom": [3, 4, 15, 23, 24, 36, 75, 84, 152], "custom_crop": 12, "cut": [3, 4, 19, 28, 29, 30, 37, 57, 84, 119], "cutoff": [2, 8, 16, 119], "cv": [4, 29, 30, 106], "cv_result": 29, "cv_results_": [4, 29, 30], "cycl": 14, "cz": [10, 12, 26, 123, 129], "cz_4": 129, "cz_8": 129, "c\u00e9dric": [3, 4], "d": [2, 3, 4, 5, 8, 12, 14, 22, 26, 27, 28, 29, 30, 31, 32, 38, 39, 42, 58, 60, 62, 79, 89, 93, 102, 103, 105, 108, 109, 113, 134, 146, 153], "d_ff": 111, "d_i": 12, "d_model": 111, "dafaram": 12, "dahl": 30, "dai": [12, 74], "dan": [20, 153], "daniel": [20, 35, 153], "darkner": [11, 115, 132], "darva": 77, "data": [1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 25, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 60, 63, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 93, 95, 100, 104, 106, 107, 108, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 136, 141, 144, 146, 147, 148, 152, 153], "data_class": [48, 67], "data_connector": 32, "data_loading_end": 14, "data_loading_start": 14, "data_prepar": 14, "datafram": [2, 4, 5, 8, 9, 10, 11, 14, 16, 20, 21, 22, 27, 28, 29, 30, 72, 75, 131, 132, 133, 134, 135], "dataload": [3, 4, 5, 14, 32, 36, 72, 131, 142], "datapoint": 75, "dataset": [1, 6, 13, 14, 15, 16, 23, 25, 26, 33, 36, 38, 41, 42, 43, 53, 54, 56, 72, 87, 89, 91, 99, 100, 108, 110, 111, 114, 115, 116, 121, 124, 125, 126, 128, 130, 131, 133, 135, 136, 137, 138, 140, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153], "dataset__": [72, 131], "dataset_kwarg": 78, "dataset_load": 18, "dataset_load_kwarg": 78, "dataset_nam": [3, 4, 18, 20, 21, 27, 28, 29, 30, 32, 78], "dataset_split": 2, "dataset_train": [72, 131, 137, 138, 139], "dataset_valid": [72, 131, 137, 138, 139], "datasets_io": [23, 152], "datautil": [0, 5, 18, 83, 153], "dauphin": [47, 66, 141], "david": [47, 66, 141], "db": [3, 16, 123], "ddf2ff": 29, "de": 73, "deactiv": 11, "deal": [72, 131], "decid": [8, 28, 38, 39, 40, 42, 48, 53, 55, 56], "decod": [1, 3, 4, 6, 7, 11, 13, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 35, 72, 73, 75, 78, 84, 90, 93, 95, 100, 103, 104, 105, 106, 108, 115, 116, 121, 124, 125, 126, 128, 130, 131, 136, 137, 138, 140, 142, 144, 146, 148, 152, 153], "decompos": 119, "decomposit": [5, 92], "decreas": [2, 8, 11], "deep": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 32, 35, 44, 46, 63, 93, 97, 98, 103, 104, 105, 108, 110, 111, 113, 146, 148, 150], "deep4": [27, 28, 153], "deep4net": [14, 26, 31, 153], "deepconvnet": 31, "deepcopi": 2, "deepsleepnet": [26, 153], "def": [2, 3, 5, 8, 9, 10, 11, 12, 14, 16, 29, 31, 32], "default": [2, 5, 8, 11, 12, 27, 28, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 72, 73, 79, 80, 81, 82, 83, 86, 89, 91, 92, 93, 95, 97, 98, 99, 100, 104, 106, 107, 117, 118, 119, 120, 122, 123, 125, 131, 139, 144, 153], "defin": [2, 5, 9, 10, 11, 12, 14, 20, 21, 27, 28, 30, 40, 56, 59, 72, 83, 89, 90, 95, 99, 113, 125, 131, 134], "definit": [27, 72, 131], "degre": [29, 32, 49, 50, 51, 52, 68], "deiss": [40, 59], "del": 14, "delai": [119, 153], "delboui": 153, "delet": [5, 22, 75, 130], "delta_freq": [43, 61], "deman": 127, "demand": 4, "demarc": [29, 30], "demean": 127, "demeanin": 127, "demonstr": [3, 4, 7, 22, 24, 26, 32], "deni": [35, 153], "denot": 89, "dens": [27, 100, 107, 109, 110], "densefilt": 113, "densenet": [107, 113], "densiti": 3, "depend": [4, 5, 9, 10, 11, 14, 16, 26, 29, 30, 32, 35, 72, 77, 111, 131, 142, 149, 151, 153], "deprec": [2, 5, 10, 19, 31, 97, 153], "depreci": [3, 4, 8, 27, 28, 29, 30, 31, 32], "depth": [3, 4, 11, 26, 27, 28, 29, 30, 32, 89, 97, 98, 100, 104, 115], "depth_multipli": [97, 98], "depthwis": [89, 97, 98], "desc_4": 73, "describ": [5, 11, 26, 27, 28, 29, 32, 77, 79, 93, 94, 97, 98, 99, 100, 103, 108, 109, 110, 111, 115], "descript": [2, 5, 8, 12, 17, 18, 19, 20, 22, 27, 28, 29, 30, 32, 73, 74, 75, 76, 81, 82, 83, 86, 87, 89, 90, 91, 95, 97, 99, 101, 102, 103, 104, 105, 107, 109, 115, 124, 125], "design": [5, 16, 91, 92, 104, 106, 111, 119], "desir": [37, 49, 57, 68, 74, 117, 123], "despit": [9, 10, 11], "detail": [5, 26, 29, 32, 47, 48, 66, 67, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 123, 129, 130, 144, 151], "detect": [16, 17, 19, 30, 77, 79], "determin": [12, 30, 72, 98, 131], "develop": [26, 29, 32, 92, 107, 147, 151], "deviat": [44, 63], "devic": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 36, 72, 131, 153], "df": [2, 5, 8, 9, 10, 11, 12, 16, 27, 28], "df_of_ages_gend": 12, "dh": 89, "dict": [5, 9, 10, 11, 21, 26, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 54, 75, 76, 78, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 124, 125, 129, 131, 153], "dictionari": [21, 26, 72, 75, 78, 119, 131], "diederik": 31, "differ": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 18, 21, 26, 27, 28, 29, 30, 74, 97, 98, 99, 115, 134, 149], "differenti": [38, 39, 58, 60], "digit": [11, 22, 115, 132], "dilat": [9, 10, 11, 27, 100], "dim": [2, 8, 106], "dimens": [2, 5, 8, 46, 54, 65, 70, 89, 95, 106, 111, 115, 122, 153], "dimension": [5, 72, 91, 95, 104, 131, 142], "dimshuffl": [3, 4, 26, 27, 28, 29, 32], "ding": 46, "direct": [77, 119, 147], "directli": [2, 3, 5, 8, 12, 22, 26, 27, 28, 30, 31, 72, 83, 121, 123, 131, 151], "directori": [12, 16, 18, 27, 73, 75, 79, 81, 82, 87, 130, 151], "dirnam": 5, "disabl": [32, 72, 119, 131], "disappear": 74, "discard": [12, 80], "disconsid": 12, "discov": 5, "discret": [15, 23, 24, 75, 81, 124, 152, 153], "discrimin": 30, "disk": [12, 14, 16, 81, 82, 125], "dispatch": 14, "displai": [5, 9, 10, 11, 27, 28, 29, 32, 77, 144], "distanc": [37, 57, 74], "distinct": [29, 32], "distinguish": 29, "distribut": [9, 10, 29, 47, 106, 149], "divers": [2, 4, 8], "divid": [77, 84, 85, 86, 124], "divis": [29, 32, 109, 111, 128], "divyesh": [10, 153], "dl": 22, "do": [4, 12, 14, 26, 27, 29, 32, 72, 84, 85, 86, 115, 124, 125, 131, 135, 144, 151, 153], "doc": [26, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 112, 113, 115, 144, 151, 153], "docstr": [26, 153], "document": [4, 5, 10, 12, 35, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 112, 113, 115, 117, 119, 120, 122, 123, 147, 151, 153], "doe": [2, 8, 14, 16, 18, 27, 29, 32, 45, 72, 89, 100, 125, 131, 147], "doesn": [32, 72, 73, 131], "dogrusoz": [37, 44, 54, 57, 63, 70], "doi": [2, 8, 10, 26, 27, 28, 29, 30, 35, 73, 89, 93, 96, 97, 98, 103, 105, 108, 109, 111, 113, 146], "domain": [2, 4, 8, 16, 28, 30, 43, 48, 61, 67, 104, 115, 119, 122], "dominiqu": 35, "don": [5, 11, 17, 19, 72, 131], "done": [3, 11, 16, 18, 26, 27, 89, 124, 125], "dong": [94, 106], "doubl": 119, "double_time_conv": 14, "down": [74, 109, 115, 122, 144], "download": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 73, 81, 82, 150], "downsampl": [9, 10, 104, 122], "downsid": 16, "downstream": 5, "downward": 77, "draw": [42, 62], "drawn": 47, "driver": 150, "drop": [3, 4, 10, 14, 19, 26, 27, 28, 29, 32, 38, 58, 86, 118, 125, 129], "drop_bad": [14, 86, 125], "drop_bad_window": [86, 125], "drop_channel": 118, "drop_index": [72, 131], "drop_last_window": [2, 12, 14, 17, 19, 22, 27, 31, 84, 85, 86, 124, 125], "drop_original_sign": 129, "drop_path_r": 106, "drop_prob": [14, 26, 30, 93, 95, 96, 97, 98, 101, 102, 108, 112, 113], "drop_rat": [106, 107], "dropchannel": 153, "dropout": [3, 4, 5, 9, 10, 26, 27, 28, 29, 30, 32, 89, 90, 93, 95, 96, 97, 98, 106, 107, 108, 109, 110, 111, 112, 113], "dropout_inp": 90, "droppath": 106, "dtype": [22, 84, 124, 125, 127, 128, 153], "due": [18, 32, 153], "dummi": [2, 27], "dunder": [72, 131], "duplic": [143, 153], "dur": [2, 3, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31], "durat": [12, 29, 30, 31, 117, 119, 125], "dure": [2, 4, 5, 8, 9, 10, 11, 12, 14, 27, 28, 29, 30, 32, 72, 73, 106, 107, 119, 123, 131, 153], "dx": [26, 35, 93, 97, 98, 103, 105, 108, 146], "dynam": [72, 131], "e": [5, 9, 10, 11, 14, 16, 26, 27, 28, 29, 30, 32, 37, 40, 44, 46, 54, 56, 57, 59, 63, 65, 70, 72, 76, 79, 80, 81, 82, 83, 86, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 125, 129, 131, 135, 139, 146, 151, 153], "e1750": 107, "e1762": 107, "e215": [5, 9, 10, 11], "e220": [5, 9, 10, 11], "e231": 153, "e46769": 92, "each": [2, 4, 8, 9, 10, 11, 12, 14, 16, 17, 19, 21, 22, 26, 29, 30, 31, 36, 37, 38, 42, 46, 48, 49, 53, 55, 57, 58, 62, 65, 67, 68, 69, 71, 72, 73, 74, 75, 77, 80, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 122, 124, 125, 131, 133, 135, 137, 138, 139, 143], "eager": [15, 23, 24, 82, 93, 108, 124, 152], "earli": 29, "early_stop": 5, "earlystop": [5, 29, 32], "easiest": [26, 29], "easili": [2, 8, 20, 26, 28, 29, 30, 32, 133], "ecg": 91, "ecog": [1, 6, 7, 13, 24, 73, 75, 100, 108, 116, 121, 123, 124, 126, 128, 130, 137, 138, 140, 144, 148, 152, 153], "ecosystem": 32, "edf": [14, 16, 17, 19, 22], "edfx": 80, "edg": [16, 119], "edit": 151, "edu": [2, 4, 8, 73], "eeg": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 120, 121, 123, 124, 125, 128, 130, 133, 134, 141, 144, 146, 148, 152, 153], "eegbci": [17, 19], "eegclassifi": [2, 5, 9, 10, 11, 26, 27, 28, 29, 30, 153], "eegconform": [26, 153], "eegincept": [26, 98, 153], "eeginceptionerp": [26, 97, 153], "eeginceptionmi": [26, 153], "eegitnet": [26, 153], "eegmmidb": [17, 19], "eegmodulemixin": [2, 31, 153], "eegnet": [101, 102], "eegnet4": 102, "eegnetv1": 26, "eegnetv4": 26, "eegregressor": [2, 8, 26, 31, 153], "eegresnet": [26, 153], "eegsimpleconv": [26, 153], "eegwindowsdataset": [5, 9, 16, 125, 153], "eeyhsong": 95, "effect": [3, 19], "effici": [2, 3, 16, 27], "egg": 151, "eggensperg": [26, 27, 28, 29, 30, 31, 35, 93, 103, 105, 108, 146], "einop": 153, "either": [2, 8, 26, 28, 29, 30, 72, 74, 75, 77, 100, 119, 123, 131, 142], "el": [104, 153], "elabor": [29, 32], "eldel": [10, 111], "eldele2021": [7, 13, 24, 75, 80, 100, 111, 114, 121, 125, 130, 133, 135, 144, 146, 152], "electrocorticograph": [2, 8, 73], "electrod": [4, 20, 74, 77, 123], "electroencephalogram": [37, 44, 54, 57, 63, 70, 92], "electroencephalograph": [49, 50, 51, 52, 68], "electroencephalographi": 35, "electrophysiolog": 148, "element": [48, 49, 54, 68], "elementwise_affin": 10, "elif": [14, 31], "elouaya": 104, "els": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 27, 28, 29, 30, 31, 32, 72, 106, 131], "elu": [11, 89, 91, 93, 97, 98, 103], "emadeldeen24": 111, "emb": [5, 91], "emb_siz": [5, 91, 92, 106], "embc": [49, 50, 51, 52, 68], "embed": [5, 9, 10, 89, 91, 92, 95, 106], "embedd": 5, "emg": 80, "emir": 11, "emit": 118, "emot": [44, 63], "empir": [47, 66, 112, 141], "empti": [29, 72, 119, 123], "en": [18, 27], "enabl": [14, 16, 27, 32, 72, 74, 113, 131, 153], "encapsul": 125, "encod": [11, 46, 91, 111, 115], "encount": [16, 18, 147], "encourag": [2, 8, 24, 27, 28], "end": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 35, 72, 99, 117, 122, 124, 125, 131, 137, 138, 139, 153], "end_dim": [9, 10], "enforc": 153, "eng": 113, "engemann": [4, 5, 35, 134, 153], "engin": [4, 5, 9, 10, 28, 29, 30, 46, 49, 50, 51, 52, 68, 94, 95, 97, 98, 99, 110, 111], "enough": [5, 77], "ensembl": [135, 153], "ensur": [2, 115, 144, 150, 153], "ensure4d": [3, 4, 26, 27, 28, 29, 32], "ensure_odd_conv_s": 115, "ensuredim": [3, 4, 26, 27, 28, 29, 32], "enter": [104, 151], "entir": [5, 14, 20, 29, 32, 153], "entri": [21, 118], "enumer": [5, 12, 29, 32], "env": 153, "environ": [4, 73, 144], "eog": [80, 115], "ep": [10, 128], "epo": [18, 75, 87], "epoch": [2, 3, 4, 5, 8, 9, 10, 11, 14, 19, 24, 25, 27, 28, 29, 30, 31, 32, 33, 72, 75, 83, 85, 86, 100, 108, 117, 118, 119, 120, 121, 123, 124, 125, 131, 134, 137, 138, 139, 152, 153], "epochsarrai": 26, "epochscor": [5, 8, 9, 10, 11, 72, 131], "epochscoring_1": [72, 131], "equal": [2, 8, 32, 84, 85, 86, 100, 106, 116, 124], "equival": [3, 119], "eras": 38, "eric": 35, "erp": [97, 98], "error": [12, 22, 27, 30, 31, 86, 118, 124, 125, 126, 131, 147, 153], "error_scor": [4, 29, 30], "eskandarian": 99, "especi": [9, 30, 32], "estim": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32], "et": [10, 26, 46, 77, 91, 93, 94, 96, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 115, 139], "etc": [14, 28, 30, 91, 121], "ethic": 77, "eval": [4, 30, 32, 153], "eval_i": [4, 30], "eval_set": [4, 30], "eval_x": [4, 30], "evalu": [2, 3, 4, 5, 8, 9, 10, 11, 14, 21, 27, 28, 30, 92, 104, 112], "even": [11, 26, 29, 32, 72, 73, 115, 131], "event": [18, 19, 20, 21, 26, 27, 28, 29, 30, 32, 80, 86, 124, 125], "event_cod": [17, 19], "everi": [9, 10, 11, 12, 14, 18, 22, 29, 32, 77, 89, 90, 95, 99, 153], "evok": [118, 119, 120, 123], "exact": 26, "exactli": 125, "exampl": [1, 2, 6, 8, 9, 10, 11, 13, 14, 15, 16, 22, 23, 25, 31, 33, 34, 37, 39, 40, 44, 45, 46, 47, 48, 49, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 123, 147, 152, 153], "exce": 117, "exceed": [86, 125], "except": [77, 80], "excess": 22, "exclud": [117, 119, 120, 123], "exclus": [29, 32], "execut": [5, 6, 11, 12, 13, 14, 16, 17, 19, 23, 33, 34, 77, 130, 152, 153], "exemplifi": 153, "exist": [16, 18, 22, 29, 31, 73, 75, 76, 83, 123, 130], "expand": [72, 115, 131], "expand_dim": 31, "expans": [90, 106], "expect": [5, 14, 26, 32, 72, 92, 131], "expens": [14, 72, 131], "experi": [7, 14, 24, 29, 32, 73, 77], "experiment": [5, 124, 153], "expert": [9, 10, 11, 107], "explain": [1, 4, 24, 27, 96], "explan": [2, 27, 129, 130], "explicit": [27, 139], "explicitli": [5, 29, 32, 119, 120, 123], "explor": [5, 29], "exponent": [127, 128], "exponenti": [2, 3, 4, 8, 27, 28, 29, 30, 32, 115, 127, 128], "exponential_moving_standard": [2, 3, 4, 8, 27, 28, 29, 30, 32], "expos": 153, "express": [3, 4, 26, 27, 28, 29, 32], "extra": [32, 153], "extra_param": 90, "extract": [2, 8, 12, 14, 16, 17, 19, 22, 27, 32, 83, 97, 98, 99, 106, 109, 111, 124, 125, 132, 134], "extractor": [5, 9, 10, 94, 109, 110, 111, 115], "f": [4, 5, 10, 11, 12, 14, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 44, 48, 63, 67, 79, 93, 97, 98, 103, 105, 108, 113, 146], "f1": [5, 9, 10, 11, 89, 102, 139], "f2": 102, "f3": 12, "f4": 12, "f7": 12, "f8": 12, "f811": [12, 22], "f_criterion": 5, "f_histori": 5, "f_name": 5, "f_optim": 5, "facebookresearch": [47, 66, 141], "facilit": [26, 153], "factor": [3, 4, 5, 9, 10, 12, 27, 28, 29, 30, 32, 48, 104, 106, 111, 113, 115, 122], "factor_new": [2, 3, 4, 8, 27, 28, 29, 30, 32, 127, 128], "factornew": [127, 128], "fail": [5, 12], "fake": [24, 25, 26, 33, 75, 76, 93, 100, 108, 116, 124, 136, 144, 152, 153], "fake_data_split": 31, "fake_descript": 31, "fake_dur": 31, "fake_regression_dataset": 31, "fake_sfreq": 31, "fall": [86, 125], "fals": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 42, 47, 49, 50, 51, 52, 62, 68, 72, 73, 75, 76, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 117, 121, 123, 124, 125, 126, 129, 130, 131, 134, 135, 137, 138, 144, 146, 153], "familiar": 149, "far": [5, 134], "farrugia": 104, "fast": [14, 16, 32, 144], "faster": [10, 16, 27, 72, 122, 131], "fattouh": [2, 8, 153], "favor": 153, "favour": 153, "fc": [10, 111], "feat": 5, "feat_extractor": [9, 10], "featur": [5, 9, 10, 26, 29, 94, 95, 97, 98, 99, 100, 104, 106, 109, 110, 111, 115, 147, 151, 153], "feature_extractor": [9, 10], "feature_map": 104, "features1": 10, "features2": 10, "fed": [2, 27, 50, 51, 52, 104], "feed": [89, 111], "feed_forward": 10, "feedback": [5, 9, 10, 11, 74], "feel": [29, 32], "feet": [17, 18, 19, 21, 27, 28, 29, 30, 32, 74, 77], "femal": [12, 77], "female_df": 12, "fernand": 107, "fernandez": 109, "fetch": [17, 19, 20, 21, 74, 77, 78], "fetcher": 148, "few": [5, 9, 10, 11, 14, 16, 26, 153], "fewer": [115, 119], "fexion": 8, "fft": 122, "fieder": [26, 27, 28, 29, 30, 31, 35, 93, 103, 105, 108, 146], "field": [2, 27, 72, 123, 131, 142], "fif": [14, 16, 18, 75, 87, 153], "fiff_unit_v": 26, "fiff_unitm_non": 26, "fiffv_coil_eeg": 26, "fiffv_coord_head": 26, "fiffv_eeg_ch": 26, "fig": [2, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 30, 31, 146], "figsiz": [2, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 31, 146], "figur": [12, 27, 28, 29, 74, 89, 146], "file": [5, 6, 12, 13, 14, 16, 17, 18, 19, 23, 26, 33, 34, 75, 80, 81, 82, 87, 117, 135, 147, 152, 153], "file_id": 135, "fileexistserror": 130, "fill": [26, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "filter": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 20, 26, 27, 28, 29, 30, 32, 37, 57, 74, 89, 93, 95, 97, 98, 99, 102, 108, 110, 112, 113, 115, 121, 122, 129, 153], "filter_data": 119, "filter_length": 119, "filter_length_2": [14, 93], "filter_length_3": [14, 93], "filter_length_4": [14, 93], "filter_time_length": [14, 26, 93, 95, 108], "filterbank": 153, "filtfilt": 119, "final": [2, 4, 5, 8, 9, 10, 11, 12, 14, 16, 26, 27, 29, 32, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 128], "final_conv_length": [2, 3, 4, 8, 14, 26, 27, 28, 29, 30, 31, 32, 93, 101, 102, 108, 153], "final_fc_length": 95, "final_lay": [3, 4, 11, 26, 27, 28, 29, 32], "final_pool_length": [103, 153], "find": [2, 4, 8, 30], "fine": 30, "finer": [8, 153], "finger": [1, 6, 7, 13, 24, 73, 75, 77, 100, 108, 116, 121, 124, 126, 128, 130, 137, 138, 140, 144, 152, 153], "fir": [16, 119, 122], "fir_design": 119, "fir_window": 119, "first": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 26, 27, 28, 30, 40, 46, 54, 65, 70, 72, 75, 79, 80, 81, 82, 89, 93, 95, 104, 108, 111, 119, 122, 123, 125, 131, 147, 151], "first_conv_nonlin": 93, "first_filter_length": 103, "first_pool_mod": [14, 93], "first_pool_nonlin": 93, "first_samp": 117, "firstli": [12, 21], "firwin": [16, 119], "firwin2": 119, "fit": [2, 3, 5, 8, 9, 10, 11, 14, 24, 26, 27, 28, 29, 30, 31, 32, 72, 125, 131], "fit_loop": 32, "fit_param": [4, 30, 131], "fit_transform": 5, "five": [12, 73], "fix": [3, 40, 59, 91, 106, 119, 147, 153], "fix_init_weight_and_init_embed": 106, "fixat": 74, "flag": 153, "flake8": 153, "flat": [10, 19, 38, 58, 124, 125, 126], "flatten": [5, 9, 10, 11], "flexion": [1, 6, 7, 13, 24, 73, 75, 100, 108, 116, 121, 124, 126, 128, 130, 137, 138, 140, 144, 152, 153], "flip": [5, 53, 55, 69, 71], "float": [3, 5, 26, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 72, 80, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 122, 124, 125, 127, 128, 129, 131, 141, 146], "float32": 22, "float64": [17, 19, 31], "fly": [2, 8, 28, 30, 76, 83, 153], "fmax": 3, "fmin": 3, "fmt": 30, "fn": [18, 121], "fname": 14, "fnin": 35, "focu": 4, "fold": [4, 30, 32], "folder": [14, 73], "follow": [3, 4, 5, 9, 10, 11, 14, 26, 29, 32, 91, 97, 98, 104, 106, 119, 122, 125, 131, 149, 150, 151, 153], "font": 146, "font_scal": 29, "fontsiz": [2, 8, 12, 27, 28], "fontweight": 146, "foot": 74, "footcit": 123, "forc": 73, "force_upd": 73, "form": [26, 47, 66, 74, 75, 76, 83], "format": [4, 14, 17, 19, 26, 84, 85, 86], "former": [26, 72, 89, 90, 95, 99, 131], "fortun": 26, "forum": 144, "forward": [3, 4, 5, 11, 26, 27, 28, 29, 32, 41, 56, 72, 89, 90, 91, 92, 94, 95, 99, 100, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 119, 121, 123, 131, 136, 140, 142], "forward_featur": 106, "found": [2, 8, 10, 12, 16, 18, 19, 20, 21, 26, 27, 28, 29, 30, 32, 73, 123, 124, 125], "four": [5, 9, 49, 74, 77, 90], "fourier": [42, 62, 92], "fp1": 12, "fp2": 12, "fpz": 10, "fr": [3, 4, 11], "fraction": [29, 31], "framework": [4, 90], "frank": 35, "free": [29, 32], "freedom": [29, 32], "freez": [9, 10, 153], "freiburg": 77, "freq": [3, 74, 77], "freq_idx": 90, "freq_shift": 3, "freqs_to_notch": [37, 57], "frequenc": [2, 3, 4, 8, 11, 12, 16, 17, 26, 27, 28, 29, 30, 31, 32, 37, 43, 57, 61, 77, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 122, 129, 132, 153], "frequency_band": 129, "frequencyshift": 3, "frequent": [9, 10, 11], "friendli": 153, "from": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 42, 47, 49, 50, 51, 52, 58, 60, 62, 68, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 117, 119, 123, 124, 125, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 149, 152, 153], "front": 74, "frontier": [27, 28, 29, 30, 35, 79], "frontiersin": 35, "ft": [42, 62, 89], "ft_surrog": 153, "ftsurrog": 4, "full": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 144], "fulli": [11, 29, 30, 89, 95, 97, 98, 99], "function": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 20, 22, 26, 27, 28, 30, 31, 32, 35, 42, 56, 72, 75, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 108, 109, 112, 113, 115, 117, 121, 123, 125, 131, 137, 138, 139, 144, 153], "functool": 30, "fundament": [24, 25], "further": [2, 4, 5, 8, 9, 10, 11, 27, 29, 32, 72, 131], "furu": 106, "futur": [5, 10, 19, 26, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "futurewarn": [2, 5, 26, 31, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "fz": 12, "g": [5, 9, 10, 11, 14, 16, 26, 27, 28, 29, 30, 32, 37, 40, 42, 44, 54, 56, 57, 59, 62, 63, 72, 76, 79, 80, 81, 82, 83, 86, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 125, 129, 131, 135, 139, 146, 153], "galleri": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 152], "galtier": [5, 9, 10, 110], "gamma": 77, "gamma_1": 106, "gamma_2": 106, "gao": 95, "gaussian": [31, 44, 63], "gave": [4, 30], "gb": [9, 10, 11], "gca": 12, "ge": 107, "gelu": 10, "gemein": [12, 17, 18, 19, 20, 21, 22, 31, 153], "gender": [12, 18, 22, 79, 81, 82], "gener": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 67, 72, 100, 106, 109, 112, 119, 131, 139, 146, 153], "georg": 30, "get": [14, 16, 17, 22, 27, 28, 29, 32, 48, 72, 106, 131], "get_augmentation_param": [37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 54, 56, 153], "get_center_label": [9, 10], "get_classifi": 106, "get_config": 27, "get_data": 17, "get_default_callback": [72, 131], "get_fc_siz": 95, "get_iter": [72, 131], "get_label": [2, 8, 27, 28], "get_legend_handles_label": 5, "get_loss": 72, "get_metadata": [5, 9, 10, 11, 27, 28, 29, 31, 75, 133], "get_num_lay": 106, "get_output_shap": [2, 27, 31, 100, 153], "get_param": 153, "get_posit": [49, 68], "get_torchinfo_statist": 100, "get_ylim": [27, 28], "gh": 153, "ghaith": 153, "gillmeist": 96, "gilmer": 30, "git": 151, "github": [4, 5, 30, 90, 91, 92, 104, 106, 107, 147, 149, 153], "give": [10, 12, 22, 26, 49, 68, 119, 147], "given": [3, 4, 5, 21, 32, 38, 39, 40, 42, 48, 53, 55, 56, 72, 73, 87, 119, 120, 123, 131, 142, 153], "gizzi": 90, "glass": [5, 9, 10, 11], "glasstett": [26, 27, 28, 29, 30, 31, 35, 93, 103, 105, 108, 146], "global": [72, 104, 131, 139], "glossari": [2, 4, 8], "gmail": [2, 5, 8, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31], "gnassoun": [11, 153], "go": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 117], "goal": [32, 97, 98, 99], "godbol": 30, "goe": 16, "goh": [37, 44, 54, 57, 63, 70], "goj": 35, "goldberg": [5, 9, 10, 11], "good": [2, 8, 26, 27, 28], "googl": 30, "gordon": [101, 102], "got": 30, "gpu": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 32, 72, 131, 150, 153], "gradient": [27, 153], "gradiomet": 3, "grai": 77, "gramfort": [4, 5, 9, 10, 35, 110, 134, 153], "grangier": [38, 39, 58, 60], "greater": [37, 57], "green": 12, "grid": [29, 30], "gridsearchcv": [4, 29, 30, 139, 153], "gridsearchcvifittedgridsearchcv": 4, "grifcc": [97, 98], "gripon": 104, "ground": [31, 74, 77], "group": 109, "groupbi": 16, "growth": [107, 113], "growth_rat": 107, "gt": 4, "guarante": [92, 96, 97, 98, 99, 101, 102, 107], "guetschel": [26, 153], "guid": [22, 29, 150], "guidelin": 151, "guo": 94, "gustavo": 153, "h": [2, 4, 5, 8, 27, 28, 37, 40, 44, 54, 57, 59, 63, 70, 79, 89, 94, 96, 134], "h_freq": [2, 3, 4, 5, 8, 9, 10, 16, 27, 28, 29, 30, 32, 119], "h_trans_bandwidth": 119, "ha": [2, 3, 4, 5, 8, 10, 12, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 50, 51, 52, 72, 75, 76, 80, 83, 86, 92, 96, 97, 98, 99, 101, 102, 107, 115, 125, 130, 131, 141, 147, 153], "hac": [9, 10, 11], "had": [77, 97, 98, 100], "half": [110, 119], "halv": 115, "ham": [16, 119], "hamlet": [40, 59], "hand": [17, 19, 24, 28, 30, 74, 77], "handl": [2, 3, 4, 8, 27, 28, 30, 123], "hangbo": 106, "hann": 119, "happen": [147, 153], "hard": 147, "hardwar": [14, 16], "hasattr": 30, "hausdorff": [5, 9, 10, 11], "have": [2, 4, 5, 8, 11, 12, 14, 16, 17, 19, 21, 26, 27, 28, 29, 30, 32, 46, 49, 54, 65, 68, 70, 72, 84, 85, 86, 99, 104, 106, 121, 123, 124, 131, 139, 147, 150, 151, 153], "hbm": [26, 27, 28, 29, 30, 35, 93, 103, 105, 108, 146], "hbm23730": 35, "he": [9, 10, 11], "head": [89, 91, 95, 106, 111, 133], "head_dim": 106, "health": [37, 44, 54, 57, 63, 70, 91], "healthi": [77, 79, 80], "heart": 91, "heatmap": 30, "heavi": 146, "height": [12, 29], "held": [9, 10], "help": [5, 9, 10, 21, 123], "helper": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31], "henrik": 153, "here": [2, 3, 4, 5, 8, 10, 11, 12, 21, 22, 24, 26, 27, 28, 29, 30, 32, 43, 61, 79, 86, 91, 99, 125], "heterogen": [38, 39, 58, 60], "high": [2, 3, 4, 8, 11, 27, 28, 29, 30, 32, 37, 57, 77, 97, 98, 115, 119, 132], "high_cut_hz": [2, 3, 4, 5, 8, 9, 10, 27, 28, 29, 30, 32], "higher": [2, 5, 8, 32, 111], "highli": 29, "hint": 153, "hist": 12, "histori": [2, 5, 8, 9, 10, 11, 27, 28, 31, 72, 131], "hold": [18, 75, 76, 83, 124, 125], "holdout": 29, "home": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32], "hong": 107, "hongyi": [47, 66, 141], "honor": [72, 131], "hook": [89, 90, 95, 99, 153], "hop_length": [91, 92], "horizont": 12, "horizontalalign": 29, "hornero": [97, 98], "hospit": [12, 81, 82, 153], "host": [18, 27], "how": [2, 3, 4, 5, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 72, 75, 78, 100, 108, 117, 121, 123, 125, 128, 130, 131, 144, 152, 153], "howev": [2, 3, 4, 5, 8, 11, 14, 16, 21, 26, 27, 28, 29, 125], "hpu": 32, "hspace": 12, "html": [2, 4, 5, 8, 12, 18, 26, 27, 72, 80, 81, 82, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 112, 113, 115, 131, 144, 146, 153], "http": [2, 4, 5, 8, 12, 18, 26, 27, 28, 29, 30, 35, 47, 66, 72, 73, 74, 77, 80, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 111, 112, 113, 115, 131, 141, 144, 146, 151], "hubert": [5, 9, 14, 16, 20, 153], "hue": 14, "hum": [27, 28, 29, 30], "human": [2, 8, 26, 31, 35, 40, 59, 73, 93, 103, 105, 108, 119, 146], "hung": [101, 102], "hutter": [26, 27, 28, 29, 30, 35, 93, 103, 105, 108, 146], "hybrid": 105, "hybridnet": 26, "hyeperparamet": 30, "hyperparamet": [2, 5, 8, 9, 10, 11, 14, 24, 25, 27, 28, 32, 33, 47, 72, 75, 78, 100, 104, 108, 121, 125, 128, 130, 131, 144, 152, 153], "hypnogram": [9, 10, 11], "hyv\u00e4rinen": [4, 5, 134], "hz": [2, 3, 4, 5, 8, 9, 11, 16, 27, 29, 30, 31, 37, 43, 57, 61, 74, 89, 95, 99, 115, 119], "h\u00e4m\u00e4l\u00e4inen": 35, "i": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 26, 27, 28, 30, 31, 35, 37, 41, 42, 43, 46, 47, 49, 54, 56, 57, 61, 62, 65, 66, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 122, 123, 124, 125, 130, 131, 134, 139, 143, 144, 148, 149, 150, 153], "i_class": [27, 28], "i_start_in_tri": [83, 133], "i_stop_in_tri": [83, 133, 143], "i_window_in_tri": [83, 133, 143], "iclr": [47, 66, 106], "id": [12, 18, 20, 21, 27, 28, 29, 30, 32, 75, 79, 81, 82, 87, 124, 125, 130, 153], "ideal": 77, "ident": [9, 11, 32, 45, 72, 93, 131], "identifi": [9, 10, 11, 86, 125], "ids_to_load": [18, 87], "idx": [3, 4, 9, 10, 11, 26, 27, 28, 29, 30, 32], "idx_perm": [47, 66], "idx_shuffl": [48, 67], "idx_train": 8, "idx_valid": 8, "ie": 124, "ieee": [5, 9, 10, 11, 46, 48, 49, 50, 51, 52, 67, 68, 89, 94, 95, 96, 97, 98, 110, 111], "ieeexplor": 95, "igel": [11, 115, 132], "ignor": [2, 3, 4, 8, 54, 72, 89, 90, 95, 99, 118, 121, 124, 125, 131, 134], "ii": 29, "iia": 74, "iir": 119, "iir_param": 119, "ill": 10, "illustr": [3, 29], "illutr": 3, "imag": [74, 97, 98, 106], "imageri": [4, 74, 89, 90, 96, 99, 104, 153], "imagin": [17, 19], "imbal": [42, 62, 80], "imbalanc": [9, 10, 11], "immedi": 124, "impact": [14, 27, 30], "implement": [9, 10, 14, 16, 26, 29, 46, 47, 56, 65, 66, 72, 89, 92, 96, 97, 98, 99, 101, 102, 106, 107, 131, 141, 142, 148, 153], "implicitli": [5, 27, 29, 32], "import": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 42, 62, 147, 151], "impos": 89, "imposs": 14, "improv": [2, 3, 5, 8, 9, 10, 11, 32, 119, 147, 153], "in_chan": [11, 26, 31, 93, 101, 102, 103, 105, 108, 113, 115, 116], "in_channel": [96, 97, 98, 99, 106], "in_featur": [9, 10], "inat": 74, "incept": [96, 97, 98, 99, 153], "inceptionnet": [97, 98, 99], "includ": [9, 11, 12, 14, 28, 29, 30, 32, 39, 60, 78, 104, 117, 119, 120, 124, 125, 147, 148], "include_tmax": [12, 117], "incom": [72, 131], "incompat": 153, "incomplet": 12, "inconsist": 125, "incorrect": 153, "increas": [2, 3, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 32, 99, 111, 153], "ind": 22, "ind1": 5, "ind2": 5, "inde": 4, "independ": [29, 32, 42, 62, 119, 153], "indetermin": [2, 3, 4, 5, 8, 9, 11, 27, 28], "index": [2, 5, 8, 9, 10, 11, 17, 27, 28, 30, 31, 76, 117, 127, 128, 132, 133, 143, 149], "indic": [5, 9, 10, 21, 31, 47, 48, 66, 67, 75, 119, 120, 123, 133, 134, 135, 153], "indices_": 29, "individu": [9, 10, 11, 12, 26, 27, 72, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 131, 153], "industri": 89, "inf": 12, "infer": [26, 29, 30, 72, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 125, 131, 139], "infin": 123, "info": [2, 3, 4, 8, 12, 14, 16, 17, 19, 20, 21, 26, 27, 28, 29, 30, 32, 75, 83, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 120, 123, 133, 135, 147, 153], "inform": [3, 4, 12, 14, 17, 18, 20, 26, 29, 30, 42, 62, 72, 75, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 131, 133, 151], "informat": 89, "inherit": [8, 9, 10, 11, 26, 28, 30, 72, 131], "init_block_s": [2, 3, 4, 8, 27, 28, 29, 30, 32, 127, 128], "init_scal": 106, "init_valu": 106, "initi": [3, 4, 5, 9, 10, 11, 26, 29, 30, 32, 72, 95, 97, 98, 106, 115, 131], "initialis": [30, 131], "initialized_": [72, 131], "initialz": [72, 131], "inplac": [9, 10, 16], "input": [2, 3, 4, 8, 10, 11, 14, 21, 26, 27, 28, 29, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 131, 153], "input_chan": 106, "input_s": 100, "input_size_": [89, 109, 110, 111, 115], "input_size_sampl": [5, 9, 10, 11], "input_window_": 99, "input_window_sampl": [2, 3, 4, 8, 14, 26, 27, 28, 29, 30, 31, 32, 93, 95, 96, 97, 98, 101, 102, 103, 105, 108, 113, 116], "input_window_second": [26, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 131], "inria": [3, 4, 11], "insecurerequestwarn": [18, 27], "insert": [12, 22, 100], "insid": [4, 29, 30, 97, 98, 151], "insight": 5, "inspir": [106, 132], "inst": [20, 118, 119, 120, 123], "instal": [32, 72, 119, 122, 131, 153], "instanc": [5, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 63, 72, 89, 90, 95, 99, 117, 118, 119, 120, 123, 131, 133, 153], "instanti": [2, 3, 4, 8, 14, 26, 27, 28, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 63, 72, 78, 131, 153], "instead": [3, 4, 5, 8, 22, 27, 28, 29, 30, 31, 32, 72, 89, 90, 95, 97, 99, 100, 123, 131, 153], "instruct": 149, "int": [3, 4, 5, 9, 10, 14, 16, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 65, 67, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 142, 144, 146], "integ": [21, 22, 27, 28, 40, 46, 54, 59, 65, 70, 75, 119, 120, 130], "integr": [9, 10, 32, 153], "intend": 92, "intens": [4, 104], "inter": [74, 77], "interest": [5, 12, 22, 26], "interfac": [32, 35, 48, 67, 97, 98, 101, 102], "intermedi": 100, "intern": [11, 14, 16, 20, 21, 44, 47, 49, 50, 51, 52, 63, 66, 68, 106, 121], "interpol": [47, 49, 50, 51, 52, 66, 68], "interpret": [35, 40, 59, 107, 119, 120, 131], "interquartil": 11, "interrupt": [72, 131], "interv": [32, 77, 125, 153], "introduc": [5, 9, 10, 11, 14, 15, 24, 25, 27, 31], "invari": [113, 153], "invas": 77, "invert": 40, "invert_xaxi": 12, "invert_yaxi": 29, "investig": 26, "io": [5, 9, 16, 17, 18, 19, 27, 76, 117, 119, 129], "ioven": 153, "ipynb": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32], "irregular": 147, "is_abbrev": [3, 4, 18, 20, 21, 29, 30], "is_avail": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32], "isinst": [9, 10], "isip": [12, 14, 81, 82], "isnan": 2, "isotrak": 16, "issn": 35, "issu": [5, 14, 16, 147, 153], "issubset": 12, "item": [5, 14, 19, 20, 26, 27, 28, 32], "iter": [3, 4, 5, 20, 22, 47, 72, 100, 118, 131, 142], "iterator_test": [72, 131], "iterator_test__batch_s": [72, 131], "iterator_train": [3, 4, 72, 131], "iterator_train__batch_s": [72, 131], "iterator_train__drop_last": [72, 131, 153], "iterator_train__num_work": 5, "iterator_train__sampl": [5, 9, 10, 11], "iterator_train__shuffl": [2, 5, 9, 10, 11, 27, 31, 72, 131], "iterator_train__transform": [3, 4], "iterator_valid": [72, 131], "iterator_valid__num_work": 5, "iterator_valid__sampl": [5, 9, 10, 11], "itertool": [14, 16], "itnet": [96, 153], "its": [3, 4, 5, 9, 10, 16, 18, 20, 21, 26, 29, 30, 31, 72, 75, 121, 130, 131], "itself": [14, 29, 30, 147], "iv": [1, 6, 7, 13, 20, 21, 24, 25, 26, 28, 29, 30, 32, 33, 36, 38, 41, 42, 43, 53, 54, 56, 73, 75, 78, 89, 99, 100, 108, 116, 121, 124, 125, 126, 128, 130, 136, 137, 138, 140, 144, 146, 152, 153], "ivanov": [5, 9, 10, 11], "izadi": [37, 44, 54, 57, 63, 70], "j": [2, 4, 5, 8, 26, 27, 28, 29, 30, 31, 37, 40, 42, 44, 54, 57, 59, 62, 63, 70, 73, 90, 91, 92, 93, 96, 101, 102, 103, 105, 107, 108, 110, 112, 113, 146], "ja": 35, "jankauska": 153, "javad": 153, "jayaram": [28, 29, 30], "jbanvil": [5, 9, 14, 16, 20], "je": [9, 10, 11], "jennum": [11, 115, 132], "jiang": [44, 63, 106], "jiang2024": 106, "jimmi": 31, "jin": [40, 59], "jing": 107, "jing2023": 107, "jjl": [9, 10, 11], "jm": [9, 10, 11], "jmir": 92, "job": [12, 72, 81, 82, 87, 119, 122, 124, 125, 130, 131], "joblib": [16, 130], "john": 153, "joint": 123, "jointli": 29, "josef": 35, "jost": 35, "journal": [4, 28, 29, 30, 35, 99], "json": [18, 75, 87, 153], "jupyt": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32], "just": [2, 4, 8, 22, 26, 28, 29, 30, 72, 93, 108, 131], "justin": 30, "k": [3, 5, 9, 10, 11, 26, 27, 28, 30, 31, 32, 37, 44, 49, 50, 51, 52, 54, 57, 63, 68, 70, 93, 99, 103, 105, 108, 146], "kai": [2, 8, 73], "kaiser": 122, "kale": 31, "kamboh": 79, "kamphuisen": [5, 9, 10, 11], "katharina": 35, "kathrin": 153, "kc": 89, "keep": [3, 4, 10, 11, 16, 27, 28, 29, 30, 32, 77, 80, 153], "kei": [21, 26, 27, 28, 75, 76, 83, 106, 124, 125], "kemp": [5, 9, 10, 11], "kempfner": [11, 115, 132], "kept": [29, 32], "kernel": [3, 4, 11, 26, 27, 28, 29, 30, 32, 49, 50, 51, 52, 68, 89, 98, 99, 104, 109, 110, 112, 115], "kernel_length": 102, "kernel_s": [9, 10, 90, 100, 104, 112, 153], "kernel_unit_": 99, "keyboard": [72, 131], "keyword": [35, 36, 78, 117, 119, 120, 121, 122, 123, 129], "kfold": [4, 29, 30], "khan": 79, "khan2022": 79, "kiessner": 153, "kim": [49, 50, 51, 52, 68, 99], "kind": [14, 26], "kingma": 31, "know": [2, 3, 4, 26, 27], "known": [4, 72], "kolter": 112, "koltun": 112, "kosta": 113, "krell": [49, 50, 51, 52, 68], "kt": 89, "kumar": 31, "kv": [27, 28], "kwarg": [36, 72, 100, 121, 131, 137, 138, 139], "l": [5, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 89, 90, 93, 103, 105, 108, 115, 132, 146], "l2": [5, 89], "l_freq": [2, 3, 4, 5, 8, 9, 10, 16, 27, 28, 29, 30, 32, 119], "l_trans_bandwidth": 119, "lab": 77, "label": [2, 3, 5, 8, 9, 10, 11, 12, 16, 22, 26, 27, 28, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 114, 131, 134, 136, 140, 142, 146], "label_dict": [27, 28], "labelcolor": [2, 5, 8, 27, 28], "labelpad": 12, "labels": [2, 8, 12, 27, 28], "labels1": 5, "labels2": 5, "labram": [26, 153], "lack": 144, "lam": [47, 66], "lambda": [2, 3, 4, 5, 8, 9, 10, 12, 27, 28, 29, 30, 32, 72, 103, 131], "lampx": [18, 27], "lan": [9, 10, 11], "lanc": [101, 102], "languag": 91, "larg": [2, 5, 14, 16, 26, 27, 75, 91, 106, 125, 130], "larger": [2, 5, 27, 97, 98], "largest": [97, 98], "larson": 35, "last": [5, 22, 27, 31, 32, 46, 48, 54, 65, 70, 77, 80, 84, 85, 86, 89, 95, 119, 122, 124, 125, 153], "last_samp": 117, "last_target_onli": [2, 8, 83, 124, 126], "latenc": 104, "later": [5, 12, 22, 76, 77, 79, 81, 82, 93], "later_conv_nonlin": 93, "later_pool_mod": [14, 93], "later_pool_nonlin": 93, "latest": [147, 150, 151], "latter": [89, 90, 95, 99], "lauri": 35, "lawhern": [101, 102], "layer": [3, 4, 5, 9, 10, 11, 26, 27, 28, 29, 30, 31, 32, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 153], "layernorm": [10, 106], "lazi": [12, 15, 16, 23, 24, 82, 93, 108, 124, 152, 153], "lazy_metadata": [124, 153], "lazy_vs_eager_loading_result": 14, "lbfg": 5, "lead": [27, 29, 72, 123, 131], "leaderboard": [74, 77], "leakag": [29, 32], "learn": [1, 2, 3, 4, 6, 8, 9, 10, 11, 24, 25, 27, 28, 29, 31, 32, 33, 35, 37, 38, 39, 40, 44, 46, 47, 54, 57, 58, 59, 60, 63, 66, 70, 72, 75, 78, 80, 91, 92, 93, 97, 98, 100, 103, 104, 105, 106, 107, 108, 110, 111, 121, 125, 128, 130, 131, 133, 134, 144, 146, 148, 150, 152, 153], "learnabl": [29, 106], "learning_r": 30, "least": [12, 119, 133, 134, 143], "leav": [5, 29, 153], "leeb": [27, 28, 29, 30], "left": [12, 27, 28, 29, 40, 72, 74, 77, 131], "left_hand": [18, 21, 27, 28, 29, 30, 32], "leftward": 77, "legaci": [20, 119], "legend": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 31], "len": [5, 8, 9, 10, 11, 12, 14, 17, 20, 22, 29, 32, 129], "len_last_lay": [9, 10], "length": [8, 9, 11, 12, 14, 16, 26, 27, 30, 46, 47, 65, 66, 74, 75, 77, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 119, 122, 124, 125, 153], "less": [5, 27, 29, 32], "let": [3, 4, 22, 26], "level": [5, 9, 10, 22, 73, 107, 117, 119, 120, 122, 123, 153], "leverag": [5, 111], "lfilter": 119, "li": 106, "liang": 106, "lib": [2, 5, 10, 11, 18, 27, 31, 32], "librari": [2, 3, 4, 8, 24, 26, 28, 29, 30, 35, 73, 151], "licens": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 31], "light": [11, 146], "lightning_log": 32, "lightningmodul": 32, "like": [2, 8, 16, 26, 28, 29, 30, 32, 37, 42, 48, 49, 57, 62, 67, 68, 72, 84, 85, 86, 111, 119, 120, 131, 133, 151, 153], "likelihood": [27, 72], "limit": [2, 5, 8, 11, 12, 16, 26, 117], "lin": 107, "line": [2, 8, 14, 27, 28, 31, 74, 147], "line2d": [2, 8, 27, 28], "linear": [5, 9, 10, 26, 30, 47, 66, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 119, 122], "linear_model": 5, "linearattentiontransform": 91, "linearsegmentedcolormap": 146, "lines1": 5, "lines2": 5, "linestyl": [2, 8, 12, 27, 28], "linewidth": [2, 8, 27, 28], "link": [147, 153], "linspac": [4, 12], "lioi": 104, "list": [3, 5, 11, 14, 16, 21, 22, 26, 27, 28, 29, 31, 32, 35, 36, 40, 41, 48, 50, 51, 52, 59, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 123, 124, 125, 129, 130, 131, 141, 143, 146, 153], "list_of_d": [5, 75], "list_of_epoch": [19, 85], "lit_model": 32, "litmodul": 32, "littl": 77, "liu": [44, 63, 95], "ll": 22, "load": [12, 16, 17, 19, 22, 23, 73, 75, 78, 80, 82, 87, 93, 108, 121, 124, 125, 130, 152, 153], "load_concat_dataset": [18, 153], "load_data": [17, 19, 78], "load_eeg_onli": 80, "load_example_data": 14, "load_param": 5, "load_state_dict": 100, "loader": [3, 4, 5, 14, 32], "loc": [2, 8, 12, 26, 27, 28, 29], "local": [2, 5, 10, 11, 14, 18, 27, 31, 32, 73, 123, 147, 151], "locat": [27, 73], "locuslab": 112, "log": [22, 26, 27, 32, 72, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 112, 113, 115, 117, 119, 120, 122, 123, 124, 125, 131, 153], "log10": 3, "log_dict": 32, "log_every_n_step": 32, "log_reg": 5, "logger": 32, "logger_connector": 32, "logic": [8, 9, 10, 11, 28, 30, 32], "logist": 5, "logisticregress": 5, "logit": 89, "logno": 26, "logsoftmax": [26, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 153], "long": [8, 14, 29, 30, 77, 94], "longer": [5, 29, 32, 72, 131], "look": [11, 12, 17, 22, 26, 29, 73, 133], "loop": [5, 9, 10, 11, 14, 72, 131], "lope": 153, "lopez": [47, 66, 141], "loss": [2, 5, 8, 9, 10, 11, 14, 26, 27, 28, 31, 32, 72, 89, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 112, 113, 115, 131, 136, 140, 141], "loss_fn": 32, "loss_funct": [136, 140], "loss_val": 14, "lot": [9, 10, 11, 72, 131], "lott": [48, 67], "low": [2, 3, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 30, 32, 37, 57, 97, 98, 104, 119], "low_cut_hz": [2, 3, 4, 8, 27, 28, 29, 30, 32], "lower": [5, 9, 12, 29, 32, 37, 57, 119, 139], "lower_is_bett": [2, 5, 8, 9, 10, 11, 137, 138, 139], "lowest": 5, "lowpass": [5, 9, 10, 16], "lr": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 72, 131], "lr_schedul": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "lrschedul": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "lt": 4, "lu": 106, "luessi": 35, "luka": [12, 17, 18, 19, 20, 21, 22, 31, 35, 153], "m": [3, 4, 5, 9, 10, 11, 12, 16, 22, 26, 27, 28, 29, 30, 31, 32, 37, 40, 44, 49, 50, 51, 52, 54, 57, 59, 63, 68, 70, 79, 89, 90, 91, 92, 93, 101, 102, 103, 105, 107, 108, 110, 115, 119, 132, 146, 151], "m1": 123, "m2": 123, "m_": [127, 128], "m_t": [127, 128], "machin": [12, 14, 16, 29, 32, 35, 37, 40, 44, 54, 57, 59, 63, 70, 72, 131], "maciej": [2, 8, 153], "maciek": [2, 8], "macro": [5, 9, 10, 11], "made": [16, 18, 27, 99, 153], "mae": [37, 44, 54, 57, 63, 70], "magnitud": [42, 54], "mai": [2, 3, 4, 5, 8, 9, 10, 11, 16, 18, 19, 27, 28, 29, 32, 35, 46, 65, 72, 106, 131, 139, 144, 147], "main": [5, 97, 98, 99], "mainak": 35, "maintain": 77, "make": [2, 3, 4, 5, 8, 9, 11, 12, 27, 28, 29, 30, 32, 111, 119, 147, 153], "make_pipelin": 5, "make_standard_montag": [49, 68], "male": 12, "male_df": 12, "malici": 5, "manag": [8, 9, 10, 11, 28, 30, 31], "mandatori": 4, "mani": [2, 4, 5, 8, 16, 26, 27, 29, 32, 75], "manipul": 17, "manual": [26, 27, 29, 150], "map": [5, 9, 10, 11, 22, 26, 27, 28, 29, 30, 31, 35, 72, 86, 89, 93, 103, 104, 105, 108, 114, 124, 125, 131, 146], "map_loc": 5, "marco": 153, "mark": [5, 9, 10, 11], "marker": [2, 5, 8, 16, 27, 28], "martin": [35, 153], "martin2023": 90, "martincod": 90, "martinez": [97, 98], "martinwimpff": 90, "mask": [2, 5, 46, 54, 65, 70, 106, 140], "mask_len_sampl": [4, 54, 70], "mask_start_per_sampl": [54, 70], "maskencod": 153, "mass": 9, "master": 151, "mastoid": [74, 123], "match": [16, 18, 19, 26, 75, 89], "mathemat": 27, "mathrm": [127, 128], "matplotlib": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 31, 146, 153], "matric": [27, 28, 50, 51, 52, 72, 131], "matrix": [5, 9, 10, 11, 39, 40, 49, 59, 60, 68, 95, 104, 146, 153], "matter": [29, 32, 79, 81, 82], "matthieu": 153, "matti": 35, "max": [14, 16, 26, 29, 93, 101, 104, 108, 110, 113, 115, 119, 128], "max_degre": [49, 50, 51, 52], "max_delta_freq": [3, 43], "max_epoch": [5, 29, 32, 72, 131], "max_freq": 37, "max_it": 5, "max_mask_ratio": 46, "max_mem": 16, "max_norm_const": 89, "max_pool_s": 109, "max_pool_size_": 110, "maxim": [9, 10, 30, 37], "maximum": [43, 49, 50, 51, 52, 89, 124], "maxpool": [11, 115], "maxpool1d": [10, 11], "maxpool2d": 9, "mb": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 152], "md": 5, "mean": [2, 3, 4, 8, 10, 12, 14, 16, 19, 26, 27, 29, 30, 31, 32, 77, 93, 102, 106, 108, 122, 123, 127, 128, 131, 147], "mean_test_scor": [4, 30], "mean_train_scor": [4, 30], "meaning": 29, "measur": 16, "mechan": [90, 111, 153], "med": [11, 115, 132], "median": 11, "medicin": [49, 50, 51, 52, 68], "meg": [3, 4, 20, 27, 28, 29, 30, 32, 35, 119, 120, 148], "meg0111": [119, 120], "meg2623": [119, 120], "mehr": [27, 28, 29, 30], "mem": [6, 13, 16, 23, 33, 34, 152], "memor": [29, 32], "memori": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 72, 125, 131], "memory_profil": 16, "memory_usag": 16, "mention": [26, 29], "merg": [5, 9, 10, 11, 153], "messag": [12, 14, 22, 147], "messi": 29, "metadata": [19, 26, 75, 83, 124, 131, 132, 133, 134, 135], "method": [2, 4, 5, 8, 12, 16, 21, 26, 29, 31, 32, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 72, 73, 75, 76, 78, 83, 89, 90, 91, 92, 94, 95, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 122, 123, 131, 132, 133, 134, 136, 137, 138, 139, 140, 153], "methodolog": [90, 95, 104], "methodologi": 4, "metric": [2, 5, 9, 10, 11, 27, 28, 32, 146], "mi": [2, 8, 104], "mib": 16, "michael": 35, "micro": 12, "microcontinu": [5, 9, 10, 11], "microvolt": [5, 9, 10], "middl": 114, "mietu": [9, 10, 11], "might": [5, 14, 16, 26, 29, 30, 32, 125, 133], "miller": [2, 8, 27, 28, 29, 30, 73], "min": [5, 12, 29, 80, 119], "ming": 106, "mini": [72, 131], "minibatch": 14, "minim": [31, 47, 48, 66, 67, 92, 141, 147], "minimum": 119, "minimum_phas": 119, "minut": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 80], "mirror": [119, 122], "misc": [2, 4, 8, 83], "misclass": [27, 28], "misclassif": [27, 28], "mismatch": 153, "miss": [26, 89, 90, 91, 95, 97, 99, 101, 102, 103, 104, 105, 107, 109, 115, 153], "mistak": 147, "mix": [16, 18, 47, 48, 66, 141], "mixin": 100, "mixup": [141, 153], "mkdtemp": [12, 18], "ml": [29, 32], "mlp": 106, "mlp_ratio": 106, "mne": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 28, 30, 33, 49, 68, 73, 75, 76, 80, 83, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 131, 147, 152, 153], "mne_data": [16, 17, 19, 27, 73], "mne_datasets_": 73, "mne_datasets_bnci_path": 27, "mne_filter_kwarg": 129, "mnepreproc": 153, "mo": [2, 8], "moabb": [3, 4, 15, 18, 21, 23, 24, 27, 28, 29, 30, 32, 74, 75, 77, 78, 121, 130, 150, 151, 152, 153], "moabbdataset": [3, 4, 18, 20, 21, 27, 28, 29, 30, 32, 153], "mock": [12, 22], "mode": [2, 5, 24, 32, 72, 93, 106, 119, 122, 131, 139, 151, 153], "model": [12, 14, 21, 33, 35, 44, 63, 72, 75, 76, 78, 79, 121, 124, 125, 128, 130, 131, 136, 137, 138, 139, 140, 141, 142, 144, 145, 148, 152, 153], "model_build": [32, 33, 152], "model_evalu": [72, 131], "model_kind": 14, "model_nam": 31, "model_select": [4, 5, 8, 29, 30], "model_train": 14, "model_training_end": 14, "model_training_start": 14, "models_dict": [26, 72, 131, 153], "modelstatist": 100, "modif": [92, 106], "modifi": [3, 5, 10, 12, 42, 62, 72, 90, 100, 117, 118, 120, 121, 129, 131, 144], "modul": [2, 4, 5, 8, 9, 10, 11, 14, 26, 28, 30, 32, 72, 89, 90, 91, 95, 97, 98, 99, 100, 106, 111, 114, 131, 142, 144, 146, 150, 153], "module_": [3, 4, 9, 10, 11, 26, 72, 131], "module__": 26, "module__drop_prob": 30, "module__final_conv_length": 26, "modulelist": 10, "moham": [2, 8, 153], "mohammad": 153, "mohsenvand": [37, 44, 54, 57, 63, 70], "momentum": [10, 26, 93, 97, 98, 108], "monopolarli": 74, "montag": [50, 51, 52, 74, 81, 82, 153], "month": [12, 35], "moodi": [9, 10, 11], "more": [1, 2, 3, 4, 5, 8, 9, 10, 11, 16, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 46, 65, 72, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 123, 130, 131, 144, 151, 153], "moreau": [4, 153], "most": [3, 9, 10, 11, 14, 134, 147, 150], "mostli": 27, "motor": [2, 4, 8, 27, 28, 74, 77, 89, 90, 96, 99, 104, 153], "moustapha": [47, 66, 141], "move": [2, 3, 4, 8, 14, 16, 27, 28, 29, 30, 32, 73, 100, 127, 128, 153], "movement": [74, 77], "mrcnn": 111, "mse": 31, "mse_loss": [2, 31], "mseloss": [8, 131], "msg": [2, 31], "much": [5, 27, 72, 122, 131], "mueller": [27, 28, 29, 30], "muhammad": 89, "mult": [3, 4, 11, 26, 27, 28, 29, 32], "multi": 111, "multi_class": 5, "multiclass": 32, "multiindex": 133, "multimedia": [44, 63], "multimod": [5, 9, 10, 110], "multinomi": 5, "multipl": [2, 3, 4, 8, 9, 10, 14, 15, 16, 21, 23, 24, 27, 29, 30, 72, 75, 81, 99, 114, 115, 119, 123, 124, 129, 131, 142, 152, 153], "multipli": [3, 4, 5, 9, 10, 12, 27, 28, 29, 30, 32, 89, 97, 98], "multitap": 3, "multivari": [5, 9, 10, 110], "murad": 153, "muscular": 77, "must": [3, 4, 12, 14, 16, 18, 20, 21, 26, 29, 30, 83, 93, 108, 109, 114, 117, 121, 123, 124, 132, 150, 153], "mypi": 153, "m\u00fcller": [27, 28, 29, 30], "n": [14, 16, 22, 26, 27, 28, 29, 30, 32, 34, 37, 38, 39, 44, 47, 54, 57, 58, 60, 63, 66, 70, 89, 91, 101, 102, 104, 110, 141], "n1": [5, 9, 10, 11], "n2": [5, 9, 10, 11], "n3": [5, 9, 10, 11], "n4": 10, "n_attn_head": 111, "n_batch": [32, 136, 140], "n_block": 112, "n_chan": [2, 8, 11, 26, 27, 28, 30, 31, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 131], "n_channel": [3, 4, 5, 9, 10, 14, 17, 19, 22, 29, 31, 32, 47, 49, 66, 68, 84, 89, 91, 92, 94, 95, 104, 105, 107, 109, 110, 111, 112, 113, 114, 127, 128], "n_class": [2, 3, 4, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 32, 72, 89, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 113, 115, 131, 136, 140, 142], "n_codeword": 90, "n_compon": 5, "n_conv": [99, 104], "n_conv_ch": [5, 110], "n_conv_chan": 109, "n_epoch": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32], "n_exampl": [5, 134], "n_examples_test": 5, "n_examples_train": 5, "n_examples_valid": 5, "n_fake_ch": 31, "n_fake_chan": 31, "n_fake_rec": 31, "n_fake_target": 31, "n_filter": [97, 98, 99, 112], "n_filters_2": [14, 31, 93], "n_filters_3": [14, 31, 93], "n_filters_4": [14, 31, 93], "n_filters_spat": [14, 26, 31, 93, 108], "n_filters_tim": [14, 26, 31, 93, 95, 108], "n_first_filt": 103, "n_freq": 92, "n_group": 109, "n_in_chan": 112, "n_iter_i": 5, "n_job": [2, 3, 4, 5, 12, 14, 16, 27, 28, 29, 30, 32, 79, 81, 82, 87, 119, 122, 124, 125, 126, 130, 153], "n_layer": [91, 106], "n_layers_per_block": 103, "n_out_chan": 8, "n_output": [5, 9, 10, 11, 26, 31, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 131], "n_patch": 106, "n_predict": [72, 131, 136, 140, 142], "n_preds_per_input": [2, 27, 31], "n_rec": 16, "n_record": [14, 133], "n_repet": 16, "n_repetit": 14, "n_segment": [46, 48, 65, 67], "n_sequenc": [132, 135], "n_split": [4, 29, 30], "n_target": [72, 131, 142], "n_tce": 111, "n_temporal_filt": 90, "n_test": 29, "n_time": [3, 4, 5, 8, 9, 10, 11, 12, 14, 17, 19, 26, 27, 28, 29, 30, 31, 32, 47, 66, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 127, 128, 131, 136, 140], "n_time_filt": 115, "n_timestep": [95, 104], "n_train": 29, "n_train2": 29, "n_trial": [72, 84, 131, 142], "n_val": 29, "n_window": [9, 10, 11, 22, 89, 132, 135], "n_windows_strid": [9, 10, 11, 135], "nado": 30, "name": [0, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 20, 21, 22, 26, 29, 30, 32, 40, 72, 74, 75, 76, 78, 84, 87, 118, 119, 120, 121, 123, 131, 137, 138, 139, 153], "nan": [26, 140], "narayanan": [10, 153], "nativ": 11, "natur": [2, 8, 14, 73], "nbsp": 4, "nbviewer": 4, "ncol": 29, "ndarrai": [22, 49, 68, 72, 84, 122, 127, 128, 131, 135, 142, 143], "ndataset": 29, "ne": 115, "necessari": [4, 72, 123, 131], "need": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 26, 27, 28, 29, 32, 72, 89, 90, 95, 99, 131, 144, 149, 153], "neg": [5, 27, 31, 72, 134], "neg_root_mean_squared_error": 31, "neighbour": 27, "neighbourhood": 27, "nemati": [42, 62], "net": [5, 8, 26, 72, 111, 115, 131, 137, 138, 139], "network": [2, 4, 5, 7, 8, 10, 13, 14, 25, 26, 27, 28, 29, 32, 33, 35, 44, 63, 72, 75, 76, 80, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 124, 125, 130, 131, 133, 135, 136, 142, 144, 146, 152, 153], "neural": [2, 4, 5, 8, 9, 10, 11, 14, 25, 26, 27, 28, 29, 33, 35, 44, 46, 63, 75, 76, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 124, 136, 144, 146, 152, 153], "neural_token": 106, "neuralnet": [72, 131], "neuralnetclassifi": [9, 10, 11, 28, 30], "neuralnetregressor": 8, "neurip": [91, 97, 98], "neurologi": 107, "neuron": [5, 9, 10, 11], "neurophysiolog": 148, "neurosci": [27, 28, 29, 30, 35, 79], "neuroscientist": 148, "never": [29, 32], "new": [5, 9, 10, 11, 20, 40, 48, 59, 67, 72, 106, 117, 123, 131, 147, 151], "next": [3, 4, 5, 9, 10, 11, 12, 14, 16, 18, 22], "nice": 32, "night": [9, 10, 11], "nikol": [11, 115, 132], "nllloss": 72, "nmt": 153, "nn": [2, 3, 4, 5, 8, 9, 10, 11, 14, 26, 27, 28, 29, 30, 31, 32, 72, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 108, 109, 112, 113, 114, 115, 131, 142], "nnloss": 32, "no_grad": [5, 32], "nois": [31, 44, 63, 74], "noisi": [42, 62], "nolt": [27, 28, 29, 30], "nomenclatur": 40, "non": [3, 4, 11, 16, 22, 26, 27, 28, 29, 30, 32, 72, 77, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 112, 113, 115, 119, 131, 153], "none": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 22, 26, 27, 28, 29, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 144, 146, 153], "nonlinear": [5, 29, 72, 89, 103, 131], "noqa": [12, 22], "norm": [10, 89], "norm_ax": 146, "norm_lay": 106, "normal": [2, 5, 8, 9, 10, 28, 30, 106, 107, 109, 110, 133, 146, 153], "normalis": [26, 93, 104, 108], "notabl": [72, 131], "notat": [72, 131], "notch": 74, "notch_filt": 119, "note": [2, 3, 4, 5, 8, 9, 11, 17, 20, 26, 27, 28, 43, 61, 72, 73, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 120, 123, 131, 139, 144], "notebook": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32], "novel": [26, 46, 97, 98], "novemb": 91, "now": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 22, 26, 27, 28, 30, 123, 151, 153], "np": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 26, 29, 31, 32, 72, 127, 128, 131, 132, 133, 134, 135, 142], "npad": 122, "npj": [11, 115, 132], "nrepetit": 14, "nsplit": 29, "num_class": 32, "num_head": 106, "num_param": 100, "num_work": [5, 14, 32, 142], "number": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 22, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 63, 65, 67, 68, 70, 72, 75, 80, 81, 82, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 122, 124, 125, 129, 130, 131, 132, 133, 134, 135, 142, 143], "numer": 125, "numpi": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 17, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 68, 72, 119, 122, 131, 144, 146], "numpypreproc": 153, "nvidia": 150, "nyquist": 37, "o": [2, 4, 5, 8, 16, 27, 28, 37, 38, 39, 40, 44, 54, 57, 58, 59, 60, 63, 70, 134], "o1": [12, 129], "o1_4": 129, "o1_8": 129, "o2": 12, "obery": 5, "obery\u00e9": [9, 10, 11], "object": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 18, 19, 21, 27, 28, 29, 30, 31, 32, 41, 76, 79, 80, 81, 82, 83, 86, 117, 121, 124, 125, 130, 146, 153], "obtain": [2, 3, 4, 5, 8, 9, 11, 27, 28, 49, 68, 72, 76, 77, 83, 104, 131, 133], "odd": [11, 99, 115], "off": [26, 29, 30, 119], "offici": [89, 150], "offset": [3, 4, 27, 28, 29, 30, 32, 75, 86, 124, 125, 130, 153], "often": [4, 9, 10, 11, 28, 30], "old": [75, 130, 153], "omar": [11, 153], "omit": [9, 37], "on_batch_end": 138, "on_epoch_end": [137, 138, 139], "on_miss": [118, 124, 125], "on_train": [2, 5, 8, 9, 10, 11, 137, 138], "onc": [5, 16, 29, 119, 124, 134, 151], "one": [2, 4, 8, 9, 10, 11, 14, 16, 20, 26, 27, 29, 30, 32, 41, 46, 47, 54, 65, 70, 72, 74, 75, 89, 90, 95, 99, 100, 115, 123, 124, 125, 130, 131, 132, 133, 134, 147], "ones": [12, 26, 132, 153], "onli": [2, 4, 5, 8, 9, 10, 11, 12, 14, 18, 19, 21, 26, 27, 29, 30, 32, 41, 56, 72, 77, 80, 86, 91, 96, 97, 98, 99, 101, 102, 106, 117, 119, 120, 122, 123, 124, 125, 131, 140, 147, 151, 153], "onlin": [47, 66, 93, 97, 98, 103, 105, 108, 141, 146], "onset": [86, 125], "open": [5, 16, 18, 79, 147, 148, 150], "openli": [4, 5, 9, 10, 11], "oper": [2, 3, 4, 8, 16, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 64, 117, 122], "optim": [2, 3, 4, 5, 8, 9, 10, 11, 14, 27, 28, 29, 30, 31, 32, 72, 77, 131, 153], "optimizer__lr": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 72, 131], "optimizer__momentum": [72, 131], "optimizer__weight_decai": [2, 3, 4, 8, 27, 28, 29, 31], "optimizer_lr": 31, "optimizer_weight_decai": 31, "option": [5, 10, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 72, 75, 78, 86, 89, 90, 91, 92, 98, 99, 100, 104, 106, 107, 119, 122, 125, 131, 142, 146, 151, 153], "orang": [5, 12, 16], "order": [3, 4, 12, 21, 26, 40, 48, 50, 51, 52, 59, 72, 77, 79, 81, 82, 119, 123, 129, 131, 135, 153], "order_by_frequency_band": 129, "ordered_ch_nam": [40, 50, 51, 52], "org": [2, 4, 5, 8, 26, 27, 28, 29, 30, 35, 47, 66, 72, 73, 80, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 108, 109, 111, 112, 113, 115, 131, 141, 144, 146], "orient": 12, "origin": [3, 11, 17, 19, 26, 29, 47, 48, 49, 50, 51, 52, 54, 66, 68, 70, 75, 86, 90, 92, 95, 96, 97, 98, 99, 101, 102, 104, 106, 107, 119, 125, 129, 130], "oscillatori": [48, 67], "oskar": 153, "other": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 18, 26, 29, 30, 32, 56, 72, 77, 80, 89, 90, 91, 93, 94, 100, 103, 105, 106, 108, 109, 110, 111, 112, 115, 131], "otherwis": [2, 14, 27, 29, 31, 86, 125], "ou": 4, "ouahidi": [104, 153], "our": [2, 5, 8, 9, 10, 11, 12, 16, 20, 26, 27, 28, 30, 32, 77, 149], "out": [4, 8, 9, 10, 26, 37, 46, 54, 57, 65, 70, 72, 74, 91, 131, 132, 140, 147], "out_channel": 106, "out_featur": [9, 10], "out_path": 12, "outcom": [72, 131], "outlier": 12, "output": [2, 3, 4, 5, 11, 12, 14, 21, 26, 27, 28, 29, 30, 31, 32, 72, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 122, 123, 124, 125, 131], "output_s": [10, 100, 114], "output_shap": [100, 116], "outsid": [86, 125], "over": [4, 10, 16, 29, 31, 32, 42, 49, 50, 51, 52, 62, 68, 72, 131, 153], "overal": 14, "overfit": [2, 8, 9, 10, 11, 29], "overhead": [14, 125], "overlaid": [9, 10, 11], "overlap": [9, 10, 11, 46, 65, 84, 85, 86, 119, 124, 125], "overnight": 80, "overrid": [72, 73, 131], "overridden": [89, 90, 95, 99], "overwrit": [16, 18, 72, 75, 76, 79, 81, 82, 83, 88, 130, 131], "own": [2, 8, 27, 28, 29, 30, 32, 77, 147], "oz": 10, "p": [5, 9, 10, 27, 28, 29, 30, 31, 37, 44, 54, 57, 63, 70, 79, 101, 102, 110], "p2": 89, "p3": 12, "p4": 12, "p_drop": [4, 38, 58], "p_shuffl": [39, 60], "pa": 89, "pace": 77, "packag": [2, 5, 10, 11, 18, 27, 31, 32, 35, 149, 150], "pad": [2, 9, 10, 11, 27, 110, 119, 122, 153], "pad_and_select_predict": 2, "pad_size_": 110, "page": [4, 29, 32, 35, 147, 153], "paillard": 4, "pair": [5, 134], "panda": [2, 4, 5, 8, 9, 10, 11, 14, 16, 20, 21, 27, 28, 29, 30, 31, 72, 75, 76, 83, 86, 131], "paper": [4, 11, 35, 49, 50, 51, 52, 68, 89, 90, 95, 96, 97, 98, 99, 101, 102, 104, 111, 153], "paperswithcod": [74, 77], "paradigm": [4, 5, 72, 74, 104, 131, 142], "parallel": [12, 14, 15, 23, 24, 75, 80, 81, 82, 87, 97, 98, 99, 119, 121, 122, 124, 125, 130, 152, 153], "param": [3, 4, 5, 11, 26, 27, 28, 29, 30, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 54], "param_grid": [4, 29, 30], "param_iterator_train__transform": 4, "param_module__drop_prob": 30, "param_optimizer__lr": 30, "paramet": [2, 3, 4, 5, 8, 10, 14, 16, 17, 18, 19, 26, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 146, 153], "parent": [79, 81, 82], "parkkonen": 35, "pars": 12, "part": [2, 8, 16, 17, 19, 28, 29, 32, 38, 39, 46, 54, 58, 60, 65, 70, 95, 97, 98], "partial": 30, "particip": 79, "particular": 26, "pasdeloup": 104, "pass": [3, 4, 9, 10, 11, 16, 22, 26, 27, 28, 29, 32, 36, 41, 56, 72, 78, 89, 90, 91, 92, 94, 95, 99, 104, 105, 107, 109, 110, 111, 112, 113, 117, 119, 120, 122, 123, 131, 136, 139, 140, 153], "passband": 16, "past": 147, "patch": [29, 106], "patch_siz": 106, "patchemb": 106, "patchembed": 95, "patchfrequencyembed": 91, "path": [12, 14, 17, 18, 19, 22, 32, 73, 75, 79, 81, 82, 87, 88], "pathlib": 87, "patholog": [14, 18, 79, 82], "pathologi": 30, "patienc": 5, "patient": [12, 73], "pattern": 107, "paz": [47, 66, 141], "pazo": 109, "pc": 89, "pca": 5, "pch": [9, 10, 11], "pd": [2, 4, 5, 8, 9, 10, 11, 14, 16, 27, 28, 29, 30, 31, 75, 76, 83, 132, 133, 134, 135], "pdf": 73, "peak": [16, 124, 125], "pearson": 8, "pearson_r_scor": 8, "penalti": 5, "peng": [9, 10, 11, 44, 63, 106], "peopl": 113, "per": [2, 4, 5, 8, 9, 10, 11, 27, 46, 47, 54, 65, 70, 74, 77, 80, 99, 104, 107, 113, 123, 153], "percent": [27, 28], "percentag": 113, "percept": 32, "perez": 96, "perform": [2, 4, 8, 9, 10, 11, 26, 27, 28, 29, 30, 32, 74, 75, 77, 89, 90, 95, 99, 104, 111, 127, 128, 153], "period": [31, 107], "permut": [39, 40, 47, 59, 60, 66], "persist": 147, "perslev": [11, 115, 132], "perslev2021": 132, "perturb": [42, 62], "phase": [16, 42, 62, 106, 119, 122], "phase_freq": 4, "phase_noise_magnitud": [4, 42, 62], "phenomenon": 4, "physic": 89, "physician": [81, 82], "physiobank": [5, 9, 10, 11], "physiolog": [5, 9, 10, 11], "physionet": [5, 7, 13, 16, 24, 75, 80, 100, 110, 111, 114, 115, 121, 125, 130, 133, 135, 144, 146, 152, 153], "physionet_path": [17, 19], "physiotoolkit": [5, 9, 10, 11], "pi": [31, 42, 62], "pick": [2, 8, 10, 12, 19, 20, 119, 124, 125, 126, 153], "pick_channel": [12, 118, 121], "pick_typ": [2, 3, 4, 8, 20, 27, 28, 29, 30, 32, 118], "pickl": 5, "pickleabl": [72, 131], "piconepress": [12, 14, 81, 82], "pierr": [26, 153], "pietquin": [38, 39, 58, 60], "pin": 14, "pin_memori": 14, "pip": [32, 149, 150, 151, 153], "pipelin": [2, 5, 8, 29, 32], "pivot": 30, "pivot_t": 30, "pj": [11, 115, 132], "place": [20, 31, 100, 117, 129], "playbook": 30, "pleas": [2, 4, 5, 8, 11, 12, 22, 26, 27, 32, 73, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 108, 109, 112, 113, 115, 129, 151, 153], "plot": [3, 5, 12, 14, 16, 29, 31, 153], "plot_basic_training_epoch": [26, 33, 152], "plot_bcic_iv_2a_moabb_crop": [27, 33, 152], "plot_bcic_iv_2a_moabb_tri": [28, 33, 152], "plot_bcic_iv_4_ecog_crop": [2, 6, 152], "plot_bcic_iv_4_ecog_tri": [8, 13, 152], "plot_benchmark_preprocess": [16, 23, 152], "plot_confusion_matrix": [9, 10, 11, 27, 28, 153], "plot_custom_dataset_exampl": [17, 23, 152], "plot_data_augment": [3, 6, 152], "plot_data_augmentation_search": [4, 6, 152], "plot_how_train_test_and_tun": [29, 33, 152], "plot_hyperparameter_tuning_with_scikit": [30, 33, 152], "plot_k_fold": 29, "plot_load_save_dataset": [18, 23, 152], "plot_mne_dataset_exampl": [19, 23, 152], "plot_moabb_dataset_exampl": [20, 23, 152], "plot_psd": 3, "plot_regress": [31, 33, 152], "plot_relative_posit": [5, 6, 152], "plot_simple_train_test": 29, "plot_sleep_staging_chambon2018": [9, 13, 152], "plot_sleep_staging_eldele2021": [10, 13, 152], "plot_sleep_staging_usleep": [11, 13, 152], "plot_split_dataset": [21, 23, 152], "plot_train_in_pure_pytorch_and_pytorch_lightn": [32, 33, 152], "plot_train_valid_test": 29, "plot_tuh_discrete_multitarget": [22, 23, 152], "plot_tuh_eeg_corpu": [12, 13, 152], "plt": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 31], "plt_histogram": 12, "pmlr": [37, 44, 54, 57, 63, 70], "point": [19, 20, 26, 74, 123, 127, 128], "polici": [38, 39, 58, 60], "poly1d": 31, "polyfit": 31, "polyphas": 122, "pool": [3, 4, 26, 27, 28, 29, 32, 89, 93, 95, 97, 98, 100, 104, 106, 108, 110, 113, 115], "pool_length": 90, "pool_length_inp": 90, "pool_mod": [26, 101, 102, 108], "pool_nonlin": [26, 108], "pool_nonlin_exp": [3, 4, 26, 27, 28, 29, 32], "pool_strid": 90, "pool_stride_inp": 90, "pool_time_length": [14, 26, 93, 95, 108], "pool_time_strid": [14, 26, 93, 95, 108], "pooling_s": [97, 98], "popul": [72, 131, 153], "popular": 26, "portion": 147, "posit": [1, 6, 24, 27, 37, 46, 49, 50, 51, 52, 54, 57, 65, 68, 70, 75, 80, 100, 106, 110, 121, 125, 130, 133, 134, 143, 144, 152], "positionwisefeedforward": 111, "possibl": [3, 4, 5, 11, 12, 16, 18, 26, 72, 74, 124, 131, 144, 147, 153], "potenti": [14, 16, 32, 150], "power": [3, 5, 30, 119, 122], "pp": [10, 37, 44, 49, 50, 51, 52, 54, 57, 63, 68, 70, 95, 111], "pre": [26, 84, 91, 106, 123, 153], "preced": 8, "precis": [5, 9, 10, 11, 146], "pred": [2, 8, 32, 136, 140, 141, 143], "predefin": [2, 8, 28, 30], "predefined_split": [2, 3, 5, 8, 9, 10, 11, 27, 28, 29, 31], "predict": [2, 4, 5, 8, 9, 10, 11, 27, 28, 31, 72, 76, 79, 100, 104, 114, 131, 136, 137, 138, 139, 140, 141, 142, 143, 153], "predict_nonlinear": [72, 131], "predict_proba": [72, 131, 153], "predict_tri": [2, 72, 131, 153], "preds_per_tri": 143, "preds_test": [2, 8], "preds_train": [2, 8], "preds_valid": [2, 8], "prefer": [72, 131], "prefix": [26, 72, 131], "prefixes_": [72, 131], "preload": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 27, 28, 29, 30, 31, 32, 79, 80, 81, 82, 86, 87, 123, 124, 125, 126, 130, 153], "prepar": [14, 16, 20, 32], "prepare_data": 16, "prepocess": [2, 8, 28, 30], "preprint": [5, 31, 37, 38, 39, 40, 42, 44, 54, 57, 58, 59, 60, 62, 63, 70, 90, 101, 102, 104, 112, 134], "preprocess": [14, 15, 18, 19, 20, 21, 22, 23, 24, 26, 31, 75, 80, 148, 152, 153], "preprocessor": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 18, 20, 27, 28, 29, 30, 32, 130, 153], "presampl": [5, 134], "present": [4, 29, 32, 74, 77, 91, 118], "preserv": [48, 67, 79, 81, 82], "pretext": 4, "pretti": [14, 147], "previou": [32, 153], "previous": [29, 32], "print": [2, 4, 5, 8, 9, 10, 11, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 72, 131, 147], "print_batch_stat": 32, "print_log": [72, 131], "prior": [5, 100], "prob": 4, "proba_drop": 38, "probabl": [3, 4, 26, 30, 32, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 72, 89, 91, 93, 96, 108, 112, 113, 131], "problem": [5, 26, 42, 62, 147, 150], "proc": 16, "proceed": [48, 67], "process": [2, 4, 5, 7, 8, 13, 14, 15, 16, 22, 24, 29, 30, 48, 67, 75, 81, 91, 121, 124, 130, 152, 153], "process_pipelin": 78, "processor": [29, 30], "produc": [27, 29, 32, 111], "product": [14, 16], "progress_bar": 32, "project": [5, 12, 14, 19, 26, 81, 82, 123], "projector": 123, "prompt": [74, 147], "propag": 153, "proper": [2, 8], "properli": [29, 119, 122, 123], "properti": [5, 75, 153], "proport": [86, 97, 98, 125], "propos": [4, 38, 39, 42, 48, 54, 58, 60, 62, 70, 91, 99, 153], "protonmail": [3, 20], "provid": [2, 8, 9, 10, 11, 26, 28, 30, 32, 35, 72, 74, 75, 76, 79, 81, 82, 91, 114, 119, 120, 121, 130, 131, 147], "provind": 4, "proxim": 77, "psd": 3, "psd_array_multitap": 3, "psds_mean": 3, "pseudo": 77, "psg": 16, "pt": [5, 89], "publish": 26, "pure": [2, 5, 8, 28, 30, 153], "purpos": [3, 14, 16, 32], "push": [27, 72, 131], "putz": [27, 28, 29, 30], "py": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 152, 153], "pypi": 149, "pyplot": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 31], "pyproject": 153, "python": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 35, 117, 144, 148, 149, 151, 153], "python3": [2, 5, 10, 11, 18, 27, 31, 32], "pythonhashse": 144, "pytorch": [2, 5, 8, 14, 22, 24, 25, 26, 27, 28, 30, 33, 72, 75, 78, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 112, 113, 115, 121, 125, 128, 130, 131, 142, 144, 150, 152, 153], "pz": [10, 12], "q": 95, "qixiang": 106, "qk_norm": 106, "qk_scale": 106, "qkv_bia": 106, "quadrat": [49, 50, 51, 52, 68], "quantiti": 5, "quantiz": 106, "queri": 106, "quick": [5, 133], "quickli": 29, "quit": [26, 29], "r": [3, 5, 9, 10, 11, 26, 27, 28, 29, 30, 31, 37, 44, 54, 57, 63, 70, 79, 93, 97, 98, 101, 102, 103, 105, 108, 146], "r15fdf33b022f": 97, "r2": [2, 8], "r2_score": 2, "r2_train": 2, "r2_valid": 2, "r37c4761d4e92": 98, "r382d436f3223": 74, "r5661533ddc63": 104, "r5e478952091a": 77, "raa3392861949": 46, "rais": [4, 14, 26, 29, 30, 31, 72, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 125, 130, 153], "rand_indic": [48, 67], "randint": [26, 31], "randn": 26, "random": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 30, 31, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 77, 132, 133, 134, 135, 139, 144, 153], "random_st": [4, 5, 8, 30, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 132, 133, 134, 135], "randomli": [3, 5, 27, 37, 38, 39, 44, 46, 48, 54, 58, 60, 63, 135], "randomst": [132, 133, 134, 135], "rang": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 26, 27, 28, 29, 31, 32, 42, 62, 73, 104, 129, 146], "rank_test_scor": [4, 29, 30], "rate": [2, 5, 14, 27, 28, 29, 30, 31, 32, 72, 95, 97, 98, 106, 107, 109, 110, 111, 115, 131, 153], "rather": [9, 10], "ratio": [29, 46, 106], "ravel": 31, "raw": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 75, 76, 79, 80, 81, 82, 86, 94, 117, 118, 119, 120, 121, 123, 124, 125, 129, 148, 153], "raw_or_epoch": 121, "raw_preproc_kwarg": 75, "rawarrai": [17, 19, 31, 86], "rbf": [49, 50, 51, 52, 68], "re": [12, 21, 72, 123, 131, 147], "re49696d5b28b": 65, "reach": [5, 9, 10, 32], "read": [12, 14, 16, 17, 18, 19, 79, 81, 82, 87, 125], "read_raw_edf": [17, 19], "readabl": [29, 32, 119], "readi": [12, 16, 17, 18, 19, 31], "readthedoc": [18, 27], "real": 32, "realiz": 153, "realli": 29, "rearrang": [3, 4, 26, 27, 28, 29, 32, 153], "reason": [5, 10, 29, 32, 72, 131, 139], "rec_ind": [132, 133], "recal": [5, 9, 10, 11], "recalibr": 111, "receiv": [5, 95], "recent": [4, 26, 147], "recept": [2, 27, 72, 131, 142], "recip": [89, 90, 95, 99], "reciproc": 119, "recod": 12, "recoding_id": 153, "recogn": [29, 32], "recognit": [44, 63], "recombin": 95, "recommend": [5, 9, 11, 16, 29, 30, 35, 95, 104, 150, 151], "recomput": 139, "reconstruct": [48, 67, 119], "record": [2, 4, 8, 9, 10, 11, 14, 16, 21, 22, 26, 31, 73, 74, 77, 79, 80, 81, 82, 86, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 123, 124, 125, 132, 133, 134, 153], "recording_id": [5, 9, 10, 11, 12, 14, 16, 22, 79, 80, 81, 82], "recordingsampl": [132, 134, 135], "recurr": 112, "red": [2, 8, 27, 28], "reddi": 31, "reduc": [5, 10, 14, 16, 80, 125], "reduction_r": 90, "redund": 27, "ref_channel": [12, 123], "refactor": 153, "refer": [12, 35, 37, 38, 39, 40, 42, 44, 46, 47, 48, 49, 50, 51, 52, 54, 57, 58, 59, 60, 62, 63, 66, 67, 68, 70, 73, 74, 79, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 123, 129, 132, 134, 141, 146], "referenc": 123, "refit": [4, 29, 30], "reflect": [119, 122], "reflect_limit": [119, 122], "regard": [12, 104], "regardless": [72, 131], "regim": 5, "region": [12, 119], "regist": [89, 90, 95, 99], "regress": [2, 5, 8, 24, 25, 30, 33, 75, 76, 93, 100, 108, 116, 124, 131, 136, 144, 152, 153], "regressor": [2, 8, 26, 31, 153], "regular": [5, 127, 128], "rehabilit": [5, 9, 10, 46, 94, 95, 97, 98, 110, 111], "reimplement": [96, 97, 98, 99, 101, 102], "reiniti": [29, 32], "reject": [10, 19, 124, 125, 126], "rel": [1, 6, 24, 29, 30, 75, 80, 100, 110, 121, 125, 130, 133, 134, 144, 152], "relat": [4, 5, 26, 27, 35, 77, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 131, 153], "relativepositioningdataset": 5, "relativepositioningsampl": 5, "relax": 77, "releas": [5, 97, 147, 151], "relev": [5, 29, 35, 72, 131], "reliabl": [29, 32], "reload": [12, 16, 130], "relu": [9, 10, 99, 104], "rem": [9, 10, 11], "remain": [16, 29, 32], "rememb": [4, 29, 32], "remi": 153, "remov": [2, 3, 4, 5, 8, 9, 11, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 123, 143, 153], "renam": [3, 4, 18, 20, 21, 29, 30, 81, 82, 153], "rename_channel": [12, 81, 82], "render": 4, "reorder": [38, 39, 58, 60], "reorder_channel": 118, "repeat": [14, 147], "repetit": [14, 16, 77], "replac": [29, 46, 54, 65, 70, 153], "replic": 147, "repo": 151, "report": [5, 9, 10, 11, 14, 29, 32, 81, 82, 89, 147], "report_messag": 4, "repositori": [104, 149], "repres": [21, 50, 51, 52, 95, 104], "represent": [4, 37, 44, 47, 54, 57, 63, 66, 70, 91, 92, 106, 153], "reproduc": [2, 3, 4, 5, 8, 9, 10, 11, 24, 27, 28, 30, 144, 153], "request": [18, 27, 119, 123, 147], "requir": [5, 11, 12, 14, 16, 17, 22, 56, 72, 77, 83, 131, 153], "rerun": 4, "res_channel": 92, "resampl": [5, 12, 14, 18, 20, 80, 119, 153], "resample_poli": 122, "resampling_freq": 104, "rescal": [29, 30], "research": [5, 9, 10, 11, 30, 35, 148], "reset": 106, "reset_classifi": 106, "residu": [89, 92, 103, 106], "resili": [11, 115, 132], "resolut": 111, "resolv": [72, 131], "resourc": [5, 7, 9, 10, 11, 13, 16, 24, 75, 81, 121, 124, 130, 152, 153], "resp": 56, "respect": [4, 5, 30, 122], "respir": 80, "respons": [8, 9, 10, 11, 28, 30], "rest": [77, 123], "restor": [32, 72], "result": [3, 12, 14, 16, 29, 32, 72, 86, 122, 125, 131, 139, 144, 147], "results_column": [2, 8, 27, 28], "results_df": 14, "retain": 119, "return": [2, 5, 8, 9, 10, 11, 12, 14, 17, 19, 21, 29, 30, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 91, 92, 94, 95, 100, 104, 106, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 139, 141, 142, 143, 146, 153], "return_all_token": 106, "return_feat": [9, 10, 94, 109, 110, 111], "return_featur": [91, 95, 104], "return_pair": 5, "return_patch_token": 106, "return_target": [2, 72, 131, 142], "return_train_scor": [4, 29, 30], "reus": [5, 9, 11], "review": [27, 28, 29, 30], "rg": [9, 10, 11], "rhythmic": 107, "right": [2, 4, 8, 12, 27, 28, 29, 32, 40, 74, 77, 151], "right_hand": [18, 21, 27, 28, 29, 30, 32], "rightward": 77, "rippl": 16, "risk": [29, 47, 66, 141], "rivero": 109, "rmse": 31, "robin": [35, 153], "robust": 99, "robust_scal": 11, "rodrigu": 153, "roman": 35, "rommel": [3, 4, 153], "room": [27, 28], "root": [31, 48, 151], "rot": 4, "rotat": [29, 49, 50, 51, 52, 68, 146], "rotate_col_label": 146, "rotate_precis": 146, "rotate_row_label": 146, "rough": 29, "roughli": [2, 3, 4, 5, 8, 9, 11, 27, 28, 77], "round": [2, 8], "row": [14, 22, 40, 75, 100, 146], "row_set": 100, "rp": 5, "rudzicz": 113, "rule": [27, 72, 131], "run": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 72, 74, 77, 86, 89, 90, 95, 99, 109, 119, 121, 122, 125, 131, 133, 144, 147, 151, 153], "run_0": 133, "run_train": 14, "runner": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32], "runtim": 27, "runtimewarn": 27, "s0": 22, "s001": 22, "s004": 22, "s00500": 109, "s022": [17, 19], "s022r05": [17, 19], "s022r06": [17, 19], "s022r09": [17, 19], "s022r10": [17, 19], "s022r13": [17, 19], "s022r14": [17, 19], "s41562": [2, 8, 73], "s_growth": 113, "saeed": [38, 39, 58, 60], "safe_log": 108, "sake": 14, "salami": 96, "salami2022": 96, "same": [2, 3, 4, 5, 8, 9, 10, 11, 14, 18, 21, 27, 28, 29, 30, 32, 43, 54, 61, 70, 72, 77, 80, 111, 119, 122, 131, 134], "same_rec_neg": [5, 134], "sampl": [2, 3, 4, 5, 8, 9, 10, 14, 16, 17, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 42, 43, 47, 48, 49, 50, 51, 52, 54, 57, 60, 61, 62, 70, 72, 74, 76, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 124, 125, 132, 133, 134, 135, 141, 147, 153], "sample_class": 132, "sample_record": 133, "sample_window": 133, "sampler": 153, "sanjiv": 31, "santamaria": [97, 98], "santamaria2020": [97, 98], "sara": [31, 153], "sashank": 31, "satyen": 31, "save": [2, 3, 4, 5, 8, 9, 10, 12, 14, 15, 16, 23, 24, 27, 28, 29, 30, 32, 72, 75, 78, 87, 121, 125, 130, 131, 152, 153], "save_dir": [12, 16, 130], "savgol_filt": 119, "sc4001e0": 16, "sc4011e0": 16, "scalar": 139, "scale": [5, 9, 10, 11, 12, 16, 95, 97, 98, 99, 106, 153], "scales_samples_": [97, 98], "scalp": 79, "scanno": 26, "scatter": [5, 16, 31], "scenario": [16, 125], "schalk": 77, "schedul": [31, 32], "scheme": [29, 32, 123, 153], "schirrmeist": [26, 27, 28, 29, 30, 31, 35, 77, 93, 103, 105, 108, 146, 153], "schirrmeister2017": [26, 77, 93, 103, 105, 108], "schwabed": [42, 62], "scientif": 35, "scikit": [5, 24, 25, 33, 72, 75, 78, 100, 108, 121, 125, 128, 130, 131, 144, 146, 152, 153], "scipi": [49, 50, 51, 52, 68, 72, 119, 122, 131], "score": [2, 4, 5, 9, 10, 11, 29, 30, 72, 94, 109, 131, 137, 138, 139, 153], "scorer": 139, "screen": 74, "script": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 144], "se": 10, "seaborn": [14, 29, 30], "seamlessli": 32, "search": [1, 6, 24, 29, 30, 36, 38, 42, 54, 56, 72, 75, 78, 100, 108, 121, 125, 128, 130, 131, 144, 147, 152, 153], "search_result": [4, 29, 30], "searchwork": [2, 8, 73], "sec": [16, 17, 18, 19, 31], "second": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 30, 31, 32, 40, 74, 77, 79, 81, 82, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117], "second_kernel_s": 101, "section": [12, 22, 77, 150], "secur": 5, "sedlar": [31, 153], "see": [2, 3, 4, 5, 8, 9, 10, 11, 16, 18, 20, 21, 24, 26, 27, 28, 29, 30, 32, 47, 48, 66, 67, 72, 73, 74, 77, 80, 82, 83, 96, 100, 101, 102, 105, 112, 113, 117, 118, 119, 120, 122, 123, 124, 125, 130, 131, 132, 134, 135, 141, 144, 147, 150, 151], "seed": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 63, 144], "seeg": 123, "segment": [12, 16, 29, 32, 46, 48, 65, 67, 95, 106, 119], "segment_length": [46, 65], "segmentationreconstruct": 153, "segmentpatch": 106, "seizur": 107, "select": [2, 4, 8, 9, 16, 20, 27, 28, 29, 30, 32, 37, 77, 106, 123, 132], "select_by_channel": 12, "select_by_dur": 12, "self": [1, 4, 6, 11, 24, 32, 72, 75, 80, 89, 92, 95, 100, 110, 121, 125, 130, 131, 133, 134, 135, 144, 147, 152, 153], "self_attn": 10, "send": [2, 3, 4, 8, 9, 10, 11, 16, 27, 28, 29, 30, 32], "sensit": [30, 74, 146], "sensor": [3, 4, 27, 28, 29, 30, 32, 40, 49, 50, 51, 52, 68, 77], "sensors_positions_matrix": [49, 68], "sent": [72, 131], "separ": [5, 29, 32, 74, 104, 119, 125, 134], "seq2seq": 11, "seq_len": 114, "sequenc": [36, 41, 72, 106, 112, 114, 131, 132, 135, 142, 150, 153], "sequencesampl": [9, 10, 11, 153], "sequenti": [3, 4, 5, 9, 10, 11, 16, 26, 27, 28, 29, 30, 32, 77, 100], "seri": [2, 4, 5, 8, 9, 10, 29, 30, 31, 72, 76, 83, 86, 92, 104, 109, 110, 131, 133, 137, 153], "serial": [5, 12, 15, 18, 23, 24, 75, 80, 121, 124, 130, 152, 153], "serv": [14, 74, 76, 83], "session": [2, 4, 8, 12, 18, 20, 21, 27, 28, 29, 30, 31, 32, 74, 77, 133], "session_t": 133, "set": [2, 4, 8, 9, 10, 11, 12, 14, 16, 17, 19, 22, 26, 27, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 66, 72, 74, 75, 77, 81, 82, 93, 97, 98, 99, 108, 109, 110, 113, 115, 117, 120, 123, 124, 125, 130, 131, 144, 150, 153], "set_bipolar_refer": 123, "set_config": 27, "set_descript": [22, 32, 75, 76, 83], "set_eeg_refer": [12, 123], "set_log_level": [2, 8, 12, 14, 22], "set_montag": [12, 81, 82], "set_num_thread": 14, "set_param": [11, 72, 131], "set_random_se": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 153], "set_titl": [2, 8, 16, 31], "set_xlabel": [2, 4, 5, 8, 9, 10, 11, 16, 27, 28, 31], "set_xlim": 29, "set_ylabel": [2, 5, 8, 9, 10, 11, 16, 27, 28, 31], "set_ylim": [4, 27, 28], "seta": 12, "setb": 12, "seteegrefer": 153, "setter": 5, "setup": [2, 4, 8, 27, 149], "seven": 109, "seventh": 91, "sever": [4, 12, 18, 24, 90, 124, 125, 148], "sex": 5, "sfreq": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 32, 37, 43, 57, 61, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 131, 153], "sgd": [72, 131], "shafait": 79, "shallow": [2, 8, 14, 26, 27, 28, 31, 108], "shallowconvnet": [26, 31], "shallowfbcsp": 153, "shallowfbcspnet": [2, 3, 4, 8, 14, 26, 27, 28, 29, 30, 31, 32], "shallu": 30, "shape": [2, 3, 4, 5, 8, 9, 10, 11, 17, 20, 22, 26, 27, 28, 29, 30, 32, 49, 68, 72, 92, 94, 95, 100, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 135, 136, 140], "share": [2, 8, 14, 27, 28], "sharex": [9, 10, 11], "shell": 147, "shh": 111, "shift": [3, 29, 43, 61], "short": [11, 29, 32, 74, 92, 94], "short_ch_nam": 12, "shorter": [11, 153], "shortest": 119, "should": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 20, 26, 27, 28, 30, 37, 40, 46, 49, 54, 57, 65, 68, 70, 72, 73, 75, 76, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 120, 122, 123, 131, 139, 147, 151], "show": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 77, 100, 153], "show_titl": 12, "showcas": [12, 29, 32], "shown": [4, 5, 9, 11, 16, 29, 32, 74, 77], "shrink": 115, "shtml": [12, 81, 82], "shuffl": [4, 8, 14, 29, 30, 32, 39, 47, 48, 60, 67, 72, 131, 153], "siames": 5, "side": [40, 119], "sigmoid": [10, 72, 131], "sign": [53, 69], "sign_flip": 3, "signal": [2, 3, 4, 5, 8, 9, 10, 11, 12, 18, 20, 26, 28, 29, 30, 31, 36, 37, 38, 39, 42, 43, 46, 48, 49, 50, 51, 52, 54, 57, 58, 60, 61, 62, 65, 67, 68, 70, 74, 76, 80, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 122, 123, 124, 125, 129, 131, 134, 153], "signatur": 139, "signflip": 3, "signific": 30, "significantli": 16, "silenc": 32, "silent": [89, 90, 95, 99], "similar": [5, 27, 117], "similarli": [21, 32], "simon": [3, 20, 153], "simonbrandt": [3, 20], "simpl": [5, 12, 16, 24, 25, 32, 33, 91, 100, 104, 108, 152], "simpleconv": 104, "simpler": 11, "simplest": 16, "simpli": [22, 26], "simplifi": [9, 10, 133, 153], "simul": 26, "simultan": [27, 97, 98], "sin": 31, "sinc": [5, 9, 10, 11, 12, 22, 26, 30, 72, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 131, 147], "singl": [5, 9, 10, 27, 30, 41, 42, 43, 61, 62, 72, 94, 104, 111, 123, 131, 142, 153], "sinusoid": 31, "sit": 74, "site": [2, 5, 10, 11, 18, 27, 31, 32], "situat": [72, 131], "size": [2, 3, 4, 5, 11, 14, 16, 26, 27, 28, 29, 30, 31, 32, 37, 46, 54, 57, 65, 70, 72, 84, 85, 86, 89, 91, 92, 95, 97, 98, 99, 100, 104, 106, 109, 110, 112, 113, 115, 116, 119, 122, 124, 125, 131, 134, 136, 140, 142, 146], "skip": [18, 22, 29, 32, 99, 115], "skip_by_annot": 119, "sklearn": [2, 4, 5, 8, 9, 10, 11, 16, 27, 28, 29, 30, 31, 72, 131, 139, 146, 153], "skorch": [2, 3, 4, 5, 8, 9, 10, 11, 17, 26, 27, 28, 29, 30, 31, 72, 84, 85, 86, 131, 153], "sleep": [7, 13, 16, 24, 30, 42, 62, 75, 80, 91, 92, 94, 100, 109, 110, 111, 114, 115, 121, 125, 130, 132, 133, 135, 144, 146, 152, 153], "sleep_physionet": [5, 9, 10, 11], "sleepdata": 111, "sleepphysionet": [5, 9, 10, 11, 16, 153], "sleepstagerblanco2020": [26, 153], "sleepstagerchambon2018": [5, 9, 26], "sleepstagereldele2021": [10, 26, 153], "slice": [30, 119, 120, 124, 125], "slicedata": 4, "slicedataset": [4, 29, 30], "slid": 89, "slide": [14, 31, 89, 124], "slightli": 139, "sliwowski": [2, 8], "slow": [5, 9, 10, 11, 16, 144, 153], "slower": [10, 14, 19, 125], "small": [11, 12, 27, 29, 147], "smaller": [5, 27, 32, 86, 97, 98, 125], "smallest": 147, "smoothli": [54, 70], "smoothtimemask": 4, "sn": [14, 29, 30], "snippet": 147, "snyder": [42, 62], "so": [2, 5, 8, 9, 10, 11, 14, 16, 18, 26, 27, 28, 29, 30, 32, 37, 40, 72, 115, 124, 129, 131, 153], "societi": [49, 50, 51, 52, 68], "soft": 109, "softmax": [26, 27, 31, 72, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 112, 113, 115, 131], "softwar": [35, 147], "solon": [101, 102], "solut": [16, 123], "solv": [144, 153], "solver": 5, "some": [2, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 26, 27, 28, 30, 35, 72, 75, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 123, 131, 144], "song": [95, 153], "song2022": 95, "sort": [12, 27, 28, 153], "sound": [29, 32], "sourc": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149], "sourceestim": 119, "space": [5, 16], "span": 79, "sparcnet": [26, 153], "spars": [72, 131], "spat_lay": 113, "spatial": [4, 26, 42, 62, 90, 93, 108, 115, 153], "spatial_conv": 9, "spatial_expans": 90, "speak": [9, 11, 14], "special": [72, 131], "specif": [5, 9, 10, 11, 16, 18, 30, 72, 87, 109, 117, 131, 133, 149], "specifi": [2, 3, 5, 8, 9, 10, 11, 12, 18, 21, 22, 26, 27, 28, 29, 72, 73, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 123, 130, 131], "spectral": [3, 92], "speed": [10, 11, 16, 153], "speedup": 14, "spent": [9, 10, 11], "spheric": [49, 50, 51, 52, 68], "spherical_splin": [49, 50, 51, 52, 68], "sphinx": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32], "spline": [49, 50, 51, 52, 68], "split": [12, 15, 20, 23, 24, 26, 31, 48, 72, 75, 78, 93, 108, 125, 131, 152, 153], "split_first_lay": [14, 26, 93, 103, 108], "split_id": [5, 9, 10, 11, 12, 75, 153], "splitter": 29, "spoclab": 113, "springenberg": [26, 27, 28, 29, 30, 31, 35, 93, 103, 105, 108, 146], "sqrt": 128, "squar": [31, 48, 108, 131], "squeez": [2, 3, 4, 26, 27, 28, 29, 30, 32], "src": 11, "ss3": 9, "ssl": [5, 18, 27], "ssvep": 46, "stabil": 128, "stabl": [2, 4, 5, 8, 16, 26, 72, 80, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 112, 113, 115, 131, 144, 146], "stack": [3, 8], "stage": [7, 13, 24, 29, 30, 32, 75, 80, 92, 94, 100, 109, 110, 111, 114, 115, 121, 125, 130, 132, 133, 135, 144, 146, 152, 153], "stager": 114, "stai": [16, 27, 74], "standard": [2, 3, 4, 5, 8, 9, 10, 11, 27, 28, 29, 30, 32, 36, 44, 49, 50, 51, 52, 63, 68, 81, 82, 123, 128, 153], "standard_1020": [49, 68], "standard_scal": [5, 9, 10], "standardscal": 5, "stanford": [2, 8, 73], "stanlei": [5, 9, 10, 11], "start": [3, 4, 5, 12, 14, 16, 22, 27, 28, 29, 30, 32, 46, 54, 65, 70, 72, 86, 104, 117, 122, 124, 125, 131, 149], "start_dim": [9, 10], "start_ind": 17, "start_offset_sampl": [2, 14, 22, 31, 124], "state": [32, 132, 133, 134, 135], "state_dict": 100, "static": [37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 73, 106], "statist": 12, "statu": 5, "std": [12, 29, 44, 63, 77], "std_train_scor": 4, "step": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 18, 22, 28, 29, 30, 32, 86, 92, 106, 125, 147, 153], "stft": 92, "still": [2, 3, 4, 5, 8, 9, 11, 27, 28, 29, 77, 104], "stim": [3, 4, 18, 20, 21, 27, 28, 29, 30, 32], "stim_channel": [17, 19], "stimuli": 77, "stimulu": [29, 30], "stochast": 31, "stop": [5, 32, 37, 57, 86, 124, 125, 143, 153], "stop_ind": 17, "stop_offset_sampl": [2, 14, 22, 31, 124, 153], "stopband": 16, "storag": 14, "store": [2, 4, 8, 9, 10, 11, 12, 14, 18, 22, 28, 29, 30, 32, 73, 75, 87, 153], "stori": [29, 32], "str": [14, 22, 26, 27, 28, 29, 36, 72, 73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 90, 93, 95, 100, 108, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 131, 139, 146], "straightforward": 104, "strategi": [4, 25, 29, 30], "strength": 4, "stricker": 79, "strictli": 5, "stride": [2, 9, 10, 11, 26, 27, 84, 85, 86, 93, 95, 100, 108, 113, 124, 125], "stride_before_pool": [14, 31, 93], "string": [21, 22, 26, 35, 40, 50, 51, 52, 72, 75, 119, 120, 121, 130, 131, 139], "strip": 14, "strohmeier": 35, "strong": [104, 106], "strongli": [2, 8, 18, 27, 28, 97, 98, 99], "structur": [4, 5, 16, 17, 19, 133, 134, 153], "studi": [4, 5, 7, 24, 91, 92, 104], "stumbl": 26, "style": [2, 5, 8, 27, 28, 50, 51, 52, 113], "st\u00f8rmer": 153, "sub": [27, 153], "sub_df": 16, "subclass": [89, 90, 95, 99], "subdirectori": [16, 18, 75, 130], "subj": [74, 77], "subj_test": 5, "subj_train": 5, "subj_valid": 5, "subject": [4, 5, 9, 10, 11, 12, 14, 18, 19, 20, 21, 22, 29, 37, 44, 54, 57, 63, 70, 73, 74, 76, 77, 78, 80, 104, 133], "subject_id": [2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 27, 28, 29, 30, 32, 73, 74, 77, 78, 80, 153], "sublayer_output": 10, "subplot": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 31], "subplots_adjust": 12, "subsequ": 117, "subset": [5, 8, 20, 29, 31, 75, 119, 120, 153], "subset_nam": 20, "substanti": [2, 3, 4, 5, 8, 9, 10, 11, 14, 19, 27, 28, 125], "suffici": 29, "suffix": [72, 131], "suggest": [37, 40, 44, 49, 50, 51, 52, 54, 57, 59, 63, 68, 86, 125], "sum": [32, 153], "summar": 14, "summari": [72, 100, 113, 131], "sun": [40, 59, 91, 92, 107], "super": [5, 32, 137, 138], "supervis": [1, 4, 6, 24, 29, 32, 75, 80, 92, 100, 110, 121, 125, 130, 133, 134, 144, 152, 153], "suppli": [2, 3, 5, 8, 9, 10, 11, 27, 28, 29], "support": [5, 9, 10, 11, 18, 27, 32, 72, 119, 122, 123, 129, 131, 153], "suppos": 26, "suppress": [48, 67, 74, 119], "supratak": 94, "supratak2017": 94, "suptitl": 12, "sure": 147, "surrog": [42, 62], "switch": [5, 32, 153], "sylvain": 153, "symmetr": 119, "synthet": 48, "system": [5, 9, 10, 46, 49, 68, 81, 82, 91, 94, 95, 97, 98, 110, 111, 119, 150], "systemat": 4, "t": [2, 4, 5, 11, 17, 19, 26, 27, 28, 29, 30, 31, 32, 42, 62, 72, 73, 74, 79, 93, 103, 105, 108, 115, 117, 127, 128, 131, 144, 146], "t0": 19, "t1": 19, "t2": 19, "t3": 12, "t4": 12, "t5": 12, "t6": 12, "t_filter": 113, "t_max": [2, 3, 4, 8, 27, 28, 29, 30, 31, 32], "tab": [2, 5, 8, 16, 27, 28], "tabl": [27, 28, 29, 30, 32, 89, 100, 153], "take": [9, 10, 11, 16, 17, 29, 31, 56, 87, 89, 90, 91, 92, 95, 99, 111], "taken": [2, 5, 8, 14], "tangermann": [26, 27, 28, 29, 30, 31, 35, 93, 103, 105, 108, 146], "tanh": 11, "tap": 77, "target": [2, 4, 5, 8, 9, 10, 15, 17, 18, 20, 23, 24, 27, 28, 29, 31, 47, 56, 66, 72, 73, 75, 76, 81, 83, 84, 86, 87, 124, 125, 131, 132, 133, 136, 137, 140, 141, 142, 146, 152, 153], "target_extractor": [137, 138, 139], "target_from": 26, "target_nam": [12, 14, 18, 22, 31, 75, 76, 79, 81, 82, 87, 153], "target_sfreq": [2, 8], "target_subset": 31, "target_transform": [2, 8, 9, 10, 75, 153], "targets_from": [2, 83, 124, 131], "task": [4, 9, 10, 11, 26, 30, 42, 62, 74, 76, 79, 134], "tau_max": 134, "tau_neg": [5, 134], "tau_po": [5, 134], "tb": 14, "tce": 111, "tcn": [26, 89, 153], "tcn_activ": 89, "tcn_depth": 89, "tcn_dropout": 89, "tcn_kernel_s": 89, "tcn_n_filter": 89, "techniqu": [40, 59, 119, 123], "tell": [3, 4, 147], "temp": [2, 8], "temp_filter_length": 90, "temp_filter_length_inp": 90, "temp_lay": 113, "temp_len": 113, "temp_span": 113, "temperatur": 80, "tempfil": [12, 16, 18], "templ": [12, 81, 82, 153], "tempor": [5, 9, 10, 14, 26, 89, 90, 93, 95, 96, 98, 106, 107, 108, 109, 110, 111, 112, 113, 115, 153], "temporalconv": 106, "temporari": [18, 153], "temporarydirectori": 16, "ten_twenty_montag": [49, 68], "tensor": [9, 10, 11, 22, 26, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 91, 92, 94, 95, 99, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 131, 136, 140, 141], "tensorboard": 32, "tensorboardx": 32, "tensorflow": 89, "teon": 35, "term": [2, 4, 8, 94, 100], "terri": 153, "test": [9, 10, 11, 16, 21, 24, 25, 27, 28, 30, 33, 72, 75, 77, 78, 100, 108, 121, 125, 128, 130, 131, 144, 152, 153], "test_acc": [29, 32], "test_accuraci": 32, "test_bal_acc": 5, "test_dataload": 32, "test_load": 32, "test_loss": 32, "test_model": 32, "test_sampl": 5, "test_set": [2, 8, 29, 31, 32], "test_siz": [5, 8, 29], "test_step": 32, "test_y_pr": 5, "text": [9, 10, 11, 29, 146], "textcolor": 146, "tf": [42, 62], "than": [2, 5, 8, 9, 10, 11, 12, 14, 16, 27, 32, 37, 46, 57, 65, 72, 79, 86, 119, 125, 131, 153], "thei": [2, 3, 4, 5, 8, 14, 16, 26, 27, 28, 29, 30, 32, 123, 153], "them": [3, 4, 5, 12, 14, 16, 17, 19, 26, 27, 29, 32, 72, 75, 89, 90, 91, 93, 94, 95, 99, 100, 103, 105, 106, 108, 109, 110, 111, 112, 115, 131, 151], "theo": [11, 153], "therefor": [2, 8, 12, 16, 27, 28, 29, 30, 32, 139], "thi": [0, 2, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 22, 31, 50, 51, 52, 72, 73, 74, 75, 77, 79, 80, 81, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 122, 123, 125, 127, 128, 130, 131, 133, 139, 144, 147, 151, 153], "thing": 151, "thinker": [113, 153], "thinkerinvari": 113, "third": 32, "third_kernel_s": [101, 102], "thirti": 91, "thoma": 153, "those": [2, 4, 5, 8, 12, 72, 119, 120, 131], "though": [14, 16, 29, 32], "thread": 14, "three": [4, 16, 29, 32, 72, 73, 79, 95, 97, 98, 104, 131, 147], "through": [3, 4, 11, 12, 14, 16, 20, 22, 27, 49, 68, 76, 83, 91, 94, 106, 109, 110, 111, 153], "throughout": [2, 8, 9, 10, 11, 28, 29, 32], "thu": [2, 4, 8, 117], "thumb": [2, 8, 27], "th\u00e9o": 153, "tibor": [35, 153], "tick_param": [2, 5, 8, 12, 27, 28], "tidnet": [26, 153], "tight": [72, 131], "tight_layout": [2, 4, 5, 8, 9, 10, 11, 27, 28, 30], "tii": 89, "time": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 46, 48, 55, 65, 67, 71, 72, 73, 75, 80, 83, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 122, 127, 128, 130, 131, 132, 136, 137, 140, 143, 153], "time_as_index": 117, "time_conv_size_": [110, 115], "time_frequ": 3, "time_start": [46, 65], "time_taken": 16, "timecrop": 153, "timedistribut": [9, 10, 153], "timeseri": 140, "timeseriesloss": 2, "timestep": 27, "titl": [3, 12, 29, 30, 35], "tmax": [2, 8, 12, 117], "tmin": [2, 8, 12, 16, 19, 117], "tmp": [16, 18], "tmp02g3g2nh": 16, "tmp20awutdi": 16, "tmp_dir": 16, "tmpdir": 18, "tmpdzyff2m3": 16, "tmpm7t97huv": 16, "tmpxsft3b79": 18, "tnsre": [10, 97, 98, 111], "to_csv": 14, "to_dense_prediction_model": [2, 27, 31, 100, 153], "to_list": [5, 9, 10, 11], "to_numpi": [31, 137, 138, 139], "tobia": 35, "todo": 2, "toe": 77, "togeth": [16, 27, 153], "token": 106, "tokenizor": 106, "toml": 153, "tone": 74, "tongu": [18, 21, 27, 28, 29, 30, 32, 74], "tonio": 35, "too": 11, "tool": [2, 4, 8, 80, 148, 151], "toolbox": 148, "top": [5, 9, 10, 11, 35], "topic": [1, 24, 35], "torch": [2, 3, 4, 5, 8, 9, 10, 11, 14, 22, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 131, 136, 140, 141, 142, 144, 153], "torch_stft": 92, "torchinfo": [27, 28, 29, 32, 100, 153], "torchmetr": 32, "torchvis": [2, 8, 28, 30], "total": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 74, 152], "total_tri": [74, 77], "tpu": 32, "tqdm": 32, "tr_idx": 29, "track_running_stat": 10, "tracker": 147, "tradeoff": 16, "tradit": 95, "train": [12, 14, 20, 21, 33, 72, 75, 77, 78, 83, 91, 100, 106, 108, 121, 125, 128, 130, 131, 144, 152, 153], "train_acc": 5, "train_accuraci": [3, 27, 28, 29, 30, 32], "train_bal_acc": [5, 9, 10, 11], "train_dataload": 32, "train_i": [4, 30], "train_indic": 29, "train_load": 32, "train_loss": [2, 3, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 72, 131], "train_misclass": [27, 28], "train_neg_root_mean_squared_error": 31, "train_one_epoch": 32, "train_pearson_r": 8, "train_r2": 8, "train_sampl": [5, 9, 10, 11], "train_set": [2, 3, 4, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32], "train_split": [2, 3, 4, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31, 72, 131], "train_subset": 29, "train_test_split": [5, 8, 29], "train_val_split": 29, "train_x": [4, 30], "train_y_pr": 5, "trainabl": [3, 4, 11, 26, 27, 28, 29, 32], "trained_model": 14, "trainer": 32, "training_scor": 4, "training_setup": 14, "training_setup_end": 14, "training_setup_start": 14, "training_step": 32, "tran": [5, 9, 10], "transact": [5, 10, 46, 89, 94, 95, 97, 98, 110, 111], "transax": 29, "transform": [2, 5, 8, 9, 10, 11, 20, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 76, 83, 84, 85, 86, 91, 92, 95, 100, 106, 107, 131, 153], "transformerencod": 95, "transforms_freq": 4, "transforms_spati": 4, "transforms_tim": 4, "transit": [16, 37, 57, 119], "translat": 3, "transposit": 153, "tremend": 106, "trend": 31, "tri": 139, "trial": [2, 3, 4, 8, 19, 21, 27, 28, 29, 30, 31, 32, 48, 67, 72, 74, 77, 84, 86, 125, 131, 137, 138, 142, 143, 153], "trial_label": [72, 131, 142], "trial_predict": [72, 131, 142], "trial_start_offset_sampl": [3, 4, 5, 9, 10, 11, 18, 19, 21, 27, 28, 29, 30, 32, 86, 125], "trial_start_offset_second": [3, 4, 27, 28, 29, 30, 32], "trial_stop_offset_sampl": [3, 4, 5, 9, 10, 11, 18, 19, 21, 27, 28, 29, 30, 31, 32, 86, 125, 153], "trial_stop_offset_second": [29, 30], "trialwis": [2, 4, 8, 20, 27, 28, 30, 72, 131, 142, 153], "trigger": 11, "troubleshoot": 150, "true": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 47, 49, 50, 51, 52, 72, 75, 76, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 121, 123, 124, 125, 126, 129, 131, 134, 135, 137, 138, 139, 142, 144, 153], "truncat": 106, "trust": 4, "trustworthi": [28, 29, 30], "truth": 31, "try": [3, 4, 12, 18, 22, 24, 30, 147, 151], "tsne": 5, "tugraz": [18, 27], "tuh": [7, 13, 14, 15, 23, 24, 75, 82, 91, 121, 124, 130, 152, 153], "tuh_eeg": [12, 14, 22, 81, 82], "tuh_eeg_abnorm": 14, "tuh_path": [12, 14, 22], "tuh_preproc": 12, "tuh_window": [12, 22], "tuhabnorm": [14, 18, 153], "tuk": [5, 9, 10, 11], "tune": [24, 25, 32, 33, 75, 78, 95, 100, 108, 121, 125, 128, 130, 144, 152, 153], "tuning_playbook": 30, "tupl": [29, 30, 47, 56, 66, 72, 76, 80, 81, 82, 91, 100, 116, 122, 129, 131, 134, 146], "tutori": [2, 3, 4, 5, 8, 9, 10, 11, 22, 24, 26, 27, 28, 29, 30, 32, 151, 153], "tuzel": [37, 44, 54, 57, 63, 70], "tweak": 29, "twelfth": 106, "twenti": 74, "twice": 119, "twinx": [2, 5, 8, 27, 28], "two": [4, 5, 9, 10, 11, 12, 14, 16, 18, 27, 29, 32, 47, 54, 66, 74, 77, 80, 99, 104, 106, 109, 119, 122, 123, 134, 135, 141, 153], "type": [2, 3, 4, 8, 11, 26, 27, 28, 29, 32, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 54, 66, 72, 75, 77, 84, 85, 86, 87, 92, 99, 100, 104, 106, 107, 114, 116, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 133, 135, 141, 143, 146, 153], "typic": [27, 72, 117, 131], "u": [3, 5, 7, 13, 24, 30, 75, 80, 100, 115, 121, 125, 130, 132, 133, 135, 144, 146, 151, 152, 153], "ufabc": 4, "ul": 79, "ultim": 14, "ultrabold": 146, "ultralight": 146, "umap": 5, "unabl": 4, "unaffect": [72, 131], "uncov": [4, 5, 134], "undefinedmetricwarn": 10, "under": [5, 14, 73, 130, 151, 153], "underli": [2, 5, 8, 28, 30, 121], "underscore_cas": 0, "understand": [5, 24, 29, 104], "unexpect": 147, "unfilt": 129, "unifi": 153, "uniform": 56, "uniformli": [42, 47, 49, 50, 51, 52, 62, 132], "uniniti": [4, 72, 131], "uninstanti": [72, 131], "unintend": 111, "uniqu": [5, 9, 10, 11, 21, 72, 76, 79, 131], "unit": [11, 26, 119, 151], "unit_mul": 26, "univers": [12, 77, 81, 82, 153], "unknown": [31, 139], "unlabel": 5, "unless": [5, 32, 131], "unmodifi": [72, 131], "unoffici": 107, "unpickl": [5, 72, 131], "unreli": 29, "unseen": 29, "until": [29, 74], "untrac": 153, "untrust": 5, "unverifi": [18, 27], "up": [16, 17, 74, 115, 122, 153], "updat": [32, 72, 73, 75, 76, 83, 86, 125, 129, 131, 150, 153], "update_path": [17, 19], "upfirdn": 122, "upon": [18, 26], "upper": [12, 16, 119], "upsampl": [11, 115, 122], "upward": 77, "url": 35, "urllib3": [18, 27], "us": [2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 35, 37, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 55, 58, 60, 62, 63, 67, 68, 72, 74, 77, 79, 83, 89, 92, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 109, 112, 113, 117, 119, 120, 122, 123, 131, 139, 142, 147, 150, 151, 152, 153], "usag": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 147, 153], "use_abs_pos_emb": 106, "use_cach": [72, 131, 137, 138], "use_deterministic_algorithm": 144, "use_log_softmax": 153, "use_mean_pool": 106, "use_mlp": 90, "use_mne_epoch": [125, 153], "user": [5, 27, 72, 131, 147, 149, 150, 153], "userwarn": [2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 18, 19, 27, 28, 29, 30, 31, 32], "usleep": [11, 26, 153], "usual": [2, 3, 4, 8, 16, 29, 32, 72, 131], "util": [2, 3, 4, 5, 8, 9, 10, 11, 14, 18, 22, 26, 27, 28, 30, 31, 32, 72, 131, 153], "uv": [2, 3, 4, 5, 8, 9, 10, 12, 27, 28, 29, 30, 32], "v": [2, 3, 4, 5, 8, 9, 10, 12, 16, 27, 28, 29, 30, 32, 97, 98, 101, 102, 104, 112], "v1": [22, 32], "v2": [14, 106], "v4": 102, "v_": 128, "v_num": 32, "v_t": 128, "val_idx": 29, "val_indic": 29, "val_subset": 29, "valentin": 153, "valid": [2, 21, 26, 27, 31, 32, 72, 111, 123, 124, 125, 131, 139, 140, 153], "valid_acc": [3, 5, 9, 10, 11, 26, 28, 29, 30], "valid_accuraci": [3, 27, 28, 29, 30], "valid_bal_acc": [5, 9, 10, 11], "valid_loss": [2, 3, 5, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31], "valid_misclass": [27, 28], "valid_neg_root_mean_squared_error": 31, "valid_pearson_r": 8, "valid_r2": 8, "valid_sampl": [5, 9, 10, 11], "valid_set": [2, 3, 8, 9, 10, 11, 27, 28, 31], "valid_y_pr": 5, "validation_scor": 4, "validsplit": [26, 30, 72, 131], "valu": [2, 4, 5, 8, 9, 10, 11, 12, 26, 27, 28, 30, 31, 32, 43, 47, 66, 72, 75, 76, 83, 86, 99, 104, 106, 113, 119, 120, 122, 123, 124, 125, 131, 140, 141, 142, 153], "valueerror": [14, 26, 31, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "vaquerizo": [97, 98], "var_nam": [3, 4, 11, 26, 27, 28, 29, 32, 100], "variabl": [2, 4, 8, 29, 30, 73, 144], "varianc": [29, 30, 128], "varun": 30, "vazquez": [97, 98], "ve": 147, "vector": [9, 10, 106, 119, 122], "verbos": [2, 3, 4, 8, 29, 30, 72, 73, 117, 119, 120, 122, 123, 124, 125, 126, 131, 153], "veri": [11, 29, 32, 75, 104, 125, 130], "verif": [18, 27], "verifi": 151, "version": [2, 3, 4, 5, 9, 10, 18, 20, 21, 22, 29, 30, 31, 72, 79, 90, 91, 92, 95, 100, 104, 106, 107, 117, 118, 119, 120, 122, 123, 131, 147, 149, 150, 151], "version_0": 32, "versu": 31, "vertic": 119, "verticalalign": 29, "via": [5, 26, 28, 29, 30, 115, 119, 149, 150, 153], "view": [2, 4, 8, 22, 73], "villar": [97, 98], "vinai": [28, 29, 30], "viridi": 5, "virtual": 123, "vision": 99, "visit": [26, 29], "visual": [2, 8, 9, 10, 11, 12, 26, 27, 28, 30, 31, 35, 77, 93, 95, 103, 105, 106, 108, 148, 153], "vmax": 146, "vmin": 146, "vol": [10, 111], "volt": 12, "volta": [72, 131], "volum": 35, "volv": 77, "vqsnp": 106, "vytauta": 153, "w": [5, 9, 10, 11, 12, 27, 28, 29, 30, 79, 107], "w_1": 10, "w_2": 10, "wa": [4, 5, 9, 10, 11, 27, 28, 29, 32, 72, 74, 77, 91, 95, 111, 119, 131, 132, 153], "wai": [2, 5, 8, 16, 21, 24, 26, 29, 111, 149, 151], "wainrib": [5, 9, 10, 110], "wake": [9, 10, 11, 80], "wang": [44, 63], "want": [12, 14, 18, 21, 22, 24, 28, 29, 30, 32, 72, 131, 148, 151], "warm": [72, 131], "warm_start": [72, 131], "warn": [2, 3, 4, 5, 8, 9, 10, 12, 14, 16, 18, 19, 27, 28, 29, 30, 31, 32, 74, 111, 118, 124, 125, 144, 153], "wave": [5, 9, 10, 11], "waytowich": [101, 102], "we": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 35, 77, 91, 95, 131, 144, 147, 150, 151], "websit": 4, "wei": 106, "weight": [5, 9, 10, 11, 29, 30, 32, 89, 91, 106, 146], "weight_decai": [2, 3, 4, 8, 27, 28, 29, 32], "weights_onli": 5, "welcom": 22, "well": [2, 5, 8, 12, 26, 27, 28, 29, 32, 86, 125, 148, 153], "wenlong": 46, "were": [2, 8, 9, 11, 14, 19, 26, 30, 74, 75, 77, 95, 109, 119, 153], "westov": [40, 59, 91, 92, 107], "what": [26, 29, 72, 89, 124, 125, 131], "whatev": [72, 131], "whats_new": 153, "when": [5, 9, 10, 11, 14, 16, 22, 27, 29, 32, 35, 41, 42, 49, 50, 51, 52, 56, 62, 68, 72, 73, 78, 84, 85, 86, 89, 95, 115, 118, 119, 120, 122, 123, 124, 125, 130, 131, 144, 147, 153], "whenev": 16, "where": [2, 4, 5, 8, 9, 10, 22, 27, 28, 29, 37, 46, 47, 49, 54, 57, 65, 66, 68, 70, 72, 73, 75, 84, 104, 106, 130, 131, 142, 144, 153], "whether": [5, 14, 26, 38, 39, 40, 42, 48, 49, 50, 51, 52, 53, 55, 56, 62, 68, 72, 75, 83, 84, 85, 86, 87, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 112, 113, 115, 124, 129, 130, 131, 134, 139, 144, 147], "which": [2, 3, 4, 5, 8, 9, 10, 11, 14, 16, 19, 20, 21, 24, 26, 27, 29, 30, 32, 35, 36, 39, 42, 48, 49, 60, 62, 67, 68, 72, 75, 76, 77, 83, 100, 104, 111, 114, 119, 122, 123, 125, 131, 133, 134, 135, 147], "while": [4, 5, 14, 29, 32, 77, 89, 90, 95, 99, 104, 109, 143], "white": [44, 63], "whitespac": 153, "who": 148, "whole": [2, 8, 9, 10], "whose": [72, 86, 125, 131], "wide": 99, "width": [12, 30, 104, 113, 119], "wil": 20, "wild": [91, 92, 107], "wilson": [20, 153], "wimpff": [90, 153], "win_len_": 14, "winddow_size_sampl": 124, "window": [14, 16, 18, 19, 21, 26, 72, 75, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 124, 125, 131, 132, 133, 134, 135, 142, 143, 153], "window_ind": 17, "window_kwarg": [27, 28, 75], "window_len": 140, "window_len_": 14, "window_len_sampl": 14, "window_preproc_kwarg": 75, "window_s": 153, "window_size_": [5, 9, 10, 11], "window_size_sampl": [2, 5, 8, 9, 10, 11, 12, 14, 17, 19, 22, 27, 31, 84, 85, 86, 124, 125, 126], "window_stride_sampl": [2, 5, 9, 10, 11, 12, 14, 17, 19, 22, 27, 31, 84, 85, 86, 124, 125], "windows_d": [14, 16], "windows_dataset": [3, 4, 5, 8, 9, 10, 11, 17, 18, 19, 27, 28, 29, 30, 31, 32, 84, 85, 86, 124, 125], "windows_dataset_load": 18, "windowsattentionblock": 106, "windowsdataset": [3, 18, 26, 75, 84, 85, 86, 87, 124, 125, 130, 131, 153], "winner": [97, 98], "wise": [3, 4, 5, 9, 10, 11], "with_f1_scor": 146, "with_skip_connect": [11, 115], "within": [3, 4, 77, 89, 90, 95, 99, 104, 113, 134, 153], "withinconsist": 86, "without": [16, 26, 27, 29, 30, 32, 72, 131, 141, 153], "wolfram": 35, "work": [2, 3, 4, 5, 8, 9, 10, 12, 16, 18, 19, 20, 22, 24, 27, 28, 29, 30, 31, 32, 72, 92, 100, 115, 117, 131, 139, 148, 150, 153], "worker": [14, 32, 142, 153], "worker_init_fn": 14, "world": [32, 92], "wors": 139, "would": [3, 26, 27, 29, 32, 72, 93, 108, 131], "wrap": [5, 26, 32, 75, 122], "wrapper": [26, 28, 29, 91], "write": [16, 18], "written": [11, 130, 149], "wrong": 153, "wspace": 12, "wu": 94, "www": [12, 14, 35, 73, 81, 82], "x": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 84, 85, 86, 89, 90, 91, 92, 94, 95, 99, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 122, 127, 128, 131, 136, 139, 140, 142], "x1": [5, 134], "x2": [5, 134], "x27": 4, "x_i": 17, "x_t": [127, 128], "x_tr": 3, "x_train": 29, "xiao": 92, "xlabel": [3, 12, 29, 30], "xlim": 12, "xxx": 14, "y": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 84, 85, 86, 94, 95, 99, 122, 131, 139], "y1": 5, "y2": 5, "y_estim": 31, "y_gt": 31, "y_hat": 32, "y_i": 17, "y_pred": [5, 9, 10, 11, 27, 28, 72, 115, 138], "y_proba": [72, 131], "y_test": [2, 8, 29], "y_train": [2, 8, 9, 10, 11, 29], "y_true": [5, 9, 10, 11, 27, 28, 72], "y_valid": [2, 8], "yang": [90, 91, 92, 107], "yang2021": 92, "yang2023": 91, "yann": [47, 66, 141], "yao2001": 123, "yassin": [104, 153], "yassine2023": 104, "yassine2023cod": 104, "ycq091044": [91, 92, 107], "ye": 106, "year": [12, 35], "yerr": 4, "yet": [17, 19, 100, 151], "yield": [5, 14, 20, 74, 113, 147], "ylabel": [3, 12, 30], "ylgnbu": 30, "ylim": 12, "yml": 153, "yonghao": 153, "you": [2, 3, 4, 5, 8, 9, 11, 12, 16, 17, 18, 19, 21, 22, 24, 27, 28, 29, 32, 35, 72, 131, 139, 147, 149, 150, 151], "your": [2, 8, 14, 16, 21, 24, 25, 27, 28, 30, 33, 35, 72, 75, 78, 89, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 112, 113, 115, 121, 125, 128, 130, 131, 144, 147, 149, 152], "ys1": 5, "ys2": 5, "ytick": 12, "z": [5, 9, 10, 31, 49, 52, 68, 107, 112], "z1": 5, "z2": 5, "zachari": 30, "zamboni": 153, "zeghidour": [38, 39, 58, 60], "zenodo": 35, "zerfowski": 90, "zero": [11, 16, 46, 54, 65, 70, 119, 122, 125, 128, 153], "zero_divis": 10, "zero_grad": [14, 32], "zhang": [47, 66, 99, 141], "zhao": 106, "zheng": 95, "zhiliang": 106, "zhong": [44, 63], "zip": [2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32], "zipbal": 151, "zk881ps0522": [2, 8, 73], "zscore": 153, "zwinderman": [5, 9, 10, 11], "\u015bliwowski": 153, "\u03bcv": 74, "\u03c6max": 4}, "titles": ["API Reference", "Advanced neural network training strategies", "Fingers flexion cropped decoding on BCIC IV 4 ECoG Dataset", "Data Augmentation on BCIC IV 2a Dataset", "Searching the best data augmentation on BCIC IV 2a Dataset", "Self-supervised learning on EEG with relative positioning", "Computation times", "Applied examples on real-world datasets", "Fingers flexion decoding on BCIC IV 4 ECoG Dataset", "Sleep staging on the Sleep Physionet dataset using Chambon2018 network", "Sleep staging on the Sleep Physionet dataset using Eldele2021", "Sleep staging on the Sleep Physionet dataset using U-Sleep network", "Process a big data EEG resource (TUH EEG Corpus)", "Computation times", "Benchmarking eager and lazy loading", "Loading and organizing data", "Benchmarking preprocessing with parallelization and serialization", "Custom Dataset Example", "Load and save dataset example", "MNE Dataset Example", "MOABB Dataset Example", "Split Dataset Example", "Multiple discrete targets with the TUH EEG Corpus", "Computation times", "Examples", "Basic model building and training", "Simple training on MNE epochs", "Cropped Decoding on BCIC IV 2a Dataset", "Basic Brain Decoding on EEG Data", "How to train, test and tune your model?", "Hyperparameter tuning with scikit-learn", "Convolutional neural network regression model on fake data.", "Training a Braindecode model in PyTorch", "Computation times", "Computation times", "How to cite Braindecode", "braindecode.augmentation.AugmentedDataLoader", "braindecode.augmentation.BandstopFilter", "braindecode.augmentation.ChannelsDropout", "braindecode.augmentation.ChannelsShuffle", "braindecode.augmentation.ChannelsSymmetry", "braindecode.augmentation.Compose", "braindecode.augmentation.FTSurrogate", "braindecode.augmentation.FrequencyShift", "braindecode.augmentation.GaussianNoise", "braindecode.augmentation.IdentityTransform", "braindecode.augmentation.MaskEncoding", "braindecode.augmentation.Mixup", "braindecode.augmentation.SegmentationReconstruction", "braindecode.augmentation.SensorsRotation", "braindecode.augmentation.SensorsXRotation", "braindecode.augmentation.SensorsYRotation", "braindecode.augmentation.SensorsZRotation", "braindecode.augmentation.SignFlip", "braindecode.augmentation.SmoothTimeMask", "braindecode.augmentation.TimeReverse", "braindecode.augmentation.Transform", "braindecode.augmentation.functional.bandstop_filter", "braindecode.augmentation.functional.channels_dropout", "braindecode.augmentation.functional.channels_permute", "braindecode.augmentation.functional.channels_shuffle", "braindecode.augmentation.functional.frequency_shift", "braindecode.augmentation.functional.ft_surrogate", "braindecode.augmentation.functional.gaussian_noise", "braindecode.augmentation.functional.identity", "braindecode.augmentation.functional.mask_encoding", "braindecode.augmentation.functional.mixup", "braindecode.augmentation.functional.segmentation_reconstruction", "braindecode.augmentation.functional.sensors_rotation", "braindecode.augmentation.functional.sign_flip", "braindecode.augmentation.functional.smooth_time_mask", "braindecode.augmentation.functional.time_reverse", "braindecode.classifier.EEGClassifier", "braindecode.datasets.BCICompetitionIVDataset4", "braindecode.datasets.BNCI2014001", "braindecode.datasets.BaseConcatDataset", "braindecode.datasets.BaseDataset", "braindecode.datasets.HGD", "braindecode.datasets.MOABBDataset", "braindecode.datasets.NMT", "braindecode.datasets.SleepPhysionet", "braindecode.datasets.TUH", "braindecode.datasets.TUHAbnormal", "braindecode.datasets.WindowsDataset", "braindecode.datasets.create_from_X_y", "braindecode.datasets.create_from_mne_epochs", "braindecode.datasets.create_from_mne_raw", "braindecode.datautil.load_concat_dataset", "braindecode.datautil.save_concat_dataset", "braindecode.models.ATCNet", "braindecode.models.AttentionBaseNet", "braindecode.models.BIOT", "braindecode.models.ContraWR", "braindecode.models.Deep4Net", "braindecode.models.DeepSleepNet", "braindecode.models.EEGConformer", "braindecode.models.EEGITNet", "braindecode.models.EEGInception", "braindecode.models.EEGInceptionERP", "braindecode.models.EEGInceptionMI", "braindecode.models.EEGModuleMixin", "braindecode.models.EEGNetv1", "braindecode.models.EEGNetv4", "braindecode.models.EEGResNet", "braindecode.models.EEGSimpleConv", "braindecode.models.HybridNet", "braindecode.models.Labram", "braindecode.models.SPARCNet", "braindecode.models.ShallowFBCSPNet", "braindecode.models.SleepStagerBlanco2020", "braindecode.models.SleepStagerChambon2018", "braindecode.models.SleepStagerEldele2021", "braindecode.models.TCN", "braindecode.models.TIDNet", "braindecode.models.TimeDistributed", "braindecode.models.USleep", "braindecode.models.get_output_shape", "braindecode.preprocessing.Crop", "braindecode.preprocessing.DropChannels", "braindecode.preprocessing.Filter", "braindecode.preprocessing.Pick", "braindecode.preprocessing.Preprocessor", "braindecode.preprocessing.Resample", "braindecode.preprocessing.SetEEGReference", "braindecode.preprocessing.create_fixed_length_windows", "braindecode.preprocessing.create_windows_from_events", "braindecode.preprocessing.create_windows_from_target_channels", "braindecode.preprocessing.exponential_moving_demean", "braindecode.preprocessing.exponential_moving_standardize", "braindecode.preprocessing.filterbank", "braindecode.preprocessing.preprocess", "braindecode.regressor.EEGRegressor", "braindecode.samplers.BalancedSequenceSampler", "braindecode.samplers.RecordingSampler", "braindecode.samplers.RelativePositioningSampler", "braindecode.samplers.SequenceSampler", "braindecode.training.CroppedLoss", "braindecode.training.CroppedTimeSeriesEpochScoring", "braindecode.training.CroppedTrialEpochScoring", "braindecode.training.PostEpochTrainScoring", "braindecode.training.TimeSeriesLoss", "braindecode.training.mixup_criterion", "braindecode.training.predict_trials", "braindecode.training.trial_preds_from_window_preds", "braindecode.util.set_random_seeds", "braindecode.visualization.compute_amplitude_gradients", "braindecode.visualization.plot_confusion_matrix", "Frequently Asked Questions (FAQ)", "Braindecode", "Installation", "Installing from PyPI", "Installing from sources", "Computation times", "What\u2019s new"], "titleterms": {"": [29, 153], "0": 153, "06": 153, "07": 153, "1": [29, 32, 153], "10": 153, "11": 153, "12": 153, "14": 153, "2": [29, 32], "2021": 153, "2022": 153, "2a": [3, 4, 27], "3": 29, "4": [2, 8], "5": 153, "6": 153, "7": 153, "8": 153, "9": 153, "By": 21, "about": [29, 32], "advanc": [1, 24], "algorithm": 35, "an": [3, 4], "analys": 4, "api": [0, 153], "appli": [7, 24], "ask": 147, "atcnet": 89, "attentionbasenet": 90, "augment": [0, 3, 4, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "augmenteddataload": 36, "author": 153, "balancedsequencesampl": 132, "bandstop_filt": 57, "bandstopfilt": 37, "baseconcatdataset": 75, "basedataset": 76, "basic": [24, 25, 28], "bcic": [2, 3, 4, 8, 27], "bcicompetitionivdataset4": 73, "benchmark": [14, 16], "best": [4, 30], "between": 31, "big": 12, "biot": 91, "bnci2014001": 74, "brain": 28, "braindecod": [26, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151], "bug": [147, 153], "build": [24, 25], "can": 147, "care": [29, 32], "chambon2018": 9, "chang": 153, "channels_dropout": 58, "channels_permut": 59, "channels_shuffl": 60, "channelsdropout": 38, "channelsshuffl": 39, "channelssymmetri": 40, "choos": 31, "cite": [35, 147], "classifi": [0, 72], "clone": 151, "cnn": 31, "combin": 12, "compat": 26, "compos": [3, 41], "comput": [2, 6, 8, 12, 13, 23, 27, 28, 30, 32, 33, 34, 152], "compute_amplitude_gradi": 145, "conclus": 5, "confus": [27, 28], "contrawr": 92, "convolut": 31, "corpu": [12, 22], "cover": [3, 4, 5, 12, 21, 26, 27, 28, 29, 30, 32], "cpu": 31, "creat": [2, 3, 4, 5, 8, 9, 10, 11, 12, 22, 27, 28, 29, 30, 32], "create_fixed_length_window": 124, "create_from_mne_epoch": 85, "create_from_mne_raw": 86, "create_from_x_i": 84, "create_windows_from_ev": 125, "create_windows_from_target_channel": 126, "crop": [2, 27, 117], "croppedloss": 136, "croppedtimeseriesepochscor": 137, "croppedtrialepochscor": 138, "cross": 29, "current": 153, "custom": 17, "cut": [2, 8, 12, 27, 32], "data": [0, 3, 4, 12, 15, 22, 24, 26, 27, 28, 29, 31], "dataload": 22, "dataset": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "datautil": [87, 88], "decod": [2, 8, 27, 28], "deep4net": 93, "deepsleepnet": 94, "defin": [3, 4, 29, 31, 32], "descript": 21, "desir": [3, 4], "dev0": 153, "discret": 22, "do": [30, 147], "document": 26, "dropchannel": 118, "eager": 14, "ecog": [2, 8], "eeg": [5, 12, 22, 28], "eegclassifi": [3, 4, 72], "eegconform": 95, "eegincept": 97, "eeginceptionerp": 98, "eeginceptionmi": 99, "eegitnet": 96, "eegmodulemixin": 100, "eegnetv1": 101, "eegnetv4": 102, "eegregressor": 131, "eegresnet": 103, "eegsimpleconv": 104, "eldele2021": 10, "enhanc": 153, "epoch": 26, "etc": [29, 32], "evalu": [29, 31, 32], "examin": 26, "exampl": [3, 4, 5, 7, 12, 17, 18, 19, 20, 21, 24, 26, 27, 28, 29, 30, 32, 36, 38, 41, 42, 43, 53, 54, 56, 73, 75, 76, 78, 80, 81, 82, 84, 85, 86, 87, 93, 100, 108, 110, 111, 114, 115, 116, 121, 124, 125, 126, 128, 130, 133, 134, 135, 136, 137, 138, 140, 144, 146], "explor": [22, 26], "exponential_moving_demean": 127, "exponential_moving_standard": 128, "extract": [3, 4, 5, 9, 10, 11, 28, 29, 30], "fake": 31, "faq": 147, "filter": 119, "filterbank": 129, "find": 26, "finger": [2, 8], "first": 29, "fit": 4, "flexion": [2, 8], "fold": 29, "found": 147, "frequency_shift": 61, "frequencyshift": 43, "frequent": 147, "from": [150, 151], "ft_surrog": 62, "ftsurrog": 42, "function": [29, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "gaussian_nois": 63, "gaussiannois": 44, "gener": 31, "get": [30, 147], "get_output_shap": 116, "github": 151, "gpu": 31, "help": 147, "hgd": 77, "homepag": 148, "hospit": 22, "how": [29, 32, 35, 147], "hybridnet": 105, "hyperparamet": [29, 30], "i": [29, 32, 147, 151], "ident": 64, "identitytransform": 45, "index": 21, "inform": 21, "inspect": 5, "instal": [149, 150, 151], "iv": [2, 3, 4, 8, 27], "k": 29, "labram": 106, "lazi": 14, "learn": [5, 26, 30], "let": 29, "level": 3, "lightn": 32, "list": 4, "load": [2, 3, 4, 5, 8, 9, 10, 11, 14, 15, 18, 21, 24, 26, 27, 28, 29, 30, 32], "load_concat_dataset": 87, "loop": 32, "manipul": 3, "manual": 3, "mask_encod": 65, "maskencod": 46, "matrix": [27, 28], "mixup": [47, 66], "mixup_criterion": 141, "mne": [19, 26, 35], "moabb": 20, "moabbdataset": 78, "model": [0, 2, 3, 4, 5, 8, 9, 10, 11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "multipl": 22, "need": 30, "network": [1, 9, 11, 24, 30, 31], "neural": [1, 24, 30, 31], "new": 153, "nmt": 79, "observ": 21, "offlin": 32, "one": 3, "onlin": 26, "option": [29, 32], "organ": [15, 24], "other": 35, "own": 26, "parallel": 16, "paramet": 27, "perform": 5, "physionet": [9, 10, 11], "pick": 120, "plot": [2, 4, 8, 9, 10, 11, 27, 28, 30], "plot_confusion_matrix": 146, "posit": 5, "postepochtrainscor": 139, "predict_tri": 142, "prepar": [2, 8, 28], "preprocess": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 27, 28, 29, 30, 32, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "preprocessor": 121, "pretext": 5, "process": 12, "processor": 31, "pure": 32, "pypi": 150, "python": 147, "pytorch": 32, "question": 147, "raw": [5, 32], "real": [7, 24], "record": [5, 12], "recordingsampl": 133, "refer": [0, 4, 5, 9, 10, 11, 26, 27, 28, 29, 30, 31, 147], "regress": 31, "regressor": [0, 131], "rel": 5, "relativepositioningsampl": 134, "repositori": 151, "represent": 5, "resampl": 122, "resourc": 12, "result": [2, 4, 5, 8, 9, 10, 11, 27, 28, 30], "row": 21, "sampler": [0, 5, 9, 10, 11, 132, 133, 134, 135], "save": 18, "save_concat_dataset": 88, "scikit": [26, 30], "search": 4, "second": 29, "segmentation_reconstruct": 67, "segmentationreconstruct": 48, "select": 12, "self": 5, "sensors_rot": 68, "sensorsrot": 49, "sensorsxrot": 50, "sensorsyrot": 51, "sensorszrot": 52, "sequenc": [9, 10, 11], "sequencesampl": 135, "serial": 16, "session": 3, "set": [3, 5, 28], "set_random_se": 144, "seteegrefer": 123, "shallowfbcspnet": 108, "should": [29, 32], "sign_flip": 69, "signflip": 53, "simpl": [26, 29], "sleep": [5, 9, 10, 11], "sleepphysionet": 80, "sleepstagerblanco2020": 109, "sleepstagerchambon2018": 110, "sleepstagereldele2021": 111, "smooth_time_mask": 70, "smoothtimemask": 54, "sourc": 151, "sparcnet": 107, "split": [2, 3, 4, 5, 8, 9, 10, 11, 21, 27, 28, 29, 30, 32], "stage": [5, 9, 10, 11], "step": 12, "still": 147, "strategi": [1, 24], "structur": 32, "summari": [74, 77], "supervis": 5, "t": 147, "target": 22, "task": 5, "tcn": 112, "templ": 22, "test": [2, 5, 8, 29, 31, 32, 151], "thi": [3, 4, 5, 12, 21, 26, 27, 28, 29, 30, 32], "think": 147, "third": 29, "tidnet": 113, "time": [6, 13, 23, 33, 34, 152], "time_revers": 71, "timedistribut": 114, "timerevers": 55, "timeseriesloss": 140, "train": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 136, 137, 138, 139, 140, 141, 142, 143], "transform": [3, 4, 32, 56], "trial_preds_from_window_pr": 143, "tuh": [12, 22, 81], "tuhabnorm": 82, "tuhmock": 12, "tune": [29, 30], "u": 11, "univers": 22, "us": [5, 9, 10, 11, 12, 36, 38, 41, 42, 43, 53, 54, 56, 73, 75, 76, 78, 80, 81, 82, 84, 85, 86, 87, 93, 100, 108, 110, 111, 114, 115, 116, 121, 124, 125, 126, 128, 130, 133, 134, 135, 136, 137, 138, 140, 144, 146], "usleep": 115, "util": [0, 29, 144], "val": 29, "valid": [3, 4, 5, 8, 9, 10, 11, 28, 29, 30], "version": 153, "visual": [0, 3, 5, 29, 145, 146], "want": 26, "what": [147, 153], "why": [29, 30, 32], "window": [2, 3, 4, 5, 8, 9, 10, 11, 12, 22, 27, 28, 29, 30, 31, 32], "windowsdataset": 83, "work": [147, 151], "world": [7, 24], "you": [26, 30], "your": [26, 29, 32, 151]}})